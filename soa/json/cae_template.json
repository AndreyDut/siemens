{
    "BusinessObjectInterface": [
      {
        "createRelease": "tc13000.2.0",
        "description": "Interface Name for Business Object CAE01DAnalysisRevision",
        "libraryName": "CAE0SimulationProcessManagement",
        "name": "CAE01DAnalysisRevision",
        "namespace": "cae",
        "primaryInterface": "true",
        "typeName": "CAE01DAnalysisRevision"
      },
      {
        "createRelease": "tc11000.2.3",
        "description": "Interface Name for Business Object CAE0Config",
        "libraryName": "CAE0SimulationProcessManagement",
        "name": "CAE0Config",
        "namespace": "cae",
        "primaryInterface": "true",
        "typeName": "CAE0Config"
      },
      {
        "createRelease": "tc11000.2.3",
        "description": "Interface Name for Business Object CAE0ConfigRevision",
        "libraryName": "CAE0SimulationProcessManagement",
        "name": "CAE0ConfigRevision",
        "namespace": "cae",
        "primaryInterface": "true",
        "typeName": "CAE0ConfigRevision"
      },
      {
        "createRelease": "tc11000.5.0",
        "description": "Interface Name for Business Object CAE0FileCollection",
        "libraryName": "CAE0SimulationProcessManagement",
        "name": "CAE0FileCollection",
        "namespace": "cae",
        "primaryInterface": "true",
        "typeName": "CAE0FileCollection"
      },
      {
        "createRelease": "tc11000.5.0",
        "description": "Interface Name for Business Object CAE0MDOAnalysisRevision",
        "libraryName": "CAE0SimulationProcessManagement",
        "name": "CAE0MDOAnalysisRevision",
        "namespace": "cae",
        "primaryInterface": "true",
        "typeName": "CAE0MDOAnalysisRevision"
      },
      {
        "createRelease": "tc11000.5.0",
        "description": "Interface Name for Business Object CAE0StrMapFilterRelation",
        "libraryName": "CAE0SimulationProcessManagement",
        "name": "CAE0StrMapFilterRelation",
        "namespace": "cae",
        "primaryInterface": "true",
        "typeName": "CAE0StrMapFilterRelation"
      }
    ],
    "Date": "Sun Mar 07 10:20:31 PM 2021",
    "Library": [
      {
        "DependentOn": [
          {
            "name": "metaframework"
          },
          {
            "name": "tccore"
          },
          {
            "name": "tc"
          },
          {
            "name": "cxpom"
          },
          {
            "name": "cae"
          }
        ],
        "createRelease": "tc10000.1.0",
        "description": "CAE0SimulationProcessManagement",
        "isThirdParty": "false",
        "name": "CAE0SimulationProcessManagement",
        "namespace": "",
        "serviceLibrary": "false"
      },
      {
        "DependentOn": [
          {
            "name": "CAE0SimulationProcessManagement"
          }
        ],
        "createRelease": "tc10000.1.0",
        "description": "Library for Teamcenter for Simulation Process Status Object related Services",
        "isThirdParty": "false",
        "name": "CAE0SoaSimProc",
        "namespace": "CAE0::Soa::SimProc",
        "serviceLibrary": "true"
      }
    ],
    "Operation": [
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "a new operation cloneTool2 is created which will take the tool ID and tool revision as input.",
            "deprecatedRelease": "tc11000.2.2"
          }
        ],
        "ParameterInfo": [
          {
            "description": "This is an array of the tools to be cloned.",
            "parameterName": "toolBOMLines"
          },
          {
            "description": "The name of the clone.",
            "parameterName": "cloneName"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.3",
        "dependencies": "",
        "description": "This operation involves the creation of the clones of the tool",
        "exceptionCondition": "",
        "id": "cloneTool#const,std::vector<Teamcenter::BOMLine>,&$const,std::string,&",
        "interface": "CAE0::Soa::SimProc::SimProcessConfigurationManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "cloneTool",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::cloneTool#const,std::vector<Teamcenter::BOMLine>,&$const,std::string,&",
        "returnDescription": "Returns ServiceData",
        "useCase": ""
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of <b>BOMLine</b> objects of the tools that need to be cloned.",
            "parameterName": "toolBOMLines"
          },
          {
            "description": "Name of the clone to be created. This is a mandatory parameter.",
            "parameterName": "cloneName"
          },
          {
            "description": "Item ID of the clone to be created. If no value is provided, the value is auto-generated as per the <i>Naming Rule </i>attached to the <i>item_id</i> property of the <b>CAE0Tool</b> business object.",
            "parameterName": "cloneItemId"
          },
          {
            "description": "Item Revision ID of the clone to be created. If no value is provided, the value is auto-generated as per the <i>Revision Naming</i> <i>Rule</i> attached to the <i>item_revision_id</i> property of the <b>CAE0ToolRevision</b> business object.",
            "parameterName": "cloneItemRevId"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc11000.2.2",
        "dependencies": "",
        "description": "This operation clones a selected tool object in the <b>BOMWindow</b>.<br />SimTool1<br /><ul><ul><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SimTool1_Child1</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SimTool1_Child2</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SimTool1_Child3</li></ul></ul><br /><br />In the figure shown above, the user can select SimTool1 for clone. A dialog box comes up to ask the user for the new name, ID, and revision ID for the clone. After the use provides the new name, ID and revision ID and hits Ok on the dialog, the User Interface is refreshed to show the new clone created under SimTool1&rsquo;s parent with the user-provided name. The new object will have three children with the same name as SimTool1 but different Item id&rsquo;s. If a tab was SimTool1&rsquo;s own tab, a corresponding new tab will be created for the clone. If a tab was inherited, new clone will inherit the same tab from SimTool1&rsquo;s parent.",
        "exceptionCondition": "",
        "id": "cloneTool2#const,std::vector<Teamcenter::BOMLine>,&$const,std::string,&$const,std::string,&$const,std::string,&",
        "interface": "CAE0::Soa::SimProc::SimProcessConfigurationManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "cloneTool2",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::cloneTool2#const,std::vector<Teamcenter::BOMLine>,&$const,std::string,&$const,std::string,&$const,std::string,&",
        "returnDescription": "The created objects are returned. The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">51003   The current user does not have write access to the selected object.</li><li type=\"disc\">51007   The clone operation has failed.</li><li type=\"disc\">46062 The BOM cannot be expanded because it contains an unreadable item.</li></ul></ul>",
        "useCase": "<b>Use Case 1: User clones an existing tool</b><br />User will be able to clone a tool in the configurator view. User selects a tool object in the <b>BOMWindow</b> and selects &ldquo;Clone&rdquo; option. A dialog asking for the new clone name comes up. User provides the new name and hits &ldquo;Ok&rdquo;. The operation then clones the selected tool and the entire hierarchy under the selected <b>BOMLine</b>. The tab objects are also cloned accordingly. If the tab object is not inherited, a new tab object is created for the new clone. If the tab object was inherited, the same reference is used for the cloned object&rsquo;s tab."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "As of Teamcenter 11.2.2, modifying one of the arguments to handle file upload option in case import tool launch.",
            "deprecatedRelease": "tc11000.2.2"
          }
        ],
        "ParameterInfo": [
          {
            "description": "Simulation Tool to be launched.",
            "parameterName": "simulationTool"
          },
          {
            "description": "Array of LaunchInputInfo.",
            "parameterName": "inputObjects"
          },
          {
            "description": "Working directory of the Simulation Tool.",
            "parameterName": "workingDirectory"
          },
          {
            "description": "Launch type for the process. Valid values are \"LOCAL\", \"REMOTE\", \"SERVER\", \"LOCAL_DETACHED\".",
            "parameterName": "launchType"
          },
          {
            "description": "ExportRuntimeOverrideInfo constaining runtime overrides for export configuration of Simulation Tool.",
            "parameterName": "exportRuntimeConfiguration"
          },
          {
            "description": "ImportRuntimeOverrideInfo constaining runtime overrides for export configuration of Simulation Tool.",
            "parameterName": "importRuntimeConfiguration"
          },
          {
            "description": "Structure context information for pedigree capture in case of import tool launch.",
            "parameterName": "pedigreeCaptureInfo"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.5",
        "dependencies": "",
        "description": "This operation launches the Simulation Tool as per the pre-defined configuration. The configuration contains details about the tool launch type, export and import rules for the files, notification, and cleanup. The inputs to the operation is an array of InputObjectStructure, each containing one or more business objects, name of the tool to be launched and the launch type. Based on the input values of parameters itemCreationSetting and datasetCreationSetting, ItemRevision and Dataset objects are created or modified.<br />It is a pre-requisite that the Simulation Administrator or user with DBA privileges must configure the Simulation Tool in CAEManager application of Teamcenter. To use this operation, the user should have either a simulation_author or rtt_author license.",
        "exceptionCondition": "",
        "id": "executeSimulationToolLaunch#const,Teamcenter::BusinessObject,&$const,std::vector<CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::LaunchInputInfo>,&$const,std::string$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo$const,std::vector<Teamcenter::StructureContext>,&",
        "interface": "CAE0::Soa::SimProc::SimulationToolLaunch",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "executeSimulationToolLaunch",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimulationToolLaunch::executeSimulationToolLaunch#const,Teamcenter::BusinessObject,&$const,std::vector<CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::LaunchInputInfo>,&$const,std::string$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo$const,std::vector<Teamcenter::StructureContext>,&",
        "returnDescription": "Partial Errors are returned in the ServiceData when failed to import the utput data successfully:<br /><br />206831 - The number of inputs to the tool is not between the minimum criteria and maximum criteria defined for the simulation tool. <br />206835 - The input launch script path contains spaces, and cannot, therefore, be executed. <br />206818 - The log file cannot be created. <br />206819 - The working directory cannot be created. <br />206820 - Invalid Simulation Tool. <br />206821 - The primary input types are not defined. <br />206822 - The primary input rule is not defined. <br />206823 - The launch script is not defined. <br />206824 - The input files for the Simulation Tool are not found. <br />206825 - The working directory path cannot contain spaces.",
        "useCase": "Use Case 1: Import Simulation Objects with As Needed Item Creation Setting.<br />When executed with itemCreationSetting as \"As_Needed\", no new Item will be created if there exists one as per the Simulation Tool output configuration. If found none, new Item will be created as per the Simulation Tool output configuration.<br /><br />Use Case 2: Import Simulation Objects with Always Item Creation Setting.<br />When executed with itemCreationSetting as \"Always\", new Item will be created as per the Simulation Tool output configuration.<br /><br />Use Case 3: Import Simulation Objects with Never Item Creation Setting.<br />When this operation is executed with itemCreationSetting as \"Never\" and if no existing Item is found as per the Simulation Tool output configuration, no new Item will be created.<br /><br />Use Case 4: Import Simulation Objects with As Needed Dataset Creation Setting.<br />When executed with datasetCreationSetting as \"As_Needed\", no new Dataset will be created if there exists one as per the Simulation Tool output configuration. If found none, new Dataset will be created as per the Simulation Tool output configuration.<br /><br />Use Case 5: Import Simulation Objects with Always Dataset Creation Setting.<br />When executed with datasetCreationSetting as \"Always\", new Dataset will be created as per the process Simulation Tool configuration.<br /><br />Use Case 6: Import Simulation Objects with Never Dataset Creation Setting.<br />When executed with datasetCreationSetting as \"Never\" and if no existing Dataset is found as per the process output configuration, no new Dataset will be created."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "adding new argument to handle the Optional Input configuration.",
            "deprecatedRelease": "tc11000.4.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "Simulation Tool to be launched.",
            "parameterName": "simulationTool"
          },
          {
            "description": "Array of LaunchInputInfo2.",
            "parameterName": "inputObjects"
          },
          {
            "description": "The directory where the current job runs and generates the output files.",
            "parameterName": "workingDirectory"
          },
          {
            "description": "Launch type for the process. Valid values are &quot;LOCAL&quot;, &quot;REMOTE&quot;, &quot;SERVER&quot;, &quot;LOCAL_DETACHED&quot;.",
            "parameterName": "launchType"
          },
          {
            "description": "Runtime overrides for export configuration of Simulation Tool.",
            "parameterName": "exportRuntimeConfiguration"
          },
          {
            "description": "Runtime overrides for import configuration of Simulation Tool.",
            "parameterName": "importRuntimeConfiguration"
          },
          {
            "description": "Structure context information for pedigree capture in case of import tool launch.",
            "parameterName": "pedigreeCaptureInfo"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc11000.2.2",
        "dependencies": "",
        "description": "This operation launches the Simulation Tool as per the pre-defined configuration. The configuration contains details about the tool launch type, export and import rules for the files, notification, and cleanup. The inputs to the operation is an array of InputObjectStructure, each containing one or more business objects, name of the tool to be launched and the launch type. Based on the input values of parameters itemCreationSetting and datasetCreationSetting, <b>ItemRevision</b> and <b>Dataset</b> objects are created or modified.<br /><br />It is a pre-requisite that the Simulation Administrator or user with DBA privileges must configure the Simulation Tool in CAEManager application of Teamcenter. To use this operation, the user should have either a simulation_author or rtt_author license.",
        "exceptionCondition": "",
        "id": "executeSimulationToolLaunch#const,Teamcenter::BusinessObject,&$const,std::vector<CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::LaunchInputInfo2>,&$const,std::string$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo$const,CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo2$const,std::vector<Teamcenter::StructureContext>,&",
        "interface": "CAE0::Soa::SimProc::SimulationToolLaunch",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "executeSimulationToolLaunch",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimulationToolLaunch::executeSimulationToolLaunch#const,Teamcenter::BusinessObject,&$const,std::vector<CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::LaunchInputInfo2>,&$const,std::string$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo$const,CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo2$const,std::vector<Teamcenter::StructureContext>,&",
        "returnDescription": "Partial Errors are returned in the ServiceData when failed to import the utput data successfully:<br /><br />206831 - The number of inputs to the tool is not between the minimum criteria and maximum criteria defined for the simulation tool. <br />206835 - The input launch script path contains spaces, and cannot, therefore, be executed. <br />206818 - The log file cannot be created. <br />206819 - The working directory cannot be created. <br />206820 - Invalid Simulation Tool. <br />206821 - The primary input types are not defined. <br />206822 - The primary input rule is not defined. <br />206823 - The launch script is not defined. <br />206824 - The input files for the Simulation Tool are not found. <br />206825 - The working directory path cannot contain spaces.",
        "useCase": "<b>Use Case 1</b>: Import Simulation Objects with As Needed Item Creation Setting.<br />When executed with itemCreationSetting as &ldquo;As_Needed&rdquo;, no new <b>Item</b> will be created if there exists one as per the Simulation Tool output configuration. If none are found, a new <b>Item</b> will be created as per the Simulation Tool output configuration.<br /><br /><b>Use Case 2</b>: Import Simulation Objects with Always Item Creation Setting.<br />When executed with itemCreationSetting as &ldquo;Always&rdquo;, a new <b>Item</b> will be created as per the Simulation Tool output configuration.<br /><br /><b>Use Case 3</b>: Import Simulation Objects with Never Item Creation Setting.<br />When this operation is executed with itemCreationSetting as &ldquo;Never&rdquo; and if no existing Item is found as per the Simulation Tool output configuration, no new <b>Item</b> will be created.<br /><br /><b>Use Case 4</b>: Import Simulation Objects with As Needed Dataset Creation Setting.<br />When executed with datasetCreationSetting as &ldquo;As_Needed&rdquo;, no new <b>Dataset</b> will be created if there exists one as per the Simulation Tool output configuration. If none are found, a new <b>Dataset</b> will be created as per the Simulation Tool output configuration.<br /><br /><b>Use Case 5</b>: Import Simulation Objects with Always Dataset Creation Setting.<br />When executed with datasetCreationSetting as &ldquo;Always&rdquo;, a new <b>Dataset</b> will be created as per the process Simulation Tool configuration.<br /><br /><b>Use Case 6</b>: Import Simulation Objects with Never Dataset Creation Setting.<br />When executed with datasetCreationSetting as &ldquo;Never&rdquo; and if no existing Dataset is found as per the process output configuration, no new <b>Dataset</b> will be created."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": " adding new argument to handle the User Staging Directory.",
            "deprecatedRelease": "tc12000.3.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "<b>CAE0ToolRevision</b> object containing the configuration of the Simulation tool to be launched.",
            "parameterName": "simulationTool"
          },
          {
            "description": "A List of <i>LaunchInputInfo2</i>.",
            "parameterName": "inputObjects"
          },
          {
            "description": "The directory where the current job runs and generates the output files.",
            "parameterName": "workingDirectory"
          },
          {
            "description": "Launch type for the process. The valid values are :<br />LOCAL: In this type of launch, the Simulation tool is launched on the client machine and the Simulation results are imported back into Teamcenter.<br />SERVER: In a 4-Tier environment, the Simulation tool can be present on the machine where the Teamcenter server is set up. This type of launch invokes the Simulation tool on the server machine and imported the results back into Teamcenter.<br />REMOTE: This type of tool launch heppedns on the remote machine located in the network. The Simulation tool is launched on the remote machine and the results are imported back into Teamcenter. Remote launch requires the <i>Dispatcher</i> components to be installed on the remote machine.<br />LOCAL_DETACHED: This type of launch is similar to REMOTE launch with the exception that the Teamcenter Rich Application Client from where the Simulation tool is triggered can be closed but the launch of the Simulation tool on the remote machine continues and the results are imported back into Teamcenter.",
            "parameterName": "launchType"
          },
          {
            "description": "Runtime overrides for export configuration of Simulation Tool.",
            "parameterName": "exportRunTimeConfiguration"
          },
          {
            "description": "Runtime overrides for import configuration of Simulation Tool.",
            "parameterName": "importRuntimeConfiguration"
          },
          {
            "description": "<b>StructureContext</b> object containing the information for pedigree capture in case of import tool launch.",
            "parameterName": "pedigreeCaptureInfo"
          },
          {
            "description": "A List of <i>OptionalInputInfo</i> whose inputObject&rsquo;s named references will be exported to the export directory after launching the Simulation tool.",
            "parameterName": "optionalInputInfo"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc11000.4.0",
        "dependencies": "",
        "description": "This operation launches the Simulation Tool as per the pre-defined configuration. The configuration contains details about the tool launch type, export and import rules for the files, notification, and cleanup. The inputs to the operation is an array of <font face=\"courier\" height=\"10\">InputObjectStructure</font>, each containing one or more business objects, name of the tool to be launched and the launch type. Based on the input values of parameters <font face=\"courier\" height=\"10\">itemCreationSetting</font> and <font face=\"courier\" height=\"10\">datasetCreationSetting</font>, <b>ItemRevision</b> and <b>Dataset</b> objects are created or modified. For performing Simulation, the Simulation tool may require some additional data such as templates required by any port-processing application or process document supporting Simulation operation to be performed. This data can be provided through Optional Inputs configuration and is exported along with the input objects.<br /><br />It is a pre-requisite that the Simulation Administrator or user with database administrator privileges must configure the Simulation Tool in CAEManager Application of Teamcenter. To use this operation, the user should have either a simulation_author or rtt_author license.",
        "exceptionCondition": "",
        "id": "executeSimulationToolLaunch#const,Teamcenter::BusinessObject,&$const,std::vector<CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::LaunchInputInfo2>,&$const,std::string$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo$const,CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo2$const,std::vector<Teamcenter::StructureContext>,&$const,std::vector<CAE0::Soa::SimProc::_2017_11::SimulationToolLaunch::OptionalInputInfo>,&",
        "interface": "CAE0::Soa::SimProc::SimulationToolLaunch",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "executeSimulationToolLaunch",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimulationToolLaunch::executeSimulationToolLaunch#const,Teamcenter::BusinessObject,&$const,std::vector<CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::LaunchInputInfo2>,&$const,std::string$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo$const,CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo2$const,std::vector<Teamcenter::StructureContext>,&$const,std::vector<CAE0::Soa::SimProc::_2017_11::SimulationToolLaunch::OptionalInputInfo>,&",
        "returnDescription": "Partial Errors are returned in the <font face=\"courier\" height=\"10\">ServiceData</font> when failed to import the utput data successfully:<br /><br />206831 - The number of inputs to the tool is not between the minimum criteria and maximum criteria defined for the simulation tool. <br />206835 - The input launch script path contains spaces, and cannot, therefore, be executed. <br />206818 - The log file cannot be created. <br />206819 - The working directory cannot be created. <br />206820 - Invalid Simulation Tool. <br />206821 - The primary input types are not defined. <br />206822 - The primary input rule is not defined. <br />206823 - The launch script is not defined. <br />206824 - The input files for the Simulation Tool are not found. <br />206825 - The working directory path cannot contain spaces.",
        "useCase": "<b>Use Case 1:</b> Import Simulation Objects with As Needed <b>Item</b> Creation Setting.<br />When executed with itemCreationSetting as &ldquo;As_Needed&rdquo;, no new <b>Item</b> will be created if there exists one as per the Simulation Tool output configuration. If none are found, a new <b>Item</b> will be created as per the Simulation Tool output configuration.<br /><br /><b>Use Case 2:</b> Import Simulation Objects with Always Item Creation Setting.<br />When executed with itemCreationSetting as &ldquo;Always&rdquo;, a new <b>Item</b> will be created as per the Simulation Tool output configuration.<br /><br /><b>Use Case 3:</b> Import Simulation Objects with Never Item Creation Setting.<br />When this operation is executed with itemCreationSetting as &ldquo;Never&rdquo; and if no existing Item is found as per the Simulation Tool output configuration, no new <b>Item</b> will be created.<br /><br /><b>Use Case 4:</b> Import Simulation Objects with As Needed Dataset Creation Setting.<br />When executed with datasetCreationSetting as &ldquo;As_Needed&rdquo;, no new <b>Dataset</b> will be created if there exists one as per the Simulation Tool output configuration. If none are found, a new <b>Dataset</b> will be created as per the Simulation Tool output configuration.<br /><br /><b>Use Case 5:</b> Import Simulation Objects with Always Dataset Creation Setting.<br />When executed with datasetCreationSetting as &ldquo;Always&rdquo;, a new <b>Dataset</b> will be created as per the process Simulation Tool configuration.<br /><br /><b>Use Case 6:</b> Import Simulation Objects with Never Dataset Creation Setting.<br />When executed with datasetCreationSetting as &ldquo;Never&rdquo; and if no existing <b>Dataset</b> is found as per the process output configuration, no new <b>Dataset</b> will be created.<br /><br /><b>Use Case 7:</b> Export named references from latest optional inputs to export directory on changing them in Launch Simulation tool dialog.<br />When user has configured Optional Input with default value <b>ItemRevision</b> and export directory. User launches the tool for Remote or Server type of launch. User changes the default value to other <b>ItemRevision</b> in Launch Simulation tool dialog. On continuing with Simulation tool launch, system will export the named references from <b>Dataset</b> attached to new <b>ItemRevision</b> to export directory."
      },
      {
        "ParameterInfo": [
          {
            "description": "<b>CAE0ToolRevision</b> object containing the configuration of the Simulation tool to be launched.",
            "parameterName": "simulationTool"
          },
          {
            "description": "A List of <i>LaunchInputInfo3</i>. If invalid launch info is provided, operation reads <i>simulationTool</i> configuration to get default values of <i>inputObject</i>, <i>inputDataset</i>, <i>inputFile</i> and <i>inputWebLink</i>.",
            "parameterName": "inputObjects"
          },
          {
            "description": "List of <i>ExportFileOptions</i> which is to be used while exporting files in staging directory. If invalid values are provided, operation considers &ldquo;Skip&rdquo; as default option for export.",
            "parameterName": "fileExportOptions"
          },
          {
            "description": "The directory where the current job runs and generates the output files.",
            "parameterName": "scratchDirectory"
          },
          {
            "description": "The location under which user staging directory is created.",
            "parameterName": "userStagingLocation"
          },
          {
            "description": "Name of the directory which is created under user staging location and where the file(s) is exported.",
            "parameterName": "userStagingDir"
          },
          {
            "description": "Launch type for the process. The valid values are :<br />LOCAL: In this type of launch, the Simulation tool is launched on the client machine and the Simulation results are imported back into Teamcenter.<br />SERVER: In a 4-Tier environment, the Simulation tool can be present on the machine where the Teamcenter server is set up. This type of launch invokes the Simulation tool on the server machine and imported the results back into Teamcenter.<br />REMOTE: This type of tool launch heppedns on the remote machine located in the network. The Simulation tool is launched on the remote machine and the results are imported back into Teamcenter. Remote launch requires the <i>Dispatcher</i> components to be installed on the remote machine.<br />LOCAL_DETACHED: This type of launch is similar to REMOTE launch with the exception that the Teamcenter Rich Application Client from where the Simulation tool is triggered can be closed but the launch of the Simulation tool on the remote machine continues and the results are imported back into Teamcenter. If invalid values are provided for launch type, operation consider launch type as &ldquo;REMOTE&rdquo;.",
            "parameterName": "launchType"
          },
          {
            "description": "Runtime overrides for export configuration of Simulation Tool. If invalid values are provided, operation reads <i>simulationTool</i> for default values.",
            "parameterName": "exportRunTimeConfiguration"
          },
          {
            "description": "Runtime overrides for import configuration of Simulation Tool. If invalid values are provided, operation reads <i>simulationTool</i> for default values.",
            "parameterName": "importRuntimeConfiguration"
          },
          {
            "description": "<b>StructureContext</b> object containing the information for pedigree capture in case of import tool launch.",
            "parameterName": "pedigreeCaptureInfo"
          },
          {
            "description": "A List of <i>OptionalInputInfo</i> whose inputObject&rsquo;s named references will be exported to the export directory after launching the Simulation tool.",
            "parameterName": "optionalInputInfo"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc12000.3.0",
        "dependencies": "",
        "description": "This operation launches the Simulation Tool as per the pre-defined configuration. The configuration contains details about the tool launch type, export and import rules for the files, notification, and cleanup. The inputs to the operation is an array of <i>inputObjects</i>, each containing one or more business objects, <i>simulationTool</i> to be launched and the <i>launchType</i>. Based on the input values of parameters <i>itemCreationSetting</i> and <i>datasetCreationSetting</i>, <b>ItemRevision</b> and <b>Dataset</b> objects are created or modified. This operation also takes <i>userStagingLocation</i> and <i>userStagingDir</i> which is used if tool is configured to use staging directory. For performing Simulation, the Simulation tool may require some additional data such as templates required by any port-processing application or process document supporting Simulation operation to be performed. This data can be provided through Optional Inputs configuration and is exported along with the input objects.<br /><br />It is a pre-requisite that the Simulation Administrator or user with database administrator privileges must configure the Simulation Tool in CAEManager Application of Teamcenter. To use this operation, the user should have either a simulation_author or rtt_author license.",
        "exceptionCondition": "",
        "id": "executeSimulationToolLaunch#const,Teamcenter::BusinessObject,&$const,std::vector<CAE0::Soa::SimProc::_2020_01::SimulationToolLaunch::LaunchInputInfo3>,&$const,std::string$const,std::string$const,std::string$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo,&$const,CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo2,&$const,std::vector<Teamcenter::StructureContext>,&$const,std::vector<CAE0::Soa::SimProc::_2017_11::SimulationToolLaunch::OptionalInputInfo>,&$const,std::vector<CAE0::Soa::SimProc::_2020_01::SimulationToolLaunch::ExportFileOptions>,&",
        "interface": "CAE0::Soa::SimProc::SimulationToolLaunch",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "executeSimulationToolLaunch",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimulationToolLaunch::executeSimulationToolLaunch#const,Teamcenter::BusinessObject,&$const,std::vector<CAE0::Soa::SimProc::_2020_01::SimulationToolLaunch::LaunchInputInfo3>,&$const,std::string$const,std::string$const,std::string$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo,&$const,CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo2,&$const,std::vector<Teamcenter::StructureContext>,&$const,std::vector<CAE0::Soa::SimProc::_2017_11::SimulationToolLaunch::OptionalInputInfo>,&$const,std::vector<CAE0::Soa::SimProc::_2020_01::SimulationToolLaunch::ExportFileOptions>,&",
        "returnDescription": "Partial Errors are returned in the ServiceData when failed to import the utput data successfully:<br /><br /><ul><ul><li type=\"disc\">206831 - The number of inputs to the tool is not between the minimum criteria and maximum criteria defined for the simulation tool. </li><li type=\"disc\">206835 - The input launch script path contains spaces, and cannot, therefore, be executed. </li><li type=\"disc\">206906 - The scratch directory cannot be created.</li><li type=\"disc\">206821 - The primary input types are not defined. </li><li type=\"disc\">206823 - The launch script is not defined. </li><li type=\"disc\">206907 - The user staging directory cannot be created.</li></ul></ul>",
        "useCase": "<b>Use Case 1</b>: Import Simulation Objects with As Needed <b>Item</b> Creation Setting.<br />When executed with <i>itemCreationSetting</i> as &ldquo;As_Needed&rdquo;, no new <b>Item</b> will be created if there exists one as per the Simulation Tool output configuration. If none are found, a new <b>Item</b> will be created as per the Simulation Tool output configuration.<br /><br /><b>Use Case 2</b>: Import Simulation Objects with Always <b>Item</b> Creation Setting.<br />When executed with <i>itemCreationSetting</i> as &ldquo;Always&rdquo;, a new <b>Item</b> will be created as per the Simulation Tool output configuration.<br /><br /><b>Use Case 3</b>: Import Simulation Objects with Never <b>Item</b> Creation Setting.<br />When this operation is executed with <i>itemCreationSetting</i> as &ldquo;Never&rdquo; and if no existing <b>Item</b> is found as per the Simulation Tool output configuration, no new <b>Item</b> will be created.<br /><br /><b>Use Case 4</b>: Import Simulation Objects with As Needed <b>Dataset</b> Creation Setting.<br />When executed with <i>datasetCreationSetting</i> as &ldquo;As_Needed&rdquo;, no new <b>Dataset</b> will be created if there exists one as per the Simulation Tool output configuration. If none are found, a new <b>Dataset</b> will be created as per the Simulation Tool output configuration.<br /><br /><b>Use Case 5</b>: Import Simulation Objects with Always <b>Dataset</b> Creation Setting.<br />When executed with <i>datasetCreationSetting</i> as &ldquo;Always&rdquo;, a new <b>Dataset</b> will be created as per the process Simulation Tool configuration.<br /><br /><b>Use Case 6</b>: Import Simulation Objects with Never <b>Dataset</b> Creation Setting.<br />When executed with <i>datasetCreationSetting</i> as &ldquo;Never&rdquo; and if no existing <b>Dataset</b> is found as per the process output configuration, no new <b>Dataset</b> will be created.<br /><br /><b>Use Case 7</b>: Export named references from latest optional inputs to export directory on changing them in Launch Simulation tool dialog.<br />When user has configured Optional Input with default value <b>ItemRevision</b> and export directory. User launches the tool for Remote or Server type of launch. User changes the default value to other ItemRevision in Launch Simulation tool dialog. On continuing with Simulation tool launch, system will export the named references from <b>Dataset</b> attached to new <b>ItemRevision</b> to export directory.<br /><br /><b>Use Case 8</b>: User staging location and user staging directory is specifed.<br />When user has configured simulation tool to use staging directory, files are exported to user staging directory as per the file exports options.<br /><br /><b>Use Case 9</b>: Perform Simulation Tool launch operation with primary and additional input as <b>Web Link</b>.<br />When user has configured a simulation tool to use <b>Web Link</b> as a primary and additional input, the primary input <b>Web Link</b> is used by the Simulation Tool to perform simulation tool launch operation on the file which <b>Web Link</b> points to. The additional input <b>Web Link</b> file URL value is written in the log file."
      },
      {
        "ParameterInfo": [
          {
            "description": "The input structure to hold all the inputs for StructureMap execution service operation.",
            "parameterName": "structureMapInputs"
          },
          {
            "description": "The input structure to hold all the information for inclusion rule for StructureMap execution service operation.",
            "parameterName": "inclusionRuleInputs"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc11000.6.0",
        "dependencies": "",
        "description": "This operation creates an output BOM structure given the root <b>BOMLine</b> of an input BOM structure along with a selection of child <b>BOMLine</b> objects in the structure. The selected <b>BOMLine</b> objects will be processed to determine their parent <b>BOMLine</b> objects which will form the complete selection and will be used for processing. The <b>BOMLine</b> objects that are not a part of the selection will be filtered out to create the output BOM structure. This operation also reads a PLMXML file generated by the Lifecycle Viewer application in Teamcenter, this file is parsed to get the selection made in the Lifecycle Viewer and a filter rule is created based on the selection.<br /><br />The output BOM structure is determined by the XSLT-based <i>Data Map rules</i> executed against the input BOM structure. <i>Data Map</i> syntax is in compliance with the schema defined in <i>tcsim_xslWithNode.xsd</i>, located in <i>TC_DATA</i>.<br /><br /><i>Data Map rules</i> define the mapping between an input item type and its resulting output item type. <i>Data Map rules</i> are defined for an entire site and are stored in the <i>datamapping.xml</i> file located in <i>TC_DATA</i>. The name of the <i>datampping</i> file is defined by the site preference <i>CAE_dataMapping_file</i>.<br /><br />The <i>Data Map rules</i> can be configured for various domains defined as LOV objects under StructureMap Domains in <i>BMIDE</i>. To configure the domains, in the <i>Extensions</i> view in <i>BMIDE</i>, open LOV-&gt;StructureMap Domains and add additional domain values. The domain to be used for applying <i>Data Map rules</i> can also be provided as an input.<br /><br />To use this operation, a well-defined <i>datamapping.xml</i> is required in <i>TC_DATA</i> and the user should have either a simulation_author or rtt_author license.",
        "exceptionCondition": "",
        "id": "executeStructMapWithInclusionRule#const,CAE0::Soa::Internal::SimProc::_2017_11::SimStructureManagement::StructureMapInputsInfo2,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimStructureManagement::StructureMapFilterInclusionRuleInfo,&",
        "interface": "CAE0::Soa::SimProc::SimStructureManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "executeStructMapWithInclusionRule",
        "opTemplate": "CAE0::Soa::SimProc::_2017_05::SimStructureManagement::StructureMapExecutionResponse#CAE0::Soa::SimProc::SimStructureManagement::executeStructMapWithInclusionRule#const,CAE0::Soa::Internal::SimProc::_2017_11::SimStructureManagement::StructureMapInputsInfo2,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimStructureManagement::StructureMapFilterInclusionRuleInfo,&",
        "returnDescription": "The <b>PSBOMViewRevision</b> of the root of the newly created output structure added to the Created list of the <i>serviceData</i>. If the root of the output structure does not have a <b>BOMViewRevision</b>, then the <b>ItemRevision</b> of the root is added to the Created list of the serviceData. An <i>activityLog</i> is also returned which contains the results of the <i>DataMap rules</i> applied to the input structure and the output items created. The details include the type of the output item created, the <i>Item ID</i> of the root output item, a count of the input <b>BOMLine</b> objects that were processed and the time taken for the execution.<br /><br />serviceData may contain following partial errors:<br />206622 &ndash; Structure Engine unable to load/read/parse DataMap.<br />206628 &ndash; Invalid Structure Map.<br />206641 &ndash; Invalid Datamap.<br />206642 &ndash; XML Libraries for StructureMap Engine not available.<br />206643 &ndash; CAE_dataMapping_file preference not defined.<br />206647 &ndash; Item creation failed, operation aborted.<br />206648 &ndash; Occurrence creation failed, operation aborted.<br />206649 &ndash; Unknown attribute found.<br />206650 &ndash; Object not modifiable, set attribute operation failed.<br />206651 &ndash; Form creation failed.<br />206652 &ndash; BOMView creation failed.<br />206653 &ndash; Unable to save the Item in the Newstuff folder.<br />206658 &ndash; Existing Relationship found, relationship not being created.<br />206662 &ndash; Error encountered in Variant Condition creation.<br />206664 &ndash; Error in relationship creation.<br />206665 &ndash; Item node line definition missing in DataMap.<br />206666 &ndash; StructureMap domain not found for StructureMapRevision.<br />206672 &ndash; Rules with different domains found in the same StructureMap/DataMap.<br />206673 &ndash; Rules with no domain defined found in StructureMap/DataMap.<br />206676 &ndash; Invalid domain for datamapping.<br />206677 &ndash; Multiple variant clauses found in the variant condition. Variant Condition creation failed.<br />206678 &ndash; Invalid or missing variant clause expression. Variant Condition creation failed.<br />206679 &ndash; Mapped BOMView Type does not exist, creating default view type.",
        "useCase": "A user can execute StructureMap operation on an existing Product structure loaded in CAE Manager in the Teamcenter Rich Client. Subsequently <b>CAEModel</b> structure and the relations are created between newly created <b>CAEModel</b> structure and the selected Product Structure.<br /><br />Use Case 1: Open a Product structure, select root <b>BOMLine</b> and call the <i>executeStructMapWithInclusionRule</i> operation. In this case since the root <b>BOMLine</b> is the only selection, the entire structure will be processed to create an output BOM structure.The output BOM structure would consist of <b>BOMLine</b> occurrences of <b>ItemRevision</b> objects as defined in the <i>datamapping.xml</i>. The user can review the actions executed with the <i>activityLog</i> that is returned as a part of the response.<br />If user has provided the inclusion rule PLMXML file generated through the Lifecycle Viewer application, then this operation will read the bl_clone_stable_occurrence_id attribute for the <b>BOMLine</b> from the PLMXML file and creates a filter rule based on the selection to generate an output BOM structure.<br /><br />Use Case 2: Open a Product structure, select any <b>BOMLine</b> other than the root and call the<i> executeStructMapWithInclusionRule</i> operation. The system will find the parent <b>BOMLine</b> objects of the selected <b>BOMLine</b> to form the total selection. The <b>BOMLine</b> objects that are not part of the selection will be filtered out to create an output BOM structure. The output BOM structure would consist of <b>BOMLine</b> occurrences of <b>ItemRevision</b> objects as defined in the <i>datamapping.xml</i>. The user can review the actions executed with the <i>activityLog</i> that is returned as a part of the response.<br />If user has provided the inclusion rule PLMXML file generated through the Lifecycle Viewer application, then this operation will read the bl_clone_stable_occurrence_id attribute for the <b>BOMLine</b> from the PLMXML file and creates a filter rule based on the selection to generate an output BOM structure."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "This service operation is deprecated because a new SOA generateCAEStructure has been introduced on Active Workspace server.",
            "deprecatedRelease": "tc11000.6.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "A structure holding inputs for executeStructureMap operation.",
            "parameterName": "structureMapInputs"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc11000.3.0",
        "dependencies": "",
        "description": "This operation creates an output BOM structure given the root <b>ItemRevision</b> of the root <b>BOMLine</b> of an input BOM structure along with its <b>RevisionRule</b> and the <b>VariantRule</b>. A <b>Snapshot</b> folder of the input BOM structure along with the <b>VariantRule</b> can also be provided as an input. The output BOM structure is determined by the XSLT-based <i>Data Map rules </i>executed against the input BOM structure. <i>Data Map</i> syntax is in compliance with the schema defined in <i>tcsim_xslWithNode.xsd</i>, located in <i>TC_DATA</i>.<br /><br /><i>Data Map rules</i> define the mapping between an input item type and its resulting output item type. <i>Data Map rules</i> are defined for an entire site and are stored in the <i>datamapping.xml</i> file located in <i>TC_DATA</i>. The name of the <i>datamapping</i> file is defined by the site preference <i>CAE_dataMapping_file</i>.<br /><br />The <i>Data Map rules</i> can be configured for various domains defined as LOV objects under StructureMap Domains in <i>BMIDE</i>. To configure the domains, in the <i>Extensions</i> view in <i>BMIDE</i>, open LOV-&gt;StructureMap Domains and add additional domain values. The domain to be used for applying <i>Data Map rules</i> can also be provided as an input.<br /><br />To use this operation, a well-defined <i>datamapping.xml</i> is required in <i>TC_DATA</i> and the user should have either a simulation_author or rtt_author license.<br /><br />This service operation calls asynchronous service operation internlly to execute Datamap with the given parameters.",
        "exceptionCondition": "",
        "id": "executeStructureMap#const,CAE0::Soa::SimProc::_2017_05::SimStructureManagement::StructureMapInputsInfo,&",
        "interface": "CAE0::Soa::SimProc::SimStructureManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "executeStructureMap",
        "opTemplate": "CAE0::Soa::SimProc::_2017_05::SimStructureManagement::StructureMapExecutionResponse#CAE0::Soa::SimProc::SimStructureManagement::executeStructureMap#const,CAE0::Soa::SimProc::_2017_05::SimStructureManagement::StructureMapInputsInfo,&",
        "returnDescription": "This operation returns ServiceData which may contain following partial errors:<br />206622 &ndash; Structure Engine unable to load/read/parse DataMap.<br />206628 &ndash; Invalid Structure Map.<br />206641 &ndash; Invalid Datamap.<br />206642 &ndash; XML Libraries for StructureMap Engine not available.<br />206643 &ndash; CAE_dataMapping_file preference not defined.<br />206647 &ndash; Item creation failed, operation aborted.<br />206648 &ndash; Occurrence creation failed, operation aborted.<br />206649 &ndash; Unknown attribute found.<br />206650 &ndash; Object not modifiable, set attribute operation failed.<br />206651 &ndash; Form creation failed.<br />206652 &ndash; BOMView creation failed.<br />206653 &ndash; Unable to save the Item in the Newstuff folder.<br />206658 &ndash; Existing Relationship found, relationship not being created.<br />206662 &ndash; Error encountered in Variant Condition creation.<br />206664 &ndash; Error in relationship creation.<br />206665 &ndash; Item node line definition missing in DataMap.<br />206666 &ndash; StructureMap domain not found for StructureMapRevision.<br />206672 &ndash; Rules with different domains found in the same  StructureMap/DataMap.<br />206673 &ndash; Rules with no domain defined found in StructureMap/DataMap.<br />206676 &ndash; Invalid domain for datamapping.<br />206677 &ndash; Multiple variant clauses found in the variant condition. Variant Condition creation failed.<br />206678 &ndash; Invalid or missing variant clause expression. Variant Condition creation failed.<br />206679 &ndash; Mapped BOMView Type does not exist, creating default view type.",
        "useCase": "A user can asynchronously execute StructureMap function in ActiveWorkspace Client using an existing opened Product structure. Subsequently <b>CAEModel</b> structure and a relation are created between newly created <b>CAEModel</b> structure and the selected  Product Structure.<br />Use Case 1: Open a Product structure, select root <b>ItemRevision</b> and internally call operation to execute StructureMap asynchronously.<br /><br />Use Case 2: Open a Product structure, apply revision and variant configurations on that structure and internally call operation to execute StructureMap asynchronously."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "This service operation is deprecated because a new SOA generateCAEStructureAsync has been introduced on Active Workspace server.",
            "deprecatedRelease": "tc11000.6.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "<b>ItemRevision</b> of the root item of the input structure. This can be null if the <i>snapshotFolder</i> is provided as input to the operation. If the <i>rootIR</i> is not null and <i>snapshotFolder</i> is also provided as an input, then <i>rootIR</i> input will be ignored and <i>snapshotFolder</i> will take precedence.",
            "parameterName": "rootIR"
          },
          {
            "description": "The <b>Snapshot</b> folder of the input structure. The <i>snapshotFolder</i> can be null if the root <i>rootIR</i> is used as an input to the operation. The <i>snapshotFolder</i> takes precedence over the <i>rootIR</i>.",
            "parameterName": "snapshotFolder"
          },
          {
            "description": "The <b>RevisionRule</b> of the input structure. An optional parameter and can be provided if the root <b>ItemRevision</b> is used as an input to the operation. This parameter will be ignored if <i>snapshotFolder</i> is used as an input.",
            "parameterName": "revRule"
          },
          {
            "description": "The <b>VariantRule</b> for the input structure. This can be provided for both, the <i>rootIR</i> or <i>snapshotFolder</i> as input. This is an optional parameter and can be null.",
            "parameterName": "variantRule"
          },
          {
            "description": "The domain for the <i>Data Map rules</i> to be applied. The <i>datamapping.xml </i>file can be configured for various domains defined as LOV objects under StructureMap Domains in <i>BMIDE</i>. This argument is used to specify which domain to be used from the <i>datamapping.xml</i> file. If the value is not provided, the default is assumed to be CAE. If <b>StructureMapRevision</b> is null, then domain value will be considered and Datamapping will be executed.",
            "parameterName": "domain"
          },
          {
            "description": "The <b>StructureMapRevision</b> containing a <b>CAEStructureMap</b> <i>Dataset</i> with an XML <i>named reference </i>containing valid <i>StructureMap rules</i>. If <b>StructureMapRevision</b> is not null, then domain value will be ignored.",
            "parameterName": "structureMapIR"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc11000.3.0",
        "dependencies": "",
        "description": "This service operation asynchronously executes StructureMap with the given parameters, and establishes a relation between input Product structure and the newly created <b>CAEModel</b> structure.",
        "exceptionCondition": "",
        "id": "executeStructureMapAsync#const,Teamcenter::ItemRevision,&$const,Teamcenter::Snapshot,&$const,Teamcenter::RevisionRule,&$const,Teamcenter::VariantRule,&$const,std::string,&$const,Teamcenter::StructureMapRevision,&",
        "interface": "CAE0::Soa::SimProc::SimStructureManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "executeStructureMapAsync",
        "opTemplate": "void#CAE0::Soa::SimProc::SimStructureManagement::executeStructureMapAsync#const,Teamcenter::ItemRevision,&$const,Teamcenter::Snapshot,&$const,Teamcenter::RevisionRule,&$const,Teamcenter::VariantRule,&$const,std::string,&$const,Teamcenter::StructureMapRevision,&",
        "returnDescription": "As this is an asynchronous operation, it does not have return parameter.",
        "useCase": "A user can asynchronously execute StructureMap function in ActiveWorkspace Client using an existing opened Product structure. Subsequently <b>CAEModel</b> structure and a relation are created between newly created <b>CAEModel</b> structure and the selected  Product Structure.<br />Use Case 1: <b>Create an output structure given a top BOMLine of the input structure along with its configuration</b><br />Given an input root <b>BOMLine</b> of a BOM structure, along with its <b>RevisionRule</b> and <b>VariantRule</b>, the user can apply Data Map rule to the BOM structure and generate a corresponding output BOM structure. The output BOM structure would consist of <b>BOMLine</b> occurrences of <b>ItemRevision</b> objects as defined in the datamapping.xml file. The user can review the actions executed with the process log returned with the <b>BOMViewRevision</b>.<br /><br />Use Case 2: <b>Create an output structure given a Snapshot folder of the input structure along with the variant rule</b><br />Given a <b>Snapshot</b> folder of the input BOM structure and its <b>VariantRule</b>, the user can apply Data Map rules to the BOM structure and generate a corresponding output BOM structure. The output BOM structure would consist of <b>BOMLine</b> occurrences of <b>ItemRevision</b> objects as defined in the datamapping.xml file. The user can review the actions executed with the process log returned with the <b>BOMViewRevision</b>."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "this operation does not support inclusion rules, use the executeStructMapWithInclusionRule operation.",
            "deprecatedRelease": "tc11000.6.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "The input structure to hold all the inputs for StructureMap execution service operation.",
            "parameterName": "structureMapInputs"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc11000.4.0",
        "dependencies": "",
        "description": "This operation creates an output BOM structure given the root <b>BOMLine</b> of an input BOM structure along with a selection of child<b> BOMLine</b> objects in the structure. The selected <b>BOMLine</b> objects will be processed to determine their parent <b>BOMLine</b> objects which will form the complete selection and will be used for processing. The <b>BOMLine</b> objects that are not a part of the selection will be filtered out to create the output BOM structure. The output BOM structure is determined by the XSLT-based <i>Data Map rules</i> executed against the input BOM structure. <i>Data Map</i> syntax is in compliance with the schema defined in <i>tcsim_xslWithNode.xsd</i>, located in <i>TC_DATA</i>.<br /><br /><i>Data Map rules</i> define the mapping between an input item type and its resulting output item type. <i>Data Map rules</i> are defined for an entire site and are stored in the <i>datamapping.xml</i> file located in <i>TC_DATA</i>. The name of the datampping file is defined by the site preference <i>CAE_dataMapping_file</i>.<br /><br />The<i> Data Map rules</i> can be configured for various domains defined as LOV objects under StructureMap Domains in BMIDE. To configure the domains, in the <i>Extensions</i> view in <i>BMIDE</i>, open LOV-&gt;StructureMap Domains and add additional domain values. The domain to be used for applying<i> Data Map rules</i> can also be provided as an input.<br /><br />To use this operation, a well-defined <i>datamapping.xml</i> is required in <i>TC_DATA</i> and the user should have either a simulation_author or rtt_author license.",
        "exceptionCondition": "",
        "id": "executeStructureMapOnSelection#const,CAE0::Soa::Internal::SimProc::_2017_11::SimStructureManagement::StructureMapInputsInfo2,&",
        "interface": "CAE0::Soa::SimProc::SimStructureManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "executeStructureMapOnSelection",
        "opTemplate": "CAE0::Soa::SimProc::_2017_05::SimStructureManagement::StructureMapExecutionResponse#CAE0::Soa::SimProc::SimStructureManagement::executeStructureMapOnSelection#const,CAE0::Soa::Internal::SimProc::_2017_11::SimStructureManagement::StructureMapInputsInfo2,&",
        "returnDescription": "This operation returns <i>StructureMapExecutionResponse</i> which consists of two structure elements the <i>serviceData</i> and the <i>activityLog</i>.<br />The <b>PSBOMViewRevision</b> of the root of the newly created output structure added to the Created list of the <i>serviceData</i>. If the root of the output structure does not have a <b>BOMViewRevision</b>, then the <b>ItemRevision</b> of the root is added to the Created list of the <i>serviceData</i>. An <i>activityLog</i> is also returned which contains the results of the <i>DataMap rules</i> applied to the input structure and the output items created. The details include the type of the output item created, the <i>Item ID</i> of the root output item, a count of the input <b>BOMLine</b> objects that were processed and the time taken for the execution.<br /><br /><i>serviceData</i> may contain following partial errors:<br />206622 &ndash; Structure Engine unable to load/read/parse DataMap.<br />206628 &ndash; Invalid Structure Map.<br />206641 &ndash; Invalid Datamap.<br />206642 &ndash; XML Libraries for StructureMap Engine not available.<br />206643 &ndash; CAE_dataMapping_file preference not defined.<br />206647 &ndash; Item creation failed, operation aborted.<br />206648 &ndash; Occurrence creation failed, operation aborted.<br />206649 &ndash; Unknown attribute found.<br />206650 &ndash; Object not modifiable, set attribute operation failed.<br />206651 &ndash; Form creation failed.<br />206652 &ndash; BOMView creation failed.<br />206653 &ndash; Unable to save the Item in the Newstuff folder.<br />206658 &ndash; Existing Relationship found, relationship not being created.<br />206662 &ndash; Error encountered in Variant Condition creation.<br />206664 &ndash; Error in relationship creation.<br />206665 &ndash; Item node line definition missing in DataMap.<br />206666 &ndash; StructureMap domain not found for StructureMapRevision.<br />206672 &ndash; Rules with different domains found in the same StructureMap/DataMap.<br />206673 &ndash; Rules with no domain defined found in StructureMap/DataMap.<br />206676 &ndash; Invalid domain for datamapping.<br />206677 &ndash; Multiple variant clauses found in the variant condition. Variant Condition creation failed.<br />206678 &ndash; Invalid or missing variant clause expression. Variant Condition creation failed.<br />206679 &ndash; Mapped BOMView Type does not exist, creating default view type.",
        "useCase": "A user can execute StructureMap function in using an existing Product structure loaded in CAE Manager in the Teamcenter Rich Client. Subsequently <b>CAEModel</b> structure and a relations are created between newly created <b>CAEModel</b> structure and the selected Product Structure.<br /><br />Use Case 1: Open a Product structure, select root <b>BOMLine</b> and call the <i>executeStructureMapOnSelection</i> operation. In this case since the root <b>BOMLine</b> is the only selection, the entire structure will be processed to create an output BOM structure. The output BOM structure would consist of <b>BOMLine</b> occurrences of <b>ItemRevision</b> objects as defined in the <i>datamapping.xml</i>. The user can review the actions executed with the <i>activityLog</i> that is returned as a part of the response.<br /><br />Use Case 2: Open a Product structure, select any <b>BOMLine</b> other than the root and call the <i>executeStructureMapOnSelection</i> operation. The system will find the parent <b>BOMLine</b> objects of the selected <b>BOMLine</b> to form the total selection.The <b>BOMLine</b> objects that are not part of the selection will be filtered out to create an output BOM structure. The output BOM structure would consist of <b>BOMLine</b> occurrences of <b>ItemRevision</b> objects as defined in the <i>datamapping.xml</i>. The user can review the actions executed with the <i>activityLog</i> that is returned as a part of the response."
      },
      {
        "ParameterInfo": [
          {
            "description": "The name of exported PLM XML file.",
            "parameterName": "plmxmlFileName"
          },
          {
            "description": "The transfer mode name used for export. The supported transfer modes are &ldquo;CAEConfiguredDataFilesExportDefault&rdquo;, &ldquo;ConfiguredDataExportDefault&rdquo; and &ldquo;ConfiguredDataFilesExportDefault&rdquo;.",
            "parameterName": "transferMode"
          },
          {
            "description": "A list of objects which need to be exported. The supported object types are: <b>ItemRevision</b>, <b>Dataset</b> and <b>Folder</b>.",
            "parameterName": "objectsToExport"
          },
          {
            "description": "If true, exported objects will be checked out; otherwise, exported objects will not be checked out.",
            "parameterName": "checkOutOnExport"
          },
          {
            "description": "User defined name of the tool. This is the user defined name of the <b>CAE0ToolRevision</b> object.",
            "parameterName": "toolName"
          },
          {
            "description": "A list of FMS file tickets for the checked-out and not checked-out objects.",
            "parameterName": "logFileTickets"
          },
          {
            "description": "A list of the session options to control export behavior as name-value pairs. The supported options are: <i>&ldquo;PIE_Export_ImanFile_Tickets&rdquo;</i>, <i>&ldquo;PIE_Export_PLMD_Tickets&rdquo;</i>. If <i>&ldquo;PIE_Export_ImanFile_Tickets&rdquo;</i> is true then PLMXML returns the <b>ImanFile</b> tickets for the named references that are exported. If <i>&ldquo;PIE_Export_PLMD_Tickets&rdquo;</i> is true then PLMXML returns the *.plmd file tickets for the named references that are exported. This is used by the Data Share Manager (DSM) to perform the download.",
            "parameterName": "sessionOptions"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc12000.4.0",
        "dependencies": "",
        "description": "This operation exports the objects using PLMXML and checks out the exported objects. The simulation tool configured with PLMXML input rule and &ldquo;Check Out Exported Objects&rdquo; option requires that exported objects need to be checked out. It will generate a PLMXML file and a export log file. During the PLMXML export operation, if the Data Share Manager (DSM) is enabled, then system uses the Data Share Manager (DSM) to perform the download of files.",
        "exceptionCondition": "",
        "id": "exportAndCheckoutPLMXMLWithDSM#const,std::string$const,std::string$const,std::vector<Teamcenter::BusinessObject>,&$bool$const,std::string$const,std::vector<std::string>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2020_04::SimulationToolLaunch::NameAndValue>,&",
        "interface": "CAE0::Soa::SimProc::SimulationToolLaunch",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "exportAndCheckoutPLMXMLWithDSM",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2017_05::SimulationToolLaunch::ExportObjectsToPLMXMLResponse#CAE0::Soa::SimProc::SimulationToolLaunch::exportAndCheckoutPLMXMLWithDSM#const,std::string$const,std::string$const,std::vector<Teamcenter::BusinessObject>,&$bool$const,std::string$const,std::vector<std::string>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2020_04::SimulationToolLaunch::NameAndValue>,&",
        "returnDescription": "<b>ExportObjectsToPLMXMLResponse</b> &ndash; This response holds the list of  FMS file tickets for the exported XML file and the log files, the list of file tickets for the dataset named reference files, and any partial failures.<br /><br />The following partial errors may be returned:<br /><br />203331 - No Target Object Found.<br />203421 - The input transfer mode is invalid.<br />203431 - The input XML file name does not have extension .xml or .plmxml.<br />203432 - The input xml file name is missing.<br />203484 - The specified Transfer Mode is not for PLM XML export purpose. Please select a proper Transfer Mode and try again.<br />203486 - The input XML file name contains invalid characters.<br />203488 - The value of input session option is invalid.<br />Other failure in the whole export process.",
        "useCase": "<b>Use Case 1:</b> User launches a simulation tool with PLMXML input rule and &ldquo;Check Out Exported Objects&rdquo; option is not selected.<br />When the user launches a simulation tool which is configued with PLMXML input rule and &ldquo;Check Out Exported Objects&rdquo; option is not selected. This will call <i>exportAndCheckoutPLMXMLWithDSM</i> operation to export the objects using PLMXML but it will not check out the exported objects.The returned structure will contain FMS file tickets for exported XML file, export log file and named reference files.<br /><br /><b>Use Case 2:</b> User launches a simulation tool with PLMXML input rule and &ldquo;Check Out Exported Objects&rdquo; option is selected.<br />When the user launches a simulation tool which is configued with PLMXML input rule and &ldquo;Check Out Exported Objects&rdquo; option is selected. This will call <i>exportAndCheckoutPLMXMLWithDSM</i> operation to export the objects using PLMXML and it will check out the exported objects.The returned structure will contain FMS file tickets for exported XML file, export log file, checked-out and not checked-out objects log file and named reference files.<br /><br /><b>Use Case 3:</b> User launches a simulation tool with PLMXML input rule and Data Share Manager(DSM) is enabled.<br />When the user launches a simulation tool which is configued with PLMXML input rule and Data Share Manager is enabled. This will call <i>exportAndCheckoutPLMXMLWithDSM</i> operation to export the objects using PLMXML and it will use Data Share Manager(DSM) to perform download of the dataset named reference files of the exported objects.The returned structure will contain FMS file tickets for exported XML file, export log file, checked-out and not checked-out objects log file and named reference files."
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of <b>Mat1MaterialRevision</b> objects to be exported. Mandatory parameter to call the operation and is validated in client and server side.",
            "parameterName": "materialsObjects"
          },
          {
            "description": "Material Export File Name with extension. Mandatory parameter to call the operation and is validated in client and server side.",
            "parameterName": "materialExportFileName"
          },
          {
            "description": "Material Export Filter Name specified. Empty value means no Export Filter is specified. Optional parameter to call the operation and is validated in client and server side if specified.<br />Valid Values are:<br />&quot;NX MatML&quot;<br />&quot;Catia MatML&quot;<br />&quot;Ansys MatML&quot;<br />&quot;Simcenter STAR-CCM+ MatML&quot;",
            "parameterName": "materialExportFilterName"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc12000.4.0",
        "dependencies": "",
        "description": "This operation exports a list of <b>Mat1MaterialRevision</b> in MatML format into a file named as <i>materialExportFileName</i>   applying the Export Filter specified in <i>materialExportFilterName</i>. If <i>materialExportFilterName</i> is not specified, the list of <b>Mat1MaterialRevision</b> is exported without applying any Export Filter. Export Filter specifies the format in which the material is exported for a specific solver like ANSYS, Simcenter Nastran, etc.",
        "exceptionCondition": "",
        "id": "exportMaterialsForToolLaunch#const,std::vector<Teamcenter::BusinessObject>,&$const,std::string,&$const,std::string,&",
        "interface": "CAE0::Soa::SimProc::SimulationToolLaunch",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "exportMaterialsForToolLaunch",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2020_04::SimulationToolLaunch::ExportMaterialResponse#CAE0::Soa::SimProc::SimulationToolLaunch::exportMaterialsForToolLaunch#const,std::vector<Teamcenter::BusinessObject>,&$const,std::string,&$const,std::string,&",
        "returnDescription": "Returns ExportMaterialResponse containing exported <i>materialExportFile</i> and <i>materialExportLogFile</i> <b>ImanFile</b> object. The following partial errors may be returned:<br /><br /><ul><ul><li type=\"disc\">48033 - Invalid type for item Item Revision</li><li type=\"disc\">206910 - The File Name is invalid</li><li type=\"disc\">206911 - The Material Export Filter name is invalid</li></ul></ul>",
        "useCase": "Use Case 1 (Export without Export Filter):<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&bull;&nbsp;&nbsp;&nbsp;&nbsp;User logs into Teamcenter and configures a Simulation Tool specifying Material Export File Name, but does not specify any Material Export Filter Name, instead selects Generate full MatML with no transformation.<br /><ul><ul><li type=\"disc\">User also specifies <b>CAEModelRevision</b> as Primary input.</li><li type=\"disc\">User specifies Primary Input rule as PLMXML Export and enters rule specifying CAEConfiguredDataFilesExportDefault as Transfer Mode.</li><li type=\"disc\">User specifies Additional Input rules as PLMXML Export and enters rules specifying CAEConfiguredDataFilesExportDefault as Transfer Mode.</li><li type=\"disc\">User creates a <b>CAEModel</b> structure with <b>Mat1MaterialRevision</b> referenced  and launch Simulation Tool on root BOMLine of CAEModel structure.</li><li type=\"disc\">During the Simulation Tool launch, system exports list of <b>Mat1MaterialRevision</b> into the Material Export File as full MatML format.</li></ul></ul><br />Use Case 2 (Export with Export Filter):<br /><ul><ul><li type=\"disc\">User logs into Teamcenter and configures a Simulation Tool specifying Material Export File Name and Material Export Filter Name.</li><li type=\"disc\">User also specifies <b>CAEModelRevision</b> as Primary input.</li><li type=\"disc\">User specifies Primary Input rule as PLMXML Export and enters rule specifying CAEConfiguredDataFilesExportDefault as Transfer Mode.</li><li type=\"disc\">User specifies Additional Input rules as PLMXML Export and enters rules specifying CAEConfiguredDataFilesExportDefault as Transfer Mode.</li><li type=\"disc\">User creates a <b>CAEModel</b> structure with Mat1MaterialRevision referenced  and launch Simulation Tool on root <b>BOMLine</b> of <b>CAEModel</b> structure.</li><li type=\"disc\">During the Simulation Tool launch, system exports list of <b>Mat1MaterialRevision</b> into the Material Export File applying Material Export Filter.</li></ul></ul>"
      },
      {
        "ParameterInfo": [
          {
            "description": "The Root <b>BOMLine</b> of the input model structure loaded in the <b>BOMWindow</b>.",
            "parameterName": "rootBOMLine"
          },
          {
            "description": "The selected Derivative Rule configuration.",
            "parameterName": "selectedRule"
          },
          {
            "description": "The selected Variant Configuration.",
            "parameterName": "selectedVarConfig"
          },
          {
            "description": "An XML string containing the variant configuration data.",
            "parameterName": "varConfigDetails"
          },
          {
            "description": "The number of output structures to be derived.",
            "parameterName": "numOfStructs"
          },
          {
            "description": "The name to be assigned to the output structure root. If no value is provided, output structure root will have the same name as that of the input model structure loaded in the <b>BOMWindow</b>.",
            "parameterName": "optionalRootName"
          },
          {
            "description": "The index to be appended to the output structure root name to differentiate each structure when multiple structures are created. If no value is provided, all output structure roots will have the same name.<br />The supported values are strings with multiple numeric digits. Alphanumeric strings and special characters are not supported as optionIndex value.",
            "parameterName": "optionalIndex"
          },
          {
            "description": "The flag to indicate if auto-generated index is to be used. If true, a unique auto-generated number will be appended to the name of the root of derived structures. The optionalIndex value will be ignored if useAutoIndex flag is true.",
            "parameterName": "useAutoIndex"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc11000.3.0",
        "dependencies": "",
        "description": "This operation creates multiple cloned or variant structures from the root <b>BOMLine</b> of a BOM structure loaded in a model <b>BOMWindow</b> by applying a derivative rule to it. <br />The output BOM structures may use the variant options set on the model <b>BOMWindow</b> or user can provide a set of variant options to be applied when deriving the output from input BOM structure. The output BOM structure is determined by the XSLT-based rules executed against the input BOM structure. These XSLT-based rules are a part of the derivative rule configuration. Several XSLT-based rules are defined under a derivative rule. There can be several derivative rules defined in the database by the user. <br /><br />The output structures may optionally have a user defined name for the root, suffixed with a user defined numerical index which increments for each output structure created.<br /><br />This operation uses the existing Data Mapping functionality to apply the XSLT-based rules against input structure and generate the output structure. Data mapping defines the mapping between an input item type and its resulting output item type. The Derive Structures operation specific data mapping rules will co-exist with existing configurations, stored in the datamapping.xml file. This file is maintained in the database. <br /><br />To use create derived structures operation, well-defined <i>CAEDerivativeRuleConfig.xml, CAEDerivativeVariantConfig.xml, datamapping.xml </i>and <i>NodeConfigXML.xml</i> files are required in the database.<br /><i>CAEDerivativeRuleConfig.xml</i> file contains the configurations and conditional XSLT-based rules pertaining to the Derivative Rule. <i>CAEDerivativeVariantConfig.xml</i> contains the variant options data in form of name and value pairs. <i>Datamapping.xml</i> contains mapping rules configured for mapping between input and output structures. <i>NodeXMLconfig.xml</i> has configured item attributes, which are mapped between input and output structure. <br /><br />Derivative Rules Configuration view is used to create a Derivative Rule as well as a Variant Configuration.<br /><i>Datamapping.xml</i> and <i>NodeXMLConfig.xml</i> are configured by an Administrator and stored at the location in database which is pointed by user preference CAE_datamap_files_location.",
        "exceptionCondition": "",
        "id": "createDerivedStructures#const,Teamcenter::BOMLine,&$const,cae::CAE0ConfigRevision,&$const,std::string,&$const,std::string,&$int$const,std::string,&$const,std::string,&$bool",
        "interface": "CAE0::Soa::SimProc::SimStructureManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "createDerivedStructures",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2017_05::SimStructureManagement::DeriveResponse#CAE0::Soa::SimProc::SimStructureManagement::createDerivedStructures#const,Teamcenter::BOMLine,&$const,cae::CAE0ConfigRevision,&$const,std::string,&$const,std::string,&$int$const,std::string,&$const,std::string,&$bool",
        "returnDescription": "DeriveResponse represents the output of the createDerivedStructures operation.<br /><br />A log is returned with the results of the derive operation. The item IDs and revisions of created items along with the description of additional items and relationships created in the process are part of the log. The following partial errors may be returned as a part of the Service data:<br /><br />The following partial errors may be returned<br />206845 - Error occurred during Derive operation. <br />206845 - Derive Engine unable to load/read/parse XMLRendering. <br />206643 - CAE_dataMapping_file preference not defined. <br />206647 - Item creation failed, operation aborted. <br />206648 - Occurrence creation failed, operation aborted. <br />206649 - Unknown attribute found. <br />206650 - Object not modifiable, set attribute operation failed. <br />206651 - Form creation failed. <br />206652 - BOMView creation failed. <br />206653 - Unable to save the Item in the Newstuff folder. <br />206664 - Error in relationship creation. <br />206665 - Item node line definition missing in Data Map.",
        "useCase": "<b>1: Create an output structure given a top BOMLine of the input structure, a Derivative Rule configuration item.</b><br /><br />Given an input BOM structure, this operation will apply the XSLT-based rules contained within the specified Derivative Rule configuration item to the BOM structure and generate a corresponding output structure. <br />The output structure would be an exact clone or variant based on the rules defined in the configuration.<br /><br /><b>2: Create multiple output structures given a top BOMLine of the input structure, a Derivative Rule configuration item, number of structures to derive along with optional root name and index.</b><br /><br />Given an input BOM structure, this operation will apply the XSLT-based rules contained within the specified Derivative Rule configuration item to the BOM structure and generate given number of corresponding output structures. <br />The output structure would be an exact clone or variant based on the rules defined in the configuration.<br />Each output structure will have the provided root name suffixed by the given index number that increments from each output structure. <br /><br /><b>3: Create an output structure given a top BOMLine of the input structure, a Derivative Rule configuration item and a variant configuration XML string.<br /></b><br />Given an input BOM structure, this operation will first apply the variant options contained in the variant configuration XML to it. The XSLT-based rules contained within the specified Derivative Rule configuration item will then be applied to the resultant BOM structure and a corresponding output structure will be generated."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "adding new argument to handle the Data Share Manager(DSM) support for the download of named reference files.",
            "deprecatedRelease": "tc12000.4.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "The name of exported PLMXML file.",
            "parameterName": "plmxmlFileName"
          },
          {
            "description": "The transfer mode name used for export. The supported transfer modes are &ldquo;CAEConfiguredDataFilesExportDefault&rdquo;, &ldquo;ConfiguredDataExportDefault&rdquo; and &ldquo;ConfiguredDataFilesExportDefault&rdquo;.",
            "parameterName": "transferMode"
          },
          {
            "description": "A list of objects which need to be exported.",
            "parameterName": "objectsToExport"
          },
          {
            "description": "If true, exported objects will be checked out; otherwise, exported objects will not be checked out.",
            "parameterName": "checkOutOnExport"
          },
          {
            "description": "The simulation tool name for which export is performed.",
            "parameterName": "toolName"
          },
          {
            "description": "A list of FMS file tickets for the checked-out and not checked-out objects.",
            "parameterName": "logFileTickets"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc11000.3.0",
        "dependencies": "",
        "description": "Simulation tool configured with PLMXML input rule and &ldquo;Check Out Exported Objects&rdquo; option requires that exported objects need to be checked out. This operation exports the objects using PLMXML and checks out the exported objects. It will generate a PLMXML file and a export log file.",
        "exceptionCondition": "",
        "id": "exportObjectsToPLMXMLForToolLaunch#const,std::string$const,std::string$const,std::vector<Teamcenter::BusinessObject>,&$bool$const,std::string$const,std::vector<std::string>,&",
        "interface": "CAE0::Soa::SimProc::SimulationToolLaunch",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "exportObjectsToPLMXMLForToolLaunch",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2017_05::SimulationToolLaunch::ExportObjectsToPLMXMLResponse#CAE0::Soa::SimProc::SimulationToolLaunch::exportObjectsToPLMXMLForToolLaunch#const,std::string$const,std::string$const,std::vector<Teamcenter::BusinessObject>,&$bool$const,std::string$const,std::vector<std::string>,&",
        "returnDescription": "<b>ExportObjectsToPLMXMLResponse</b> - This response holds the list of FMS file tickets for the exported XML file and the log files, the list of file tickets for the dataset named reference files, and any partial failures.<br /><br />The following partial errors may be returned:<br /><br /><ul><ul><li type=\"disc\">203485 &ndash; The input XML file name contains full file path</li><li type=\"disc\">203485 &ndash; The input XML file name does not have extension .xml or .plmxml.</li><li type=\"disc\">203484 - The specified Transfer Mode is not for PLM XML export purpose. Please select a proper Transfer Mode and try again.</li><li type=\"disc\">203454 &ndash; An error has occurred during the processing of some objects.</li><li type=\"disc\">Other failure in the whole export process.</li></ul></ul>",
        "useCase": "Use Case 1: <b>User launches a simulation tool with PLMXML input rule and &ldquo;Check Out Exported Objects&rdquo; option is not selected.</b><br />When the user launches a simulation tool which is configued with PLMXML input rule and &ldquo;Check Out Exported Objects&rdquo; option is not selected. This will call <i>exportObjectsToPLMXMLforToolLaunch</i> operation to export the objects using PLMXML but it will not check out the exported objects.The returned structure will contain FMS file tickets for exported XML file, export log file and named reference files.<br /><br />Use Case 2: <b>User launches a simulation tool with PLMXML input rule and &ldquo;Check Out Exported Objects&rdquo; option is selected.</b><br />When the user launches a simulation tool which is configued with PLMXML input rule and &ldquo;Check Out Exported Objects&rdquo; option is selected. This will call <i>exportObjectsToPLMXMLforToolLaunch</i> operation to export the objects using PLMXML and it will check out the exported objects.The returned structure will contain FMS file tickets for exported XML file, export log file, checked-out and not checked-out objects log file and named reference files."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "This service operation is deprecated because as the async workflow execution can be done by making task asynchronous.",
            "deprecatedRelease": "tc12000.2.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "The input structure to hold all the inputs for Structure Map execution service operation.",
            "parameterName": "structureMapInputs"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc11000.6.0",
        "dependencies": "",
        "description": "This service operation asynchronously executes Structure Map with the given parameters, and establishes a relation between input Product structure and the newly created <b>CAEModel</b> structure.",
        "exceptionCondition": "",
        "id": "generateCAEStructOnSelectionAsync#const,CAE0::Soa::Internal::SimProc::_2018_11::SimStructureManagement::StructureMapInputsInfo3,&",
        "interface": "CAE0::Soa::SimProc::SimStructureManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "generateCAEStructOnSelectionAsync",
        "opTemplate": "void#CAE0::Soa::SimProc::SimStructureManagement::generateCAEStructOnSelectionAsync#const,CAE0::Soa::Internal::SimProc::_2018_11::SimStructureManagement::StructureMapInputsInfo3,&",
        "returnDescription": "As this is an asynchronous operation, it does not have return parameter.",
        "useCase": "A user can asynchronously execute Generate CAE Structure operation on an existing Product structure loaded in Content sub-location in the Active Workspace Client. Subsequently <b>CAEModel</b> structure and the relations are created between newly created <b>CAEModel</b> structure and the selected Product Structure.<br /><br /><b>Use Case 1:</b> Open a Product structure in Active Workspace Client, select root BOMLine and call the <i>generateCAEStructOnSelectionAsync</i> operation. In this case since the root <b>BOMLine</b> is the only selection, the entire structure is processed to create an output BOM structure. The output BOM structure would consist of <b>BOMLine</b> occurrences of <b>ItemRevision</b> objects as defined in the <i>datamapping.xml</i>.<br /><br /><b>Use Case 2</b>: Open a Product structure in Active Workspace Client, select any <b>BOMLine</b> other than the root and call the generateCAEStructOnSelectionAsync operation. The system finds the parent <b>BOMLine</b> objects of the selected <b>BOMLine</b> to form the total selection. The <b>BOMLine</b> objects that are not part of the selection is filtered out to create an output BOM structure. The output BOM structure would consist of <b>BOMLine</b> occurrences of <b>ItemRevision</b> objects as defined in the <i>datamapping.xml</i>."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "Use generateNodeXMLWithFocus operation. The newer version takes the focus as a parameter for generating NodeXML.",
            "deprecatedRelease": "tc11000.5.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "A list of Teamcenter business objects to be converted into NodeXML.",
            "parameterName": "objects"
          },
          {
            "description": "The NodeXML can be generated for various domains defined as LOV objects under StructureMap Domains in BMIDE. To configure the domains, in the Extensions view in BMIDE, open LOV->StructureMap Domains and add additional domain values. This argument is used to specify which domain to use to generate the NodeXML.",
            "parameterName": "domain"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.4",
        "dependencies": "",
        "description": "This operation generates a <i>NodeXML</i> representation of the Teamcenter business objects identified in the input parameter and the selected domain defined as LOV under <b>StructureMap Domains</b> in BMIDE. <i>NodeXML</i> is XML-based and is most commonly used in the process for creating <i>Data Map</i> and <i>StructureMap rules</i>. The generated NodeXML consists of the visible attributes and their values associated with the <b>Item</b>, <b>ItemRevision</b>, related <b>Form</b> objects and the <b>BOMLine</b>. The <i>NodeXML</i> syntax is in compliance with the schema defined in <i>tcsim_sm_node.xsd</i>, located in <i>TC_DATA</i> folder.<br /><br />For more details on building and executing <i>Data Map</i> and <i>StructureMap</i> rules, please refer to the \"<i>Creating StructureMap rules</i>\" section in the <i>Simulation Process Management Guide->Using StructureMaps</i> chapter of the Teamcenter documentation.",
        "exceptionCondition": "",
        "id": "generateNodeXML#const,std::vector<Teamcenter::BusinessObject>,&$const,std::string,&",
        "interface": "CAE0::Soa::SimProc::SimStructureManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "generateNodeXML",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::GenerateNodeXMLResponse#CAE0::Soa::SimProc::SimStructureManagement::generateNodeXML#const,std::vector<Teamcenter::BusinessObject>,&$const,std::string,&",
        "returnDescription": "The method returns a <i>NodeXML</i> document consisting of the displayable attributes and its values for the <b>Item</b>, <b>ItemRevision</b>, <b>Form</b> and <b>BOMLine</b> for each business object provided in the input and service data with appropriate errors, if encountered.<br /><br />The following partial errors may be returned:<br /><br /><ul><ul><li type=\"disc\">39004 Unable to load the type</li><li type=\"disc\">39014 The specified type does not exist</li><li type=\"disc\">38020 Invalid name provided to define property.</li><li type=\"disc\">38022 The Object type is invalid for property.</li><li type=\"disc\">38027 Property type not supported by this operation.</li><li type=\"disc\">38040 Invalid property descriptor tag.</li><li type=\"disc\">38043 Unable to get value from a pomattribute for property</li></ul></ul>",
        "useCase": "<b>Use Case 1  (Generate a NodeXML for a selected BOMLine)</b><br />When a BOM structure is present or accessible, select one or more <b>BOMLine</b> objects from the BOM structure and the selected StructureMap Domain and invoke the generateNodeXML operation to generate the <i>NodeXML</i> interpretation of the selected <b>BOMLine</b> objects."
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of Teamcenter business objects to be converted into <i>NodeXML</i>.",
            "parameterName": "objects"
          },
          {
            "description": "The <i>NodeXML</i> can be generated for various domains defined as LOV objects under <b>StructureMap Domains</b> in BMIDE. To configure the domains, in the Extensions view in BMIDE, open LOV-&gt;StructureMap Domains and add additional domain values. This argument is used to specify which domain to use to generate the <i>NodeXML</i>.",
            "parameterName": "domain"
          },
          {
            "description": "The displayable attributes and its values for the <b>Item</b>, <b>ItemRevision</b>, <b>Form</b> and <b>BOMLine</b> for each business object can be segregated by the focus depending on whether they will be used as an input or the output in the <i>DataMap</i> and <i>StructureMap rules</i>. The <i>NodeXML</i> can be generated with IN focused attributes or OUT focused attributes. This parameter is used to specify which focus is to be used for generating the <i>NodeXML</i>. In case no value is provided for the focus, the <i>NodeXML</i> will be generated with attributes of both focus types.",
            "parameterName": "focus"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc11000.5.0",
        "dependencies": "",
        "description": "This operation generates a <i>NodeXML</i> representation of the Teamcenter business objects identified in the input parameter and the selected domain defined as LOV under <b>StructureMap Domains</b> in BMIDE for the given focus. <i>NodeXML</i> is XML-based and is most commonly used in the process for creating<i> Data Map </i>and <i>StructureMap rules</i>. The generated <i>NodeXML</i> consists of the visible attributes and their values associated with the <b>Item</b>, <b>ItemRevision</b>, related <b>Form</b> objects and the <b>BOMLine</b>. These attributes are segregated by the focus depending on whether they will be used as an input or the output in the<i> DataMap</i> and <i>StructureMap rules</i>. The <i>NodeXML</i> syntax is in compliance with the schema defined in <i>tcsim_sm_node.xsd</i>, located in<i> TC</i>_<i>DATA</i> folder. For more details on building and executing <i>Data Map</i> and <i>StructureMap rules,</i> please refer to the &quot;<i>Creating StructureMap rules</i>&quot; section in the <i>Simulation Process Management Guide-&gt;Using StructureMaps</i> chapter of the Teamcenter documentation.",
        "exceptionCondition": "",
        "id": "generateNodeXMLWithFocus#const,std::vector<Teamcenter::BusinessObject>,&$const,std::string,&$const,std::string,&",
        "interface": "CAE0::Soa::SimProc::SimStructureManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "generateNodeXMLWithFocus",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::GenerateNodeXMLResponse#CAE0::Soa::SimProc::SimStructureManagement::generateNodeXMLWithFocus#const,std::vector<Teamcenter::BusinessObject>,&$const,std::string,&$const,std::string,&",
        "returnDescription": "The method returns a GenerateNodeXMLResponse object that contains the <i>NodeXML</i> document consisting of the displayable attributes and its values for the <b>Item</b>, <b>ItemRevision</b>, <b>Form</b> and <b>BOMLine</b> for each business object provided in the input and service data with appropriate errors, if encountered. <br />The following partial errors may be returned:<br /><br /><ul><ul><li type=\"disc\">39004 - Unable to load the type</li><li type=\"disc\">39014 - The specified type does not exist</li><li type=\"disc\">38020 - Invalid name provided to define property.</li><li type=\"disc\">38022 - The Object type is invalid for property.</li><li type=\"disc\">38027 - Property type not supported by this operation.</li><li type=\"disc\">38040 - Invalid property descriptor tag.</li><li type=\"disc\">38043 - Unable to get value from a pomattribute for property</li></ul></ul>",
        "useCase": "<b>Use Case 1 (Generate a NodeXML for a selected BOMLine with IN focus)</b><br /><br />When a <b>BOM</b> structure is present or accessible, select one or more <b>BOMLine</b> objects from the <b>BOM</b> structure and the selected <b>StructureMap Domain</b> along with the selected focus as &quot;IN&quot; and invoke the generateNodeXML operation to generate the <i>NodeXML</i> interpretation of the selected <b>BOMLine</b> objects.<br /><br /><br /><b>Use Case 2 (Generate a NodeXML for a selected BOMLine with OUT focus)</b><br /><br />When a <b>BOM</b> structure is present or accessible, select one or more <b>BOMLine</b> objects from the <b>BOM</b> structure and the selected<b> StructureMap Domain</b> along with the selected focus as &quot;OUT&quot; and invoke the generateNodeXML operation to generate the <i>NodeXML</i> interpretation of the selected <b>BOMLine</b> objects.<br /><br /><br /><b>Use Case 3 (Generate a NodeXML for a selected BOMLine with no domain or focus)</b><br /><br />When a <b>BOM</b> structure is present or accessible, select one or more <b>BOMLine</b> objects from the <b>BOM</b> structure and invoke the generateNodeXML operation to generate the <i>NodeXML</i> interpretation of all the displayable attributes and its values for the selected <b>BOMLine</b> objects."
      },
      {
        "ParameterInfo": [
          {
            "description": "List of <b>CAE0ConfigRevisions</b> objects.",
            "parameterName": "configItemList"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc11000.2.3",
        "dependencies": "",
        "description": "Analysis Dash Board configuration view and File Upload Rule configuration view shows list of configured items in a tree viewer with Site, Group and User level scope. CAE Configuration views have tree viewer in the left side and detailed configuration is shown in the right side of the view. This operation gets the detailed configuration from input CAE configuration items.",
        "exceptionCondition": "",
        "id": "getCAEConfigDetail#const,std::vector<cae::CAE0ConfigRevision>,&",
        "interface": "CAE0::Soa::SimProc::SimProcessConfigurationManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getCAEConfigDetail",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement::CAEConfigDetailResponse#CAE0::Soa::SimProc::SimProcessConfigurationManagement::getCAEConfigDetail#const,std::vector<cae::CAE0ConfigRevision>,&",
        "returnDescription": "Method returns the <i>CAEConfigDetailResponse</i>. This response contains the information about configurations. The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">206681-  Error occurred during retrieving dataset from Item Revision.</li><li type=\"disc\">206683-  Error in extracting named references file from dataset.</li><li type=\"disc\">206684-  No named references found in the dataset.</li><li type=\"disc\">206874- Invalid configuration item.</li></ul></ul>",
        "useCase": "<b>Use Case 1: User selects configuration item from Analysis Dash Board configuration view tree viewer.</b><br />When the user opens Analysis Dash Board configuration view, system shows list of configured dashboards in the view. System displays tree viewer categorised in Site, Group and User level scope. When user selects any of the dashboard configuration item from tree viewer, system shows the details configuration on the right side of view. The service operation getCAEConfigDetail is used to fetch the configuration."
      },
      {
        "ParameterInfo": [
          {
            "description": "Selected Composite View Top Line. It can be <b>ItemRevision</b>, <b>CAEModelRevision</b>, <b>CAEAnalysisRevision</b>.",
            "parameterName": "component"
          },
          {
            "description": "Item Types to be filtered from Tool Bar. It can be <b>CAEModelRevision</b>, <b>CAEGeometryRevision</b>, <b>CAEAnalysisRevision</b> and All.",
            "parameterName": "filterItemType"
          },
          {
            "description": "Relationship List to be filtered from Tool Bar.  Relationship List is the list of Strings populated from <br /><b>CAE_significant_relation_types_for_Product</b> Teamcenter Preference for <b>ItemRevision</b>, <b>CAE_significant_relation_types_for_CAEModel</b> Teamcenter Preference for <b>CAEModelRevision</b>,<b> CAE_significant_relation_types_for_CAEAnalysis</b> Teamcenter Preference for <b>CAEAnalysisRevision</b>.",
            "parameterName": "filterRelationType"
          },
          {
            "description": "Boolean value to indicate to Show Related Analysis RootOnly. If true, will show the related<br /><b>CAEAnalysisRevision</b> for Root <b>CAEModelRevision</b>.",
            "parameterName": "showRelatedAnalysisRootOnly"
          },
          {
            "description": "<b>ConfigurationContext</b> applied on the input view.",
            "parameterName": "configurationContext"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.4",
        "dependencies": "",
        "description": "CAE Manager provides Composite View to view Product, Model and Analysis with their relationships in a organised way. This Operation will return the Composite View one level Data Tree Structure built on the server side. This is done using Persistant Object Model queries to get the results. This Operation also have capability to filter the Structure based on Item Type and Relation Type passed as parameters.",
        "exceptionCondition": "",
        "id": "getCompositeLineNodes#const,Teamcenter::BusinessObject,&$int$const,std::vector<std::string>,&$bool$const,Teamcenter::ConfigurationContext,&",
        "interface": "CAE0::Soa::SimProc::SimStructureManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getCompositeLineNodes",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::CompositeViewResponse#CAE0::Soa::SimProc::SimStructureManagement::getCompositeLineNodes#const,Teamcenter::BusinessObject,&$int$const,std::vector<std::string>,&$bool$const,Teamcenter::ConfigurationContext,&",
        "returnDescription": "Method return newly created data type about the queried item parent child structure as ParentToChildCompositeStructure data structure along with Service Data for detecting any errors from the server side.<br /><br />The following partial errors may be returned:<br />51003   - The current user does not have write access to the selected object.<br />46062 - The BOM cannot be expanded because it contains an unreadable item.<br />206815 - The license check failed. There is no valid license to access the Teamcenter Simulation functionality.<br />516001 - An Enquiry internal error has occurred.<br />516003 - The Enquiry module has not been initialized.<br />516021 - An invalid value is given to the enquiry.<br />516027 - The enquiry module has run out of memory<br />",
        "useCase": "This operation returns the one level Data Tree Structure.  This Operation is called when User performs the following Steps:<br /><br /><b>Use Case1 (Loading Product in Composite View)</b><br />Steps:<br />1. Opens CAE Manager Application.<br />2. Load a Product Structure in Product View.<br />3. Actor opens  Product Structure in \"Composite View\" from Product View.<br /><br /><b>Use Case2 (Loading Model in Composite View)</b><br />Steps:<br />1. Opens CAE Manager Application.<br />2. Load a Model Structure in Model View.<br />3. Actor opens Model Structure in  \"Composite View\" from Model View.<br /><br /><b>Use Case3 (Loading Analysis in Composite View)</b><br />Steps:<br />1. Opens CAE Manager Application.<br />2. Load a Analysis Structure in Analysis View.<br />3. Actor opens Analysis in  \"Composite View\" from Analysis View."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "this operation is deprecated because we added new argument to send the column names.",
            "deprecatedRelease": "tc10000.1.6"
          }
        ],
        "ParameterInfo": [
          {
            "description": "Selected Composite View Top Line. It can be <b>ItemRevision</b>, <b>CAEModelRevision</b>, <b>CAEAnalysisRevision</b>.",
            "parameterName": "component"
          },
          {
            "description": "Item Types to be filtered from Tool Bar. It can be<br />0 - <b>CAEModelRevision</b><br />1 - <b>CAEGeometryRevision</b><br />2 - <b>CAEAnalysisRevision</b><br />3 <b>- All</b>.",
            "parameterName": "filterItemType"
          },
          {
            "description": "Relationship List to be filtered from Tool Bar.  Relationship List is the list of Strings populated from <br /><b>CAE_significant_relation_types_for_Product</b> Teamcenter Preference for <b>ItemRevision</b>,<br /><b>CAE_significant_relation_types_for_CAEModel</b> Teamcenter Preference for <b>CAEModelRevision</b>,<b> CAE_significant_relation_types_for_CAEAnalysis</b> Teamcenter Preference for <b>CAEAnalysisRevision</b>.",
            "parameterName": "filterRelationType"
          },
          {
            "description": "If True it will show the related <b>CAEAnalysisRevision</b> for all <b>CAEModelRevision</b>.",
            "parameterName": "showRelatedAnalysisAll"
          },
          {
            "description": "If True it will show the related <b>CAEAnalysisRevision</b> for Root <b>CAEModelRevision</b>.",
            "parameterName": "showRelatedAnalysisRootOnly"
          },
          {
            "description": "<b>ConfigurationContext</b> applied on the input view.",
            "parameterName": "configurationContext"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.4",
        "dependencies": "",
        "description": "CAE Manager provides Composite View to view Product, Model and Analysis with their several relationships in a organised way. This Operation will return the Composite View all level Data Tree Structure built on the server side. It uses TIE query to get the results. This Operation also have capability to filter the Structure based on Item Type and Relation Type passed as parameters in the Operation. <b>ConfigurationContext</b> is also passed as parameter for TIE Query",
        "exceptionCondition": "",
        "id": "getCompositeLineNodesExpandBelow#const,Teamcenter::BusinessObject,&$int$const,std::vector<std::string>,&$bool$bool$const,Teamcenter::ConfigurationContext,&",
        "interface": "CAE0::Soa::SimProc::SimStructureManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getCompositeLineNodesExpandBelow",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::CompositeViewResponse#CAE0::Soa::SimProc::SimStructureManagement::getCompositeLineNodesExpandBelow#const,Teamcenter::BusinessObject,&$int$const,std::vector<std::string>,&$bool$bool$const,Teamcenter::ConfigurationContext,&",
        "returnDescription": "Method returns the newly created data type about the queried item parent child structure as ParentToChildCompositeStructure data structure.<br /><br />The following partial errors may be returned:<br />51003 - The current user does not have write access to the selected object.<br />46062 - The BOM cannot be expanded because it contains an unreadable item.<br />206815 - The license check failed. There is no valid license to access the Teamcenter Simulation functionality.<br />11001 - TcXML Import Export internal error.<br />11002 - Transfermode name passed for import/export is missing in the database.<br />11004 - Failed to create Log/FailedObjects file for import/export.",
        "useCase": "This operation return the Data Tree Structure.  This Operation is called when User performs the following Steps:<br /><br /><b>Use Case1 (Loading Product in Composite View)</b><br />Steps:<br />1. Opens CAE Manager Application.<br />2. Load a Product Structure in Product View.<br />3. Actor opens  Product Structure in \"Composite View\" from Product View.<br />4. Actor selects one or more Product Line and clicks \"Expand Below\" from Context Menu.<br /><br /><b>Use Case2 (Loading Model in Composite View)</b><br />Steps:<br />1. Opens CAE Manager Application.<br />2. Load a Model Structure in Model View.<br />3. Actor opens Model Structure in  \"Composite View\" from Model View.<br />4. Actor selects one or more Model Line and clicks \"Expand Below\" from Context Menu.<br /><br /><b>Use Case3 (Loading Analysis in Composite View)</b><br />Steps:<br />1. Opens CAE Manager Application.<br />2. Load a Analysis Structure in Analysis View.<br />3. Actor opens Analysis in  \"Composite View\" from Analysis View.<br />4. Actor selects one or more Analysis Line and clicks \"Expand Below\" from Context Menu."
      },
      {
        "ParameterInfo": [
          {
            "description": "Selected Composite View Top Line. This can be <b>ItemRevision</b>, <b>CAEModelRevision</b> or <b>CAEAnalysisRevision</b>.",
            "parameterName": "component"
          },
          {
            "description": "Item Types to filter on. Supported values are:<br />0 - <b>CAEModelRevision</b><br />1 - <b>CAEGeometryRevision</b><br />2 - <b>CAEAnalysisRevision</b><br />3 <b>- All</b>.",
            "parameterName": "filterItemType"
          },
          {
            "description": "Relationship List to be filtered from Tool Bar. Relationship List is the list of Strings populated from <br /><b>CAE_significant_relation_types_for_Product</b> Teamcenter Preference for <b>ItemRevision</b>,<br /><b>CAE_significant_relation_types_for_CAEModel</b> Teamcenter Preference for <b>CAEModelRevision</b>, <b>CAE_significant_relation_types_for_CAEAnalysis </b>Teamcenter Preference for <b>CAEAnalysisRevision</b>.",
            "parameterName": "filterRelationType"
          },
          {
            "description": "If True it will show the related <b>CAEAnalysisRevision</b> for all <b>CAEModelRevision</b>.",
            "parameterName": "showRelatedAnalysisAll"
          },
          {
            "description": "If True it will show the related <b>CAEAnalysisRevision</b> for Root <b>CAEModelRevision</b>.",
            "parameterName": "showRelatedAnalysisRootOnly"
          },
          {
            "description": "<b>ConfigurationContext</b> applied on the input view.",
            "parameterName": "configurationContext"
          },
          {
            "description": "Column names represent the internal names of the <b>ItemRevision</b> properties.For example:- object_name,object_desc.",
            "parameterName": "columnNames"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.6",
        "dependencies": "",
        "description": "CAE Manager provides Composite View to view Product, Model and Analysis with their several relationships in an organized way. This Operation returns the Composite View all level Data Tree Structure built on the server side. It uses TcXML Import Export query to get the results. This operation also has the capability to filter the structure based on <b>Item</b> type and relation type passed as parameters in the operation. <b>ConfigurationContext</b> is also passed as parameter for TcXML Import Export Query.",
        "exceptionCondition": "",
        "id": "getCompositeLineNodesExpandBelow2#const,Teamcenter::BusinessObject,&$int$const,std::vector<std::string>,&$bool$bool$const,Teamcenter::ConfigurationContext,&$const,std::vector<std::string>,&",
        "interface": "CAE0::Soa::SimProc::SimStructureManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getCompositeLineNodesExpandBelow2",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2016_03::SimStructureManagement::CompositeViewResponse2#CAE0::Soa::SimProc::SimStructureManagement::getCompositeLineNodesExpandBelow2#const,Teamcenter::BusinessObject,&$int$const,std::vector<std::string>,&$bool$bool$const,Teamcenter::ConfigurationContext,&$const,std::vector<std::string>,&",
        "returnDescription": "Method returns the newly created data type about the queried item parent child structure as <i>ParentToChildCompositeStructure2</i> data structure.<br /><br />The following partial errors may be returned:<br />51003 - The current user does not have write access to the selected object.<br />46062 - The BOM cannot be expanded because it contains an unreadable item.<br />206815 - The license check failed. There is no valid license to access the Teamcenter Simulation functionality.<br />11001 - TcXML Import Export internal error.<br />11002 - Transfermode name passed for import/export is missing in the database.<br />11004 - Failed to create Log/FailedObjects file for import/export.",
        "useCase": "This operation return the Data Tree Structure. This Operation is called when User performs the following Steps:<br /><br /><b>Use Case1 (Loading Product in Composite View)</b><br />Steps:<br />1. Opens CAE Manager Application.<br />2. Load a Product Structure in Product View.<br />3. Actor opens Product Structure in \"Composite View\" from Product View.<br />4. Actor selects one or more Product Line and clicks \"Expand Below\" from Context Menu.<br /><br /><b>Use Case2 (Loading Model in Composite View)</b><br />Steps:<br />1. Opens CAE Manager Application.<br />2. Load a Model Structure in Model View.<br />3. Actor opens Model Structure in \"Composite View\" from Model View.<br />4. Actor selects one or more Model Line and clicks \"Expand Below\" from Context Menu.<br /><br /><b>Use Case3 (Loading Analysis in Composite View)</b><br />Steps:<br />1. Opens CAE Manager Application.<br />2. Load a Analysis Structure in Analysis View.<br />3. Actor opens Analysis in \"Composite View\" from Analysis View.<br />4. Actor selects one or more Analysis Line and clicks \"Expand Below\" from Context Menu."
      },
      {
        "ParameterInfo": [
          {
            "description": "Simulation dashboard configuration object.",
            "parameterName": "dashboardConfiguration"
          },
          {
            "description": "A list of input item revisions (<b>ItemRevision</b> and its sub-types) which will be used to query simulation dashboard data as per the simulation dashboard configuration object.",
            "parameterName": "itemRevisionList"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc12000.2.0",
        "dependencies": "",
        "description": "Simulation Dashboard functionality is used to monitor the simulation data in the simulation dashboard view as per the simulation dashboard configuration which is configured by the user in the Teamcenter Rich Client. Simulation Dashboard is divided into two sections. The section on the top is the summary section which shows dashboard name, input method, files information details etc. and the bottom section shows a table with list of selected <b>ItemRevision</b> objects in the first column and its simulation data in the corresponding configured column(s). This service operation is used to get the simulation data for the list of provided <b>ItemRevision</b> objects as per the simulation dashboard configuration saved under <b>CAE0ConfigRevision</b> object. These objects to monitor are populated in the first column in the simulation dashboard table and the simulation data is populated in the subsequent columns for each object to monitor. Each row in the simulation dashboard table represents related simulation data for the object monitored.",
        "exceptionCondition": "",
        "id": "getDashboardDataForIRList#const,cae::CAE0ConfigRevision,&$const,std::vector<Teamcenter::ItemRevision>,&",
        "interface": "CAE0::Soa::SimProc::SimProcessConfigurationManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getDashboardDataForIRList",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2019_06::SimProcessConfigurationManagement::SimulationDashboardDetailsResponse#CAE0::Soa::SimProc::SimProcessConfigurationManagement::getDashboardDataForIRList#const,cae::CAE0ConfigRevision,&$const,std::vector<Teamcenter::ItemRevision>,&",
        "returnDescription": "Method returns data type <i>SimulationDashboardDetailsResp</i>onse. This response contains the query results in a structured manner to populate the simulation dashboard data in the &ldquo;Simulation Dashboard&rdquo; view.<br /><br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">206680- The XML file could not be parsed/validated: CAE_Analysis_Dashboard_config.xml</li><li type=\"disc\">372008 - The provided input object is invalid because only objects of type &ldquo;CAE Configuration&rdquo;, with configuration type &ldquo;Analysis Dashboard&rdquo; or &ldquo;Model Dashboard&rdquo;, are allowed.</li></ul></ul>",
        "useCase": "<b>Use Case 1: User invokes the &ldquo;Simulation Dashboard&rdquo; from the right mouse button click.</b><br />When the user selects a folder from the home view and does a right mouse button click, system presents a dialog to select simulation dashboard configuration object, upon selection, system launches CAE Analysis Revision or its subtypes or CAE Model Revision objects or its sub types are populated in the first column of the table. User clicks on the execute button then this operation will be fired to populate all the simulation data in the simulation dashboard.<br /><br /><b>Use Case 2: User invokes the &ldquo;Simulation Dashboard&rdquo; from the Analysis view tool bar.</b><br />When the user invokes &ldquo;Simulation Dashboard&rdquo; from the Analysis view tool bar, system presents a dialog to select simulation dashboard  configuration object, upon selection, system launches CAE Analysis Revision or its subtypes are populated in the first column of the table. User clicks on the execute button then this operation will be fired to populate all the simulation data in the simulation dashboard."
      },
      {
        "ParameterInfo": [
          {
            "description": "Simulation dashboard configuration object.",
            "parameterName": "dashboardConfiguration"
          },
          {
            "description": "A root <b>BOMLine</b> object from the model view which will be used to get model structure objects and query dashboard data as per the configuration specified in <b>CAE0ConfigRevision</b> object.",
            "parameterName": "rootBomLine"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc12000.2.0",
        "dependencies": "",
        "description": "Simulation Dashboard functionality is used to monitor the simulation data in the simulation dashboard view as per the simulation dashboard configuration which is configured by the user in the Teamcenter Rich Client. Simulation Dashboard is divided into two sections. The section on the top is the summary section which shows dashboard name, input method, files information details etc. and the bottom section shows a table with list of selected <b>ItemRevision</b> objects in the first column and its simulation data in the corresponding configured column(s). This service operation is used to get the simulation data for the list of <b>ItemRevision</b> objects by traversing the input root <b>BOMLine</b> from the model structure as per the simulation dashboard configuration saved under <b>CAE0ConfigRevision</b> object. These objects to monitor are populated in the first column in the simulation dashboard table and the simulation data is populated in the subsequent columns for each object to monitor. Each row in the simulation dashboard table represents related simulation data for the object monitored.",
        "exceptionCondition": "",
        "id": "getDashboardDataForModelStructure#const,cae::CAE0ConfigRevision,&$const,Teamcenter::BOMLine,&",
        "interface": "CAE0::Soa::SimProc::SimProcessConfigurationManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getDashboardDataForModelStructure",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2019_06::SimProcessConfigurationManagement::SimulationDashboardDetailsResponse#CAE0::Soa::SimProc::SimProcessConfigurationManagement::getDashboardDataForModelStructure#const,cae::CAE0ConfigRevision,&$const,Teamcenter::BOMLine,&",
        "returnDescription": "Method returns data type <i>SimulationDashboardDetailsResponse</i>. This response contains the query results in a structured manner to populate the simulation dashboard data in the &ldquo;Simulation Dashboard&rdquo; view.<br /><br />The following partial errors may be returned:<br /><br /><ul><ul><li type=\"disc\">206680- The XML file could not be parsed/validated: CAE_Analysis_Dashboard_config.xml</li><li type=\"disc\">206891 - The simulation dashboard configuration is invalid because only simulation dashboards of type Model Dashboard are allowed to launch the dashboard for a model structure.</li></ul></ul>",
        "useCase": "<b>User invokes the &ldquo;Simulation Dashboard&rdquo; from the Model view toolbar menu.</b><br />User loads the model structure in the Model view in CAE Manager. When the user invokes &ldquo;Simulation Dashboard&rdquo; from the Model view toolbar menu, system presents a dialog to select simulation dashboard. Upon selection, system launches the simulation dashboard and shows the root <b>BOMLine</b> object from model structure in the view. When the user executes the dashboard, this operation will get all the <b>ItemRevision</b> objects by traversing the <b>BOMLine</b> and populates all the configured column values in the Simulation Dashboard."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "A new operation is introduced in tc11.2.2 that will take the Item ID and Revision ID of the tool as input along with the Name.",
            "deprecatedRelease": "tc11000.2.2"
          }
        ],
        "ParameterInfo": [
          {
            "description": "Represents the array of the tool objects sent to the SOA",
            "parameterName": "toolObjects"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.3",
        "dependencies": "",
        "description": "This operation creates , updates the tool objects ( it also takes care of the deletion of the tab objects).",
        "exceptionCondition": "",
        "id": "createOrUpdateToolObjects#const,std::vector<CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolConfigInfo>,&",
        "interface": "CAE0::Soa::SimProc::SimProcessConfigurationManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "createOrUpdateToolObjects",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::createOrUpdateToolObjects#const,std::vector<CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolConfigInfo>,&",
        "returnDescription": "Returns servicedata",
        "useCase": ""
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "use getFileDetails2 operation. The newer version provides additional information used to display target folder path for ImanFile.",
            "deprecatedRelease": "tc11000.5.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "List of business objects for which the information of the attached files needs to be fetched. These business objects can be <b>Item</b>, <b>ItemRevision</b>, etc.",
            "parameterName": "inputObjects"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc11000.2.3",
        "dependencies": "",
        "description": "File Explorer view is a secondary view associated with Home, Product, Model and Analysis view  in CAE Manager. File Explorer view displays list of <b>ImanFile</b> objects which are associated with <b>ItemRevision</b> through <b>Dataset</b>. This Operation returns required information for File Explorer view.",
        "exceptionCondition": "",
        "id": "getFileDetails#const,std::vector<Teamcenter::BusinessObject>,&",
        "interface": "CAE0::Soa::SimProc::SimStructureManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getFileDetails",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2016_10::SimStructureManagement::GetFileDetailsResponse#CAE0::Soa::SimProc::SimStructureManagement::getFileDetails#const,std::vector<Teamcenter::BusinessObject>,&",
        "returnDescription": "Method returns a GetFileDetailsResponse object.<br /><br />The following partial errors may be returned:<br />206815 - The license check failed. There is no valid license to access the Teamcenter Simulation functionality.<br />214110 - The input object is not valid.<br />215075 - Invalid Item Revision.<br />39004 - Unable to load the type.<br />7007 - Invalid Tag - the requested object does not exist.",
        "useCase": "<b>Use Case1 (Open File Explorer View for Home view):</b><br />Steps:<br />1. User logs into CAE Manager.<br />2. Select Home in Home view.<br />3. User clicks the &quot;Show Data Panel&quot; button on the global toolbar without any selection in the primary views.<br />4. System brings up  File Explorer view along with &quot;Summary&quot;, &quot;Details&quot;, &quot;Impact Analysis&quot; and &quot;Attachments&quot; views.<br />5. User selects the File Explorer view.<br /><br /><b>Use Case2 (Open File Explorer View for Product/Model/Analysis view):</b><br />Steps:<br />1. User logs into CAE Manager<br />2. User opens the Product, Model or Analyisis in Product, Model or Analysis view respectively.<br />3. User selects and expands the &quot;Open Secondary Views&quot; button on the view toolbar.<br />4. System lists the File Explorer view in the drop down list<br />5. User selects File Explorer view from the list.<br />6. System open the File Explorer view."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "use getFileDetails3 operation to get more details about the files to be shown and the context ItemRevision information in the file explorer view when the multiple ItemRevisions are selected.",
            "deprecatedRelease": "tc13000.1.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "List of business objects for which the information of the attached files needs to be fetched. These business objects can be <b>Item</b>, <b>ItemRevision</b>, <b>Dataset</b>, <b>Folder</b> or <b>CAE0FileCollection</b>.",
            "parameterName": "inputObjects"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc11000.5.0",
        "dependencies": "",
        "description": "File Explorer view is a secondary view associated with Home, Product, Model and Analysis view  in CAE Manager. File Explorer view displays list of <b>ImanFile</b> objects which are associated with <b>ItemRevision</b> or <b>CAE0FileCollection</b> through <b>Dataset</b>. This Operation returns required information for File Explorer view.",
        "exceptionCondition": "",
        "id": "getFileDetails2#const,std::vector<Teamcenter::BusinessObject>,&",
        "interface": "CAE0::Soa::SimProc::SimStructureManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getFileDetails2",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2018_06::SimStructureManagement::GetFileDetailsResponse2#CAE0::Soa::SimProc::SimStructureManagement::getFileDetails2#const,std::vector<Teamcenter::BusinessObject>,&",
        "returnDescription": "Method returns a GetFileDetailsResponse2 object.<br /><br />The following partial errors may be returned:<br />206815 - The license check failed. There is no valid license to access the Teamcenter Simulation functionality.<br />214110 - The input object is not valid.<br />215075 - Invalid Item Revision.<br />39004 - Unable to load the type.<br />7007 - Invalid Tag - the requested object does not exist.",
        "useCase": "Use Case1:<br />Steps:<br />1. User logs into CAE Manager.<br />2. User selects <b>Item</b> objects in the Home view.<br />3. User invokes  the File Explorer view.<br />4. System queries the <b>Dataset</b> objects associated with the latest revision of the <b>Item</b> and displays the <b>ImanFile</b> objects contained in the <b>Dataset</b> objects in the File Explorer view.<br /><br />Use Case2:<br />Steps:<br />1. User logs into CAE Manager<br />2. User selects <b>ItemRevision</b> objects in the Home view.<br />3. User invokes the File Explorer view.<br />4. System queries the <b>Dataset</b> objects associated with the <b>ItemRevision</b> objects and displays the <b>ImanFile</b> objects contained in the <b>Dataset</b>  objects in the File Explorer view.<br /><br />Use Case3:<br />Steps:<br />1. User logs into CAE Manager<br />2. User selects <b>Dataset</b> objects the in Home view.<br />3. User invokes  the File Explorer view.<br />4. System displays the <b>ImanFile</b> objects contained in the <b>Dataset</b> objects in the File Explorer view.<br /><br />Use Case4:<br />Steps:<br />1. User logs into CAE Manager<br />2. User selects the <b>Folder</b> objects in the Home view.<br />3. User invokes  the File Explorer view.<br />4. System queries the <b>ItemRevision</b> objects contained in the <b>Folder</b> objects along with their associated <b>Dataset</b> objects and displays the <b>ImanFile</b> objects contained in the <b>Dataset</b> objects in the File Explorer view.<br /><br />Use Case5:<br />Steps:<br />1. User logs into CAE Manager<br />2. User selects <b>CAE0FileCollection</b> objects in the Home view.<br />3. User invokes  the File Explorer view.<br />4. System queries the <b>Dataset</b> object contained in the <b>CAE0FileCollection</b> objects and displays the <b>ImanFile</b> objects contained in the <b>Dataset</b> objects in the File Explorer view."
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of business objects for which the information of the attached files needs to be fetched. The supported business objects are <b>Item</b>, <b>ItemRevision</b>, <b>Dataset</b>, <b>Folder</b> and <b>CAE0FileCollection</b>.",
            "parameterName": "inputObjects"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc13000.1.0",
        "dependencies": "",
        "description": "File Explorer view is a secondary view associated with Home, Product, Model and Analysis view in CAE Manager. File Explorer view displays a list of <b>ImanFile</b> objects which are associated with <b>ItemRevision</b> or <b>CAE0FileCollection</b> through <b>Dataset</b>. This operation returns required information for File Explorer view.",
        "exceptionCondition": "",
        "id": "getFileDetails3#const,std::vector<Teamcenter::BusinessObject>,&",
        "interface": "CAE0::Soa::SimProc::SimStructureManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getFileDetails3",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2020_12::SimStructureManagement::GetFileDetailsResponse3#CAE0::Soa::SimProc::SimStructureManagement::getFileDetails3#const,std::vector<Teamcenter::BusinessObject>,&",
        "returnDescription": "The list of <i>FileDetails</i> including <b>ImanFile</b>, its associated <b>Dataset</b>, <b>ItemRevision</b> and folder path if the file present in the <b>CAE0FileCollection</b> object and a list of <b>ItemRevision</b> objects.<br />The following partial errors may be returned:<br />      7007 Invalid Tag - the requested object does not exist.",
        "useCase": "<b>Use Case 1</b>:<br />Steps:<br />1. User logs into CAE Manager.<br />2. User selects <b>Item</b> objects in the Home view.<br />3. User invokes the File Explorer view.<br />4. System queries the <b>Dataset</b> objects associated with the latest revision of the <b>Item</b> and displays the <b>ImanFile</b> objects contained in the <b>Dataset</b> objects in the File Explorer view.<br /><br /><b>Use Case 2</b>:<br />Steps:<br />1. User logs into CAE Manager<br />2. User selects <b>ItemRevision</b> objects in the Home view.<br />3. User invokes the File Explorer view.<br />4. System queries the <b>Dataset</b> objects associated with the <b>ItemRevision</b> objects and displays the <b>ImanFile</b> objects contained in the <b>Dataset</b> objects in the File Explorer view.<br /><br /><b>Use Case 3</b>:<br />Steps:<br />1. User logs into CAE Manager<br />2. User selects <b>Dataset</b> objects the in Home view.<br />3. User invokes the File Explorer view.<br />4. System displays the <b>ImanFile</b> objects contained in the <b>Dataset</b> objects in the File Explorer view.<br /><br /><b>Use Case 4</b>:<br />Steps:<br />1. User logs into CAE Manager<br />2. User selects the <b>Folder</b> objects in the Home view.<br />3. User invokes the File Explorer view.<br />4. System queries the <b>ItemRevision</b> objects contained in the <b>Folder</b> objects along with their associated <b>Dataset</b> objects and displays the <b>ImanFile</b> objects contained in the <b>Dataset</b> objects in the File Explorer view.<br /><br /><b>Use Case 5</b>:<br />Steps:<br />1. User logs into CAE Manager<br />2. User selects <b>CAE0FileCollection</b> objects in the Home view.<br />3. User invokes the File Explorer view.<br />4. System queries the <b>Dataset</b> object contained in the <b>CAE0FileCollection</b> objects and displays the <b>ImanFile</b> objects contained in the <b>Dataset</b> objects in the File Explorer view.<br /><br /><b>Use Case 6</b>:<br />Steps:<br />1. User logs into CAE Manager<br />2. User selects <b>ItemRevision</b> objects in the Home view.<br />3. User performs &ldquo;Revise..&rdquo; operation.<br />4. User invokes the File Explorer view.<br />4. System queries the <b>Dataset</b> object contained in the <b>ItemRevision</b> objects and displays the <b>ImanFile</b> objects contained in the <b>Dataset</b> objects with proper context item revision information in the File Explorer view."
      },
      {
        "ParameterInfo": [
          {
            "description": "Attribute name to be used for fetching status objects. <br />Valid attribute names are -<br /><font face=\"courier\" height=\"10\">cae0JobId<br />cae0LaunchType<br />cae0ToolName<br />cae0StartTime<br />cae0FinishTime<br />cae0Status<br />cae0UserId<br />cae0WorkDir</font><br />",
            "parameterName": "attribute"
          },
          {
            "description": "Value for given attribute in String format. <br />For <font face=\"courier\" height=\"10\">cae0StartTime</font> and <font face=\"courier\" height=\"10\">cae0FinishTime</font> attributes, calling client is responsible for converting the date to  a string using Property::toDateString funtion in the SOA client  framework's Property     <br />class. This is a utility function used to convert a Calendar to a string.<br />A string with the format 'yyyy-MM-dd'T'HH:mm:ssZ' is returned.<br /><br />Valid values for <font face=\"courier\" height=\"10\">cae0Status</font> are-<br />INITIALIZING<br />IN PROGRESS<br />INTERMEDIATE LOADING<br />LOADING<br />COMPLETE<br />TERMINATED<br />FAILED<br /><br />Valid values for <font face=\"courier\" height=\"10\">cae0LaunchType</font> are -<br />LOCAL<br />REMOTE<br />SERVER<br />",
            "parameterName": "value"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.0",
        "dependencies": "",
        "description": "The simulation tool launch feature in CAE Manager application supports a progress monitor dialog with a persistent status management object which is maintained in the database for each simulation tool launched by the user.<br /><br />This operation fetches  <b>CAE0SimProcessStatus</b> objects from database that match the attribute-value provided as input argument.",
        "exceptionCondition": "",
        "id": "getSimProcessStatus#const,std::string,&$const,std::string,&",
        "interface": "CAE0::Soa::SimProc::SimProcessStatusManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "getSimProcessStatus",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessStatusManagement::getSimProcessStatus#const,std::string,&$const,std::string,&",
        "returnDescription": "The service data object will be returned as a response to the client. The desired <b>CAE0SimProcessStatus</b> objects are returned as object list.<br /><br />Following are the possible errors returned - <br /><br /><ul><ul><li type=\"disc\">51000 Internal error in AOM Module. Please report this to your system administrator. </li><li type=\"disc\">51007 Failed on Object CAE0SimProcessStatus</li><li type=\"disc\">51001 Object is locked for modify in another session</li><li type=\"disc\">51003 You do not have write access to object CAE0SimProcessStatus</li><li type=\"disc\">51010 You do not have delete access to the object CAE0SimProcessStatus</li><li type=\"disc\">51019 The attribute is not valid for that operation.</li></ul></ul>",
        "useCase": ""
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "this operation is deprecated because we added new argument to send the column names.",
            "deprecatedRelease": "tc10000.1.6"
          }
        ],
        "ParameterInfo": [
          {
            "description": "The input product structure root. Each line in the input product structure typically represents an Product or Item type.",
            "parameterName": "targetReferenceLine"
          },
          {
            "description": "<b>ConfigurationContext</b> applied on the target model view.",
            "parameterName": "modelConfigurationContext"
          },
          {
            "description": "Current Product line business Object which is of Product/Item type.",
            "parameterName": "productCurrentLine"
          },
          {
            "description": "<b>ConfigurationContext</b> applied on the input product view.",
            "parameterName": "productConfigurationContext"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.4",
        "dependencies": "",
        "description": "CAE Manager provides an expand below option for the Target References View loaded structure. This operation will generate a tree structure containing Target References for each line from the specified Input structure. A target reference is the CAE Target Relationship between a CAE ModelRevision object and an ItemRevision object. The tree structure will represent an all level expanded data tree structure. This is done using TCXML Import Export queries on the server side.",
        "exceptionCondition": "",
        "id": "getTargetRefLineNodesExpandBelow#const,Teamcenter::BusinessObject,&$const,Teamcenter::ConfigurationContext,&$const,Teamcenter::BusinessObject,&$const,Teamcenter::ConfigurationContext,&",
        "interface": "CAE0::Soa::SimProc::SimStructureManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getTargetRefLineNodesExpandBelow",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::TargetReferencesViewDataResponse#CAE0::Soa::SimProc::SimStructureManagement::getTargetRefLineNodesExpandBelow#const,Teamcenter::BusinessObject,&$const,Teamcenter::ConfigurationContext,&$const,Teamcenter::BusinessObject,&$const,Teamcenter::ConfigurationContext,&",
        "returnDescription": "The operation returns a Target References view data response which will contain the Target Reference tree structure generated and service data with appropriate errors, if encountered. <br />The following partial errors may be returned:<br />206815 - The license check failed. There is no valid license to access the Teamcenter <br />Simulation functionality.<br />11001 - TcXML Import Export internal error.<br />11002 - Transfermode name passed for import/export is missing in the database.<br />11004 - Failed to create Log/FailedObjects file for import/export.",
        "useCase": "<ul><ul><li type=\"disc\"> User clicks on the product view toolbar menu option to open a secondary view i.e. Target Reference view.</li><li type=\"disc\"> User selects a particular line and selects  expand below option to expand the structure in the tree view.</li></ul></ul>"
      },
      {
        "ParameterInfo": [
          {
            "description": "The input product structure root. Each line in the input product structure typically represents an Product or Item type.",
            "parameterName": "targetReferenceLine"
          },
          {
            "description": "<b>ConfigurationContext</b> applied on the target model view.",
            "parameterName": "modelConfigurationContext"
          },
          {
            "description": "Current Product line business Object which is of Product/Item type.",
            "parameterName": "productCurrentLine"
          },
          {
            "description": "<b>ConfigurationContext</b> applied on the input product view.",
            "parameterName": "productConfigurationContext"
          },
          {
            "description": "Column names  represent the internal names of the <b>ItemRevision</b> properties. For example:- object_name, object_desc.",
            "parameterName": "columnNames"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.6",
        "dependencies": "",
        "description": "CAE Manager provides an expand below option for the Target References View loaded structure. This operation generates a tree structure containing Target References for each line from the specified Input structure. A target reference is the CAE Target Relationship between a <b>CAEModelRevision</b> object and an <b>ItemRevision</b> object. The tree structure will represent an all level expanded data tree structure. This is done using TCXML Import Export queries on the server side.",
        "exceptionCondition": "",
        "id": "getTargetRefLineNodesExpandBelow2#const,Teamcenter::BusinessObject,&$const,Teamcenter::ConfigurationContext,&$const,Teamcenter::BusinessObject,&$const,Teamcenter::ConfigurationContext,&$const,std::vector<std::string>,&",
        "interface": "CAE0::Soa::SimProc::SimStructureManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getTargetRefLineNodesExpandBelow2",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2016_03::SimStructureManagement::TargetReferencesViewDataResponse2#CAE0::Soa::SimProc::SimStructureManagement::getTargetRefLineNodesExpandBelow2#const,Teamcenter::BusinessObject,&$const,Teamcenter::ConfigurationContext,&$const,Teamcenter::BusinessObject,&$const,Teamcenter::ConfigurationContext,&$const,std::vector<std::string>,&",
        "returnDescription": "The operation returns a Target References view data response which will contain the Target Reference tree structure generated and service data with appropriate errors, if encountered. <br />The following partial errors may be returned:<br />206815 - The license check failed. There is no valid license to access the Teamcenter <br />Simulation functionality.<br />11001 - TcXML Import Export internal error.<br />11002 - Transfermode name passed for import/export is missing in the database.<br />11004 - Failed to create Log/FailedObjects file for import/export.",
        "useCase": "<ul><ul><li type=\"disc\"> User clicks on the product view toolbar menu option to open a secondary view i.e. Target Reference view.</li><li type=\"disc\"> User selects a particular line and selects  expand below option to expand the structure in the tree view.</li></ul></ul>"
      },
      {
        "ParameterInfo": [
          {
            "description": "The input product structure root. Each line in the input product structure typically represents an Product or Item type.",
            "parameterName": "targetReferenceLine"
          },
          {
            "description": "<b>ConfigurationContext</b> applied on the target model view.",
            "parameterName": "modelConfigurationContext"
          },
          {
            "description": "Current Product line business Object which is of Product/Item type.",
            "parameterName": "productCurrentLine"
          },
          {
            "description": "<b>ConfigurationContext</b> applied on the input product view.",
            "parameterName": "productConfigurationContext"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.4",
        "dependencies": "",
        "description": "CAE Manager provides option for showing one level structure in Target References View;. This operation will generate a tree structure containing Target References for each line from the specified Input structure. A target reference is the CAE Target Relationship ship between a CAE Model object and an Item object. This Operation will represent one level data tree structure. This is done using  Persistant Object Model queries on the server side.",
        "exceptionCondition": "",
        "id": "getTargetReferencesLineNodes#const,Teamcenter::BusinessObject,&$const,Teamcenter::ConfigurationContext,&$const,Teamcenter::BusinessObject,&$const,Teamcenter::ConfigurationContext,&",
        "interface": "CAE0::Soa::SimProc::SimStructureManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getTargetReferencesLineNodes",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::TargetReferencesViewDataResponse#CAE0::Soa::SimProc::SimStructureManagement::getTargetReferencesLineNodes#const,Teamcenter::BusinessObject,&$const,Teamcenter::ConfigurationContext,&$const,Teamcenter::BusinessObject,&$const,Teamcenter::ConfigurationContext,&",
        "returnDescription": "<ul><ul><li type=\"disc\">The Operation returns a Target References view data response which will contain the Target Reference tree structure generated and service data with appropriate errors, if encountered. The following partial errors may be returned:</li></ul></ul><br />206815 - The license check failed. There is no valid license to access the Teamcenter Simulation functionality.<br />516001 - An Enquiry internal error has occurred.<br />516003 - The Enquiry module has not been initialized.<br />516021 - An invalid value is given to the enquiry.<br />516027 - The enquiry module has run out of memory.",
        "useCase": "<ul><ul><li type=\"disc\">User clicks on the product view toolbar menu option to open a secondary view i.e. Target Reference view with one level loaded structure.</li></ul></ul>"
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "Created new SOA getToolBOMProperties2.",
            "deprecatedRelease": "tc11000.2.2"
          }
        ],
        "ParameterInfo": [
          {
            "description": "Name of the tabs for which the properties have to be fetched.",
            "parameterName": "tabIdentifiers"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.3",
        "dependencies": "",
        "description": "This operation returns all the properties for all the tools in the hierarchy in one call from the server. It takes tab identifiers as input, creates the BOM window, traverses the hierarchy, collects the properties of the all the tool and stores them in a response object.",
        "exceptionCondition": "",
        "id": "getToolBOMProperties#const,std::vector<std::string>,&",
        "interface": "CAE0::Soa::SimProc::SimProcessConfigurationManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getToolBOMProperties",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolBOMPropStructResponse#CAE0::Soa::SimProc::SimProcessConfigurationManagement::getToolBOMProperties#const,std::vector<std::string>,&",
        "returnDescription": "The root tool, its properties required to render the menu, child tools and their respective property values.<br /> The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">51003   The current user does not have write access to the selected object.</li><li type=\"disc\">46062 The BOM cannot be expanded because it contains an unreadable item.</li></ul></ul>",
        "useCase": "Use Case 1: User opens CAE Manager and clicks on Simulation Tools on the menu bar.<br />When the user clicks on the Simulation Tools menu option on the CAE Manager menu bar, the tool menu gets populated based on the selection and access of the logged in user for the particular tool. When the user selects a Tool menu option it will return all the properties needed for the rendering of the menu."
      },
      {
        "ParameterInfo": [
          {
            "description": "Name of the tabs for which the properties have to be fetched.",
            "parameterName": "tabIdentifiers"
          },
          {
            "description": "If true, only released tools will be fetched otherwise user level Revision Rule preference CAE_tool_menu_rev_rule will be used.",
            "parameterName": "releasedToolsOnly"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc11000.2.2",
        "dependencies": "",
        "description": "This operation returns all properties for all the tools in the hierarchy. It takes tab identifiers as input, creates the BOM window, traverses the hierarchy, collects the properties of all the tools and returns them in a response object.",
        "exceptionCondition": "",
        "id": "getToolBOMProperties2#const,std::vector<std::string>,&$bool",
        "interface": "CAE0::Soa::SimProc::SimProcessConfigurationManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getToolBOMProperties2",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolBOMPropStructResponse#CAE0::Soa::SimProc::SimProcessConfigurationManagement::getToolBOMProperties2#const,std::vector<std::string>,&$bool",
        "returnDescription": "The root tool, its properties required to render the menu, child tools and their respective property values.<br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">51003 The current user does not have write access to the selected object.</li><li type=\"disc\">46062 The BOM cannot be expanded because it contains an unreadable item.</li></ul></ul>",
        "useCase": "Use Case 1: User opens CAE Manager and clicks on Simulation Tools on the menu bar.<br />When the user clicks on the Simulation Tools menu option on the CAE Manager menu bar, the tool menu gets populated based on the selection and access of the logged in user for the particular tool. When the user selects a Tool menu option it will return all the properties needed for the rendering of the menu."
      },
      {
        "ParameterInfo": [
          {
            "description": "Input item type names for which Simulation Tools are to be fetched. Support type names are: ItemRevision, CAEModelRevision, and CAEAnalysisRevision.",
            "parameterName": "inputItemTypes"
          },
          {
            "description": "Tab names of which configurations are to be fetched for all Simulation Tools.<br />Possible string values are:<br /><ul><ul><li type=\"disc\">CAE0General </li><li type=\"disc\">CAE0LaunchParameters </li><li type=\"disc\">CAE0EnvVariables </li><li type=\"disc\">CAE0InputConfiguration </li><li type=\"disc\">CAE0OutputConfiguration </li><li type=\"disc\">CAE0InputParameters </li><li type=\"disc\">CAE0AttributeConfiguration </li><li type=\"disc\">CAE0AccessControl </li><li type=\"disc\">CAE0Feedback</li></ul></ul>",
            "parameterName": "tabIdentifiers"
          },
          {
            "description": "Launch types for which Simulation Tools are to be fetched.<br />Possible string values are:<br /><ul><ul><li type=\"disc\">cae0LocalLaunch</li><li type=\"disc\">cae0LocalDetachedLaunch </li><li type=\"disc\">cae0RemoteLaunch </li><li type=\"disc\">cae0ServerLaunch</li></ul></ul>",
            "parameterName": "launchTypes"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.5",
        "dependencies": "",
        "description": "This operation returns a list of structures having tab information for Simulation Tools provided the input item types, required tab identifiers, user name, role and group. <br />The operation fetches the configurations for all tabs from input tab identifiers for all tools and then applies constraints to this list as per the logged in user/role/group access restrictions, input item configuration being same as the provided input item types and configured launch types being same as provided launch types.",
        "exceptionCondition": "",
        "id": "getToolTabProperties#const,std::vector<std::string>,&$const,std::vector<std::string>,&$const,std::vector<std::string>,&",
        "interface": "CAE0::Soa::SimProc::SimProcessConfigurationManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "getToolTabProperties",
        "opTemplate": "CAE0::Soa::SimProc::_2015_10::SimProcessConfigurationManagement::ToolTabsInfo#CAE0::Soa::SimProc::SimProcessConfigurationManagement::getToolTabProperties#const,std::vector<std::string>,&$const,std::vector<std::string>,&$const,std::vector<std::string>,&",
        "returnDescription": "This operation will return a collection of structures containing configuration information for Simulation Tools for logged in user/group/role access, input types and launch.<br /><br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">51003 - The current user does not have write access to the selected object.</li><li type=\"disc\">46062 - The BOM cannot be expanded because it contains an unreadable item.</li><li type=\"disc\">51000 - Internal error in AOM Module. Please report this to your system administrator.</li></ul></ul>",
        "useCase": "<b>Use Case1</b><br /><br />User selects a CAE 3D Model item revision and clicks on Launch Simulation Tools command icon in active workspace.<br />User sees a command panel populated with list of Simulation Tool names list which have primary input type configured as CAE 3D Model , have Local launch as configured launch type and have enabled the access to logged in user's name/group/role."
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of data structure <i>CAEToolConfig2</i> object structure that holds the information for the tool to be created or updated",
            "parameterName": "toolObjects"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc11000.2.2",
        "dependencies": "",
        "description": "This operation creates the Simulation Tool objects from the input configuration passed as parameter <b>CAEToolConfigInfo2</b>. It also handles the updating configuration of the Simulation Tool object. It also deletes the tab objects as a part of the update operation when tool inherits from the parent.",
        "exceptionCondition": "",
        "id": "createOrUpdateToolObjects2#const,std::vector<CAE0::Soa::Internal::SimProc::_2016_05::SimProcessConfigurationManagement::CAEToolConfigInfo2>,&",
        "interface": "CAE0::Soa::SimProc::SimProcessConfigurationManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "createOrUpdateToolObjects2",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::createOrUpdateToolObjects2#const,std::vector<CAE0::Soa::Internal::SimProc::_2016_05::SimProcessConfigurationManagement::CAEToolConfigInfo2>,&",
        "returnDescription": "The created objects are returned. The following partial errors may be returned:<br /><br /><ul><ul><li type=\"disc\">51003   The current user does not have write access to the object.</li><li type=\"disc\">51007   Failed to create the Simulation Tool.</li><li type=\"disc\">63392   You do not have sufficient privileges on this object.</li></ul></ul>",
        "useCase": "SimTool1<br /><ul><ul><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;SimTool1_Child1</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;SimTool1_Child2</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;SimTool1_Child3</li></ul></ul><br /><br />SimTool2<br /><ul><ul><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;SimTool2_Child1</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;SimTool2_Child2</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;SimTool2_Child3</li></ul></ul><br /><br /><b>Use Case 1: User Creates a new Tool</b><br />User will be able to create a new tool in the configurator view. When the root tool is created all the accessory tabs are created by default. For the rest of the tools, the reference for the tabs is set to the reference of the parent. For example in the diagram above, if the user creates a new tool, SimTool3, under SimTool1, the references for the tabs for the newly created tool (ie SimTool3) will point to the same objects tabs as those of SimTool1.<br /><br /><b>Use Case 2: Update the values on the tab objects associated with the tool</b><br />This operation also takes care of updating the tabs associated with a tool. User can perform following operations under update operation.<br /><ul><ul><li type=\"disc\">Rename the selected tool from the UI.</li><li type=\"disc\">Update the values on the tabs for the selected tool after unchecking the &ldquo;Inherited&rdquo; checkbox.</li></ul></ul><br /><br /><b>Use Case 3: Inherit the tab object after having created a new object for the tool once and saving it.</b><br />If the user decides to make the tab inherited after having updated it for a tool once, the operation takes care of now pointing to the reference of the parent&rsquo;s tab and delete the tab for the selected tool.<br />Steps:<br /><ul><ul><li type=\"disc\">User creates a Tool SimTool2_Child3 and SimTool2.</li><li type=\"disc\">User unchecks &ldquo;Inherited&rdquo; on the General Tab, edits some attributes and saves it. A new reference object for General Tab will be created for SimTool2_Child3. Rest of the tab objects are still pointing to the tab objects of SimTool2.</li><li type=\"disc\">User checks the &ldquo;Inherited&rdquo; checkbox again.</li><li type=\"disc\">Now, the General tab reference should again point top that of SimTool2 and the General tab object that was created for SimTool2_Child3 should be deleted.</li></ul></ul>"
      },
      {
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc11000.6.0",
        "dependencies": "",
        "description": "This operation gathers the <b>CAE0Tool</b> objects which are configured for <b>CAEModelRevision</b> or its sub-types as input.  The <b>CAE0ToolRevision</b> objects holds the configuration to launch a CAE (Computer Aided Engineering) tool which is used to perform pre and post processing operations on a Simulation data. A CAE tool is launched on the output structure that the StructureMap operation generates. The configuration defined by the <b>CAE0ToolRevision</b> object specifies the launch type which the CAE tool. The launch types can be <i>&ldquo;Local</i>&rdquo; where the CAE tool can be launched on the system where the Teamcenter client is running; <i>&ldquo;Server&rdquo;</i> where CAE tool can be launched on the system where the Teamcenter Server is installed and <i>&ldquo;Remote&rdquo;</i> where the CAE tool can be launched through dispatcher services.",
        "exceptionCondition": "",
        "id": "getValidToolsForStructureMap#",
        "interface": "CAE0::Soa::SimProc::SimulationToolLaunch",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "getValidToolsForStructureMap",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2018_11::SimulationToolLaunch::ToolsForStructureMapResponse#CAE0::Soa::SimProc::SimulationToolLaunch::getValidToolsForStructureMap",
        "returnDescription": "The <b>CAE0Tool</b> objects which has at least a released revision and their supported launch types.",
        "useCase": "A user can configure the Structure Map  with different rules. While configuring Structure Map user can select the <b>CAE0Tool</b> of which the latest released revision can be launched on the output <b>CAEModel</b> structure that StructureMap operation generates."
      },
      {
        "ParameterInfo": [
          {
            "description": "Root <b>BOMLine</b> of the loaded model structure.",
            "parameterName": "modelRoot"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc11000.3.0",
        "dependencies": "",
        "description": "This operation categorizes the loaded model structure into recycle, reused or unique underlying components which can be highlighted on the client as per the colors set in the preference.<br /><ul><ul><li type=\"disc\">A unique <b>CAEModelRevision</b> is the one that appears only once in the structure.</li><li type=\"disc\">A recycled <b>CAEModelRevision</b> is the one that appears more than once in the loaded structure</li><li type=\"disc\">A reused <b>CAEModelRevision</b> is the one that is used in structures other than the loaded model structure</li></ul></ul>",
        "exceptionCondition": "",
        "id": "highlightModelStructure#const,Teamcenter::BOMLine,&",
        "interface": "CAE0::Soa::SimProc::SimStructureManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "highlightModelStructure",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2017_05::SimStructureManagement::HighlightModelResponse#CAE0::Soa::SimProc::SimStructureManagement::highlightModelStructure#const,Teamcenter::BOMLine,&",
        "returnDescription": "Returns a structure containing a map of recycle, reused and unique bomlines. The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">43009 - Invalid value.</li><li type=\"disc\">515024 - The object is not valid. Possibly due to an earlier error not having been handled, uninitialized data or unloaded/deleted or otherwise invalid references. Check where the reference was obtained from and the validity of same in this operation.</li><li type=\"disc\">38041 - An invalid object instance is being used in conjunction with property.</li></ul></ul>",
        "useCase": "The user can load a model structure in the model view of CAE manager. Upon clicking the highlight model structure toggle available on the view toolbar, this operation is invoked. This operation is responsible for categorizing the <b>CAEModelRevision</b> <b>BOMLine</b> into <i>recycled</i>, <i>reused</i> and <i>unique</i> model bomlines map."
      },
      {
        "ParameterInfo": [
          {
            "description": "The FMS file ticket for the input xml file to be imported.",
            "parameterName": "xmlFileTicket"
          },
          {
            "description": "The list of FMS file tickets for dataset named reference files.",
            "parameterName": "namedRefFileTickets"
          },
          {
            "description": "The list of FMS file tickets for the log files.",
            "parameterName": "logFileTickets"
          },
          {
            "description": "The transfer mode name used for import. The supported transfer modes are &ldquo;CAE_incremental_import&rdquo;, &ldquo;ConfiguredDataImportDefault&rdquo; and &ldquo;incremental_import&rdquo;.",
            "parameterName": "transferMode"
          },
          {
            "description": "If true, imported objects will be checked in; otherwise, imported objects will not be checked in.",
            "parameterName": "checkInOnImport"
          },
          {
            "description": "If true, check-out will be cancelled; otherwise, objects will remain checked-out.",
            "parameterName": "performCancelCheckOut"
          },
          {
            "description": "A list of the session options to control import behavior as name-value pairs. The supported options are: &ldquo;<i>PIE_IMPORT_WITH_DSM</i>&rdquo;, &ldquo;<i>PIE_IMPORT_CLIENT_FILE_PATH</i>&rdquo;. If &ldquo;<i>PIE_IMPORT_WITH_DSM</i> &rdquo; is true and &ldquo; <i>PIE_IMPORT_CLIENT_FILE_PATH</i>&rdquo; is set with client side full path for dataset named reference files folder, then PLMXML returns the *.plmd file tickets for the named references that are imported. This is used by the Data Share Manager (DSM) to perform the upload.",
            "parameterName": "sessionOptions"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc12000.4.0",
        "dependencies": "",
        "description": "Simulation tool configured with PLMXML output rule and &ldquo;Check In Imported Objects&rdquo; option requires that imported objects need to be checked in. This operation imports the objects using PLMXML and checks in the imported objects. The XML file should be uploaded to the transient volume before calling this operation. If Datashare Manager(DSM) is enabled, then the system uses the DSM to upload the named reference files for the datasets otherwise the named reference files for datasets should be uploaded to the transient volume before the calling of this operation.",
        "exceptionCondition": "",
        "id": "importAndCheckinPLMXMLwithDSM#const,std::string,&$const,std::vector<std::string>,&$const,std::vector<std::string>,&$const,std::string,&$bool$bool$const,std::vector<CAE0::Soa::Internal::SimProc::_2020_04::SimulationToolLaunch::NameAndValue>,&",
        "interface": "CAE0::Soa::SimProc::SimulationToolLaunch",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "importAndCheckinPLMXMLwithDSM",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2020_04::SimulationToolLaunch::ImportObjectsFromPLMXMLResponse2#CAE0::Soa::SimProc::SimulationToolLaunch::importAndCheckinPLMXMLwithDSM#const,std::string,&$const,std::vector<std::string>,&$const,std::vector<std::string>,&$const,std::string,&$bool$bool$const,std::vector<CAE0::Soa::Internal::SimProc::_2020_04::SimulationToolLaunch::NameAndValue>,&",
        "returnDescription": "<b>ImportObjectsFromPLMXMLResponse2</b> &ndash; This response holds the FMS file tickets for the log files, the list of *.plmd file tickets for the dataset named refernce files, and any partial failures.<br /><br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">203474 - The input file name is too long.</li><li type=\"disc\">203485 - The specified Transfer Mode  is not for PLM XML import purpose. Please select a proper Transfer Mode and try again.</li><li type=\"disc\">203454 - An error has occurred during the processing of some objects.</li><li type=\"disc\">203488 - The value of input session option is invalid.</li></ul></ul>",
        "useCase": "Use Case 1: <b>User launches a simulation tool with PLMXML output rule and &ldquo;Check In Imported Objects&rdquo; option is selected.</b><br />When the user launches a simulation tool which is configued with PLMXML output rule and &ldquo;Check In Imported Objects&rdquo; option is selected, this will call <i>importAndCheckinPLMXMLwithDSM</i> operation to import the objects using PLMXML and will check-in the imported objects. The returned structure will contain the FMS file tickets for the  log files.<br /><br />Use Case 2: <b>User launches a simulation tool with PLMXML output rule and &ldquo;Check In Imported Objects&rdquo; option is not selected.</b><br />When the user launches a simulation tool which is configued with PLMXML output rule and &ldquo;Check In Imported Objects&rdquo; option is not selected, this will call <i>importAndCheckinPLMXMLwithDSM</i> operation to import the objects using PLMXML and will not check-in the imported objects. The returned structure will contain the FMS file tickets for the import log file.<br /><br />Use Case 3: <b>User launches a simulation tool with PLMXML output rule and Data Share Manager(DSM) is enabled.</b><br />When the user launches a simulation tool which is configued with PLMXML output rule and Data Share Manager is enabled. This will call <i>importAndCheckinPLMXMLwithDSM</i> operation to import the objects using PLMXML and it will use Data Share Manager(DSM) to perform upload of the dataset named reference files. The returned structure will contain the FMS file tickets for the import log file and *.plmd file ticket information."
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of zip file tickets which contain the PLMXML files to import.",
            "parameterName": "zipFileTickets"
          },
          {
            "description": "The <b>Folder</b> under which the imported data is attached as its content. If selected folder is not valid, then imported data is pasted under Home folder of the user.",
            "parameterName": "selectedFolder"
          },
          {
            "description": "If true,  the import CAE Data operation is performed in background.",
            "parameterName": "isAsync"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc12000.2.0",
        "dependencies": "",
        "description": "This service operation takes zip file tickets as input which are generated on client side after uploading them in transient volume of user. Using these file tickets, the zip files are downloaded in temporary directory on server. The downloaded zip files are unzipped on server side. These unzipped files contain PLMXML files which are imported using PLMXML import methods into Teamcenter. This imported data is added under the selected folder in Teamcenter which is input from the client. If selected folder is not valid, then imported data is pasted under Home folder of the user. User gets a Teamcenter mail at the end of the operation. This mail contains the information about operation and the dataset containing PLMXML log files generated during import of the PLMXML files.",
        "exceptionCondition": "",
        "id": "importCAEData#const,std::vector<std::string>,&$const,Teamcenter::Folder,&$bool",
        "interface": "CAE0::Soa::SimProc::SimDataManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "importCAEData",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimDataManagement::importCAEData#const,std::vector<std::string>,&$const,Teamcenter::Folder,&$bool",
        "returnDescription": "This operation returns serviceData which may contain following errors:&nbsp;&nbsp;&nbsp;&nbsp;<br />1106 &ndash; Directory does not exist.<br />206815 &ndash; No valid license to access the Teamcenter Simulation functionality.",
        "useCase": "User invokes &ldquo;Import CAE Data&rdquo; command in Teamcenter rich client. Selects the zip files as input and clicks on Import button. User gets a Teamcenter mail after the import operation is complete and verifies if the data is imported under the selected folder. If selected folder is not valid, then imported data is pasted under Home folder of the user."
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of zip file tickets which contain the PLMXML files to import.",
            "parameterName": "zipFileTickets"
          },
          {
            "description": "The <b>Folder</b> under which the imported data is attached as its content. If selected folder is not valid, then imported data is pasted under Home folder of the user.",
            "parameterName": "selectedFolder"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc12000.2.0",
        "dependencies": "",
        "description": "This service operation takes zip file tickets as input which are generated on client side after uploading them in transient volume of user. Using these file tickets, the zip files are downloaded in temporary directory on server. The downloaded zip files are unzipped on server side. These unzipped files contain PLMXML files which are imported using PLMXML import methods into Teamcenter. This imported data is added under the selected folder in Teamcenter which is input from the client. If selected folder is not valid, then imported data is pasted under Home folder of the user. User gets a Teamcenter mail at the end of the operation. This mail contains the information about operation and the dataset containing PLMXML log files generated during import of the PLMXML files.",
        "exceptionCondition": "",
        "id": "importCAEDataAsync#const,std::vector<std::string>,&$const,Teamcenter::Folder,&",
        "interface": "CAE0::Soa::SimProc::SimDataManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "importCAEDataAsync",
        "opTemplate": "void#CAE0::Soa::SimProc::SimDataManagement::importCAEDataAsync#const,std::vector<std::string>,&$const,Teamcenter::Folder,&",
        "returnDescription": "As this is an asynchronous operation, it does not have return parameter.",
        "useCase": "User invokes &ldquo;Import CAE Data&rdquo; command in Teamcenter rich client. Selects the zip files as input and clicks on Import button. User gets a Teamcenter mail after the import operation is complete and verifies if the data is imported under the selected folder. If selected folder is not valid, then imported data is pasted under Home folder of the user."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "the new importAndCheckinPLMXMLwithDSM operation is created which is having the capability of supporting the Datashare Manager to perform the upload of named reference files.",
            "deprecatedRelease": "tc12000.4.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "The FMS file ticket for the input xml file to be imported.",
            "parameterName": "xmlFileTicket"
          },
          {
            "description": "The list of FMS file tickets for dataset named reference files.",
            "parameterName": "namedRefFileTickets"
          },
          {
            "description": "The list of FMS file tickets for the log files.",
            "parameterName": "logFileTickets"
          },
          {
            "description": "The transfer mode name used for import. The supported transfer modes are &ldquo;CAE_incremental_import&rdquo;, &quot;ConfiguredDataImportDefault&quot; and &ldquo;incremental_import&rdquo;.",
            "parameterName": "transferMode"
          },
          {
            "description": "If true, imported objects will be checked in; otherwise, imported objects will not be checked in.",
            "parameterName": "checkInOnImport"
          },
          {
            "description": "If true, check-out will be cancelled; otherwise, objects will remain checked-out.",
            "parameterName": "performCancelCheckOut"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc11000.3.0",
        "dependencies": "",
        "description": "Simulation tool configured with PLMXML output rule and &ldquo;Check In Imported Objects&rdquo; option requires that imported objects need to be checked in. This operation imports the objects using PLMXML and checks in the imported objects. The XML file and the named reference files for datasets should be uploaded to the transient volume before the calling of this operation.",
        "exceptionCondition": "",
        "id": "importObjsFromPLMXMLForToolLaunch#const,std::string,&$const,std::vector<std::string>,&$const,std::vector<std::string>,&$const,std::string$bool$bool",
        "interface": "CAE0::Soa::SimProc::SimulationToolLaunch",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "importObjsFromPLMXMLForToolLaunch",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2017_05::SimulationToolLaunch::ImportObjectsFromPLMXMLResponse#CAE0::Soa::SimProc::SimulationToolLaunch::importObjsFromPLMXMLForToolLaunch#const,std::string,&$const,std::vector<std::string>,&$const,std::vector<std::string>,&$const,std::string$bool$bool",
        "returnDescription": "<b>ImportObjectsFromPLMXMLResponse</b> &ndash; This response holds the FMS file tickets for the log files, and any partial failures.<br /><br />The following partial errors may be returned:<br /><br /><ul><ul><li type=\"disc\">203474 &ndash; The input file name is too long.</li><li type=\"disc\">203485 - The specified Transfer Mode  is not for PLM XML import purpose. Please select a proper Transfer Mode and try again.</li><li type=\"disc\">203454 &ndash; An error has occurred during the processing of some objects.</li><li type=\"disc\">203302 &ndash; Insufficent privilege to perform this Import operation.</li><li type=\"disc\">203412 &ndash; Closure rule could not be found.</li></ul></ul>",
        "useCase": "Use Case 1: <b>User launches a simulation tool with PLMXML output rule and &ldquo;Check In Imported Objects&rdquo; option is selected.</b><br />When the user launches a simulation tool which is configued with PLMXML output rule and &ldquo;Check In Imported Objects&rdquo; option is selected, this will call <i>importObjsFromPLMXMLForToolLaunch</i> operation to import the objects using PLMXML and will check-in the imported objects. The returned structure will contain the FMS file tickets for the  log files.<br /><br />Use Case 2: <b>User launches a simulation tool with PLMXML output rule and &ldquo;Check In Imported Objects&rdquo; option is not selected.</b><br />When the user launches a simulation tool which is configued with PLMXML output rule and &ldquo;Check In Imported Objects&rdquo; option is not selected, this will call <i>importObjsFromPLMXMLForToolLaunch</i> operation to import the objects using PLMXML and will not check-in the imported objects. The returned structure will contain the FMS file tickets for the import log file."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "Adding new argument to handle the Pedigree Capture in case import tool launch.",
            "deprecatedRelease": "tc10000.1.5"
          }
        ],
        "ParameterInfo": [
          {
            "description": "Simulation Tool whose launch data need to be imported.",
            "parameterName": "simulationTool"
          },
          {
            "description": "Directory from where the data has to be imported.",
            "parameterName": "workingDirectory"
          },
          {
            "description": "Teamcenter object on which Simulation Tool is launched.",
            "parameterName": "inputObject"
          },
          {
            "description": "Path of the file containing the created objects information.",
            "parameterName": "xmlFileName"
          },
          {
            "description": "ImportRuntimeOverrideInfo constaining runtime overrides for export configuration of Simulation Tool.",
            "parameterName": "importRuntimeConfiguration"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.3",
        "dependencies": "",
        "description": "This internal operation imports the output data generated in the working directory as a result of execution of Simulation Tool launch into Teamcenter. Creation or modification of the Teamcenter objects required to hold the imported data is determined by the arguments itemCreationSetting and datasetCreationSetting. Naming of the created Teamcenter objects is controlled by passing the desired naming patterns as argument outputNamePatterns.<br />It is pre-requisite that the Simulation Administrator or user with DBA privileges must configure the Simulation Tool before executing this service.",
        "exceptionCondition": "",
        "id": "importSimulationToolLaunchOutputs#const,Teamcenter::BusinessObject,&$const,std::string$const,Teamcenter::BusinessObject,&$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo",
        "interface": "CAE0::Soa::SimProc::SimulationToolLaunch",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "importSimulationToolLaunchOutputs",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimulationToolLaunch::importSimulationToolLaunchOutputs#const,Teamcenter::BusinessObject,&$const,std::string$const,Teamcenter::BusinessObject,&$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo",
        "returnDescription": "Partial Errors are returned in the ServiceData when failed to import the utput data successfully:<br /><ul><ul><li type=\"disc\">206805  - Unable to open the log file.</li><li type=\"disc\">206806 -  Unable to find the result files in the working directory.</li><li type=\"disc\">206810 - Invalid Simulation Tool.</li><li type=\"disc\">206807 - One or more datasets were either not created or created with one or more missing named references.</li><li type=\"disc\">206815 - The license check failed. There is no valid license to access the Teamcenter Simulation functionality.</li><li type=\"disc\">206817 - No output rules are configured for data import.</li></ul></ul>",
        "useCase": "Use Case 1: Import Simulation Objects with As Needed Item Creation Setting.<br />When executed with itemCreationSetting as \"As_Needed\", no new Item will be created if there exists one as per the Simulation Tool output configuration. If found none, new Item will be created as per the Simulation Tool output configuration.<br /><br />Use Case 2: Import Simulation Objects with Always Item Creation Setting.<br />When executed with itemCreationSetting as \"Always\", new Item will be created as per the Simulation Tool output configuration.<br /><br />Use Case 3: Import Simulation Objects with Never Item Creation Setting.<br />When this operation is executed with itemCreationSetting as \"Never\" and if no existing Item is found as per the Simulation Tool output configuration, no new Item will be created.<br /><br />Use Case 4: Import Simulation Objects with As Needed Dataset Creation Setting.<br />When executed with datasetCreationSetting as \"As_Needed\", no new Dataset will be created if there exists one as per the Simulation Tool output configuration. If found none, new Dataset will be created as per the Simulation Tool output configuration.<br /><br />Use Case 5: Import Simulation Objects with Always Dataset Creation Setting.<br />When executed with datasetCreationSetting as \"Always\", new Dataset will be created as per the process Simulation Tool configuration.<br /><br />Use Case 6: Import Simulation Objects with Never Dataset Creation Setting.<br />When executed with datasetCreationSetting as \"Never\" and if no existing Dataset is found as per the process output configuration, no new Dataset will be created. <br />"
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "As of Teamcenter 11.2.2, modifying one of the arguments to handle file upload option in case import tool launch.",
            "deprecatedRelease": "tc11000.2.2"
          }
        ],
        "ParameterInfo": [
          {
            "description": "Simulation Tool whose launch data need to be imported.",
            "parameterName": "simulationTool"
          },
          {
            "description": "Directory from where the data has to be imported.",
            "parameterName": "workingDirectory"
          },
          {
            "description": "Teamcenter object on which Simulation Tool is launched.",
            "parameterName": "inputObject"
          },
          {
            "description": "Path of the file containing the created objects information.",
            "parameterName": "xmlFileName"
          },
          {
            "description": "ImportRuntimeOverrideInfo constaining runtime overrides for export configuration of Simulation Tool.",
            "parameterName": "importRuntimeConfiguration"
          },
          {
            "description": "Tool launch Job ID string.",
            "parameterName": "jobID"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.5",
        "dependencies": "",
        "description": "This internal operation imports the output data generated in the working directory as a result of execution of Simulation Tool launch into Teamcenter. Creation or modification of the Teamcenter objects required to hold the imported data is determined by the arguments itemCreationSetting and datasetCreationSetting. Naming of the created Teamcenter objects is controlled by passing the desired naming patterns as argument outputNamePatterns.<br />It is pre-requisite that the Simulation Administrator or user with DBA privileges must configure the Simulation Tool before executing this service. <br /><br />Use Case:<br />Use Case 1: Import Simulation Objects with As Needed Item Creation Setting.<br />When executed with itemCreationSetting as \"As_Needed\", no new Item will be created if there exists one as per the Simulation Tool output configuration. If found none, new Item will be created as per the Simulation Tool output configuration.<br /><br />Use Case 2: Import Simulation Objects with Always Item Creation Setting.<br />When executed with itemCreationSetting as \"Always\", new Item will be created as per the Simulation Tool output configuration.<br /><br />Use Case 3: Import Simulation Objects with Never Item Creation Setting.<br />When this operation is executed with itemCreationSetting as \"Never\" and if no existing Item is found as per the Simulation Tool output configuration, no new Item will be created.<br /><br />Use Case 4: Import Simulation Objects with As Needed Dataset Creation Setting.<br />When executed with datasetCreationSetting as \"As_Needed\", no new Dataset will be created if there exists one as per the Simulation Tool output configuration. If found none, new Dataset will be created as per the Simulation Tool output configuration.<br /><br />Use Case 5: Import Simulation Objects with Always Dataset Creation Setting.<br />When executed with datasetCreationSetting as \"Always\", new Dataset will be created as per the process Simulation Tool configuration.<br /><br />Use Case 6: Import Simulation Objects with Never Dataset Creation Setting.<br />When executed with datasetCreationSetting as \"Never\" and if no existing Dataset is found as per the process output configuration, no new Dataset will be created.",
        "exceptionCondition": "",
        "id": "importSimulationToolLaunchOutputs#const,Teamcenter::BusinessObject,&$const,std::string$const,Teamcenter::BusinessObject,&$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo$const,std::string",
        "interface": "CAE0::Soa::SimProc::SimulationToolLaunch",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "importSimulationToolLaunchOutputs",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimulationToolLaunch::importSimulationToolLaunchOutputs#const,Teamcenter::BusinessObject,&$const,std::string$const,Teamcenter::BusinessObject,&$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo$const,std::string",
        "returnDescription": "Partial Errors are returned in the ServiceData when failed to import the utput data successfully:<br /><br />206805 - Unable to open the log file.<br />206806 - Unable to find the result files in the working directory.<br />206810 - Invalid Simulation Tool.<br />206807 - One or more datasets were either not created or created with one or more missing named references.<br />206815 - The license check failed. There is no valid license to access the Teamcenter Simulation functionality.<br />206817 - No output rules are configured for data import.",
        "useCase": "Use Case 1: Import Simulation Objects with As Needed Item Creation Setting.<br />When executed with itemCreationSetting as \"As_Needed\", no new Item will be created if there exists one as per the Simulation Tool output configuration. If found none, new Item will be created as per the Simulation Tool output configuration.<br /><br />Use Case 2: Import Simulation Objects with Always Item Creation Setting.<br />When executed with itemCreationSetting as \"Always\", new Item will be created as per the Simulation Tool output configuration.<br /><br />Use Case 3: Import Simulation Objects with Never Item Creation Setting.<br />When this operation is executed with itemCreationSetting as \"Never\" and if no existing Item is found as per the Simulation Tool output configuration, no new Item will be created.<br /><br />Use Case 4: Import Simulation Objects with As Needed Dataset Creation Setting.<br />When executed with datasetCreationSetting as \"As_Needed\", no new Dataset will be created if there exists one as per the Simulation Tool output configuration. If found none, new Dataset will be created as per the Simulation Tool output configuration.<br /><br />Use Case 5: Import Simulation Objects with Always Dataset Creation Setting.<br />When executed with datasetCreationSetting as \"Always\", new Dataset will be created as per the process Simulation Tool configuration.<br /><br />Use Case 6: Import Simulation Objects with Never Dataset Creation Setting.<br />When executed with datasetCreationSetting as \"Never\" and if no existing Dataset is found as per the process output configuration, no new Dataset will be created."
      },
      {
        "ParameterInfo": [
          {
            "description": "Simulation Tool whose launch data need to be imported.",
            "parameterName": "simulationTool"
          },
          {
            "description": "Directory from where the data has to be imported.",
            "parameterName": "workingDirectory"
          },
          {
            "description": "Teamcenter object on which Simulation Tool is launched.",
            "parameterName": "inputObject"
          },
          {
            "description": "Path of the file containing the created objects information.",
            "parameterName": "xmlFileName"
          },
          {
            "description": "ImportRuntimeOverrideInfo containing runtime overrides for import configuration of Simulation Tool.",
            "parameterName": "importRuntimeConfiguration"
          },
          {
            "description": "Tool launch Job ID string.",
            "parameterName": "jobID"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc11000.2.2",
        "dependencies": "",
        "description": "This internal operation imports the output data generated in the working directory as a result of execution of Simulation Tool launch into Teamcenter. Creation or modification of the Teamcenter objects required to hold the imported data is determined by the arguments itemCreationSetting and datasetCreationSetting. Naming of the created Teamcenter objects is controlled by passing the desired naming patterns as argument outputNamePatterns.<br /><br />It is pre-requisite that the Simulation Administrator or user with DBA privileges must configure the Simulation Tool before executing this service.",
        "exceptionCondition": "",
        "id": "importSimulationToolLaunchOutputs#const,Teamcenter::BusinessObject,&$const,std::string$const,Teamcenter::BusinessObject,&$const,std::string$const,CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo2$const,std::string",
        "interface": "CAE0::Soa::SimProc::SimulationToolLaunch",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "importSimulationToolLaunchOutputs",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimulationToolLaunch::importSimulationToolLaunchOutputs#const,Teamcenter::BusinessObject,&$const,std::string$const,Teamcenter::BusinessObject,&$const,std::string$const,CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo2$const,std::string",
        "returnDescription": "Partial Errors are returned in the ServiceData when failed to import the utput data successfully:<br /><br />206805 - Unable to open the log file.<br />206806 - Unable to find the result files in the working directory.<br />206810 - Invalid Simulation Tool.<br />206807 - One or more datasets were either not created or created with one or more missing named references.<br />206815 - The license check failed. There is no valid license to access the Teamcenter Simulation functionality.<br />206817 - No output rules are configured for data import.",
        "useCase": "<b>Use Case 1</b>: Import Simulation Objects with As Needed Item Creation Setting.<br />When executed with itemCreationSetting as &quot;As_Needed&quot;, no new <b>Item</b> will be created if there exists one as per the Simulation Tool output configuration. If found none, new Item will be created as per the Simulation Tool output configuration.<br /><br /><b>Use Case 2</b>: Import Simulation Objects with Always Item Creation Setting.<br />When executed with itemCreationSetting as &quot;Always&quot;, new <b>Item</b> will be created as per the Simulation Tool output configuration.<br /><br /><b>Use Case 3</b>: Import Simulation Objects with Never Item Creation Setting.<br />When this operation is executed with itemCreationSetting as &quot;Never&quot; and if no existing Item is found as per the Simulation Tool output configuration, no new <b>Item</b> will be created.<br /><br /><b>Use Case 4</b>: Import Simulation Objects with As Needed Dataset Creation Setting.<br />When executed with datasetCreationSetting as &quot;As_Needed&quot;, no new <b>Dataset</b> will be created if there exists one as per the Simulation Tool output configuration. If found none, new <b>Dataset</b> will be created as per the Simulation Tool output configuration.<br /><br /><b>Use Case 5</b>: Import Simulation Objects with Always Dataset Creation Setting.<br />When executed with datasetCreationSetting as &quot;Always&quot;, new <b>Dataset</b> will be created as per the process Simulation Tool configuration.<br /><br /><b>Use Case 6</b>: Import Simulation Objects with Never Dataset Creation Setting.<br />When executed with datasetCreationSetting as &quot;Never&quot; and if no existing <b>Dataset</b> is found as per the process output configuration, no new <b>Dataset</b> will be created."
      },
      {
        "ParameterInfo": [
          {
            "description": "This is a list of business objects that have been cut and need to pasted under a target BOMLine.",
            "parameterName": "toolsTobePasted"
          },
          {
            "description": "The target BOMLine under which the selected BOMLines have to be pasted.",
            "parameterName": "targetBOMLine"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.3",
        "dependencies": "",
        "description": "This operation pastes the selected BOM Lines under a target BOMLine.",
        "exceptionCondition": "",
        "id": "pasteTool#const,std::vector<Teamcenter::BusinessObject>,&$const,Teamcenter::BOMLine,&",
        "interface": "CAE0::Soa::SimProc::SimProcessConfigurationManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "pasteTool",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::pasteTool#const,std::vector<Teamcenter::BusinessObject>,&$const,Teamcenter::BOMLine,&",
        "returnDescription": "ServiceData",
        "useCase": ""
      },
      {
        "ParameterInfo": [
          {
            "description": "List of attribute names that are to be set on the newly created object. <br />Valid values for attribute names are -<br /><font face=\"courier\" height=\"10\">cae0LaunchType<br />cae0ToolName<br />cae0StartTime<br />cae0Status<br />cae0UserId<br />cae0WorkDir<br />cae0PrimaryObjects</font><br />",
            "parameterName": "attributes"
          },
          {
            "description": "List of values for the corresponding attributes passed as argument to the operation. All attribute values are to be in String format. <br /><br />For <font face=\"courier\" height=\"10\">cae0StartTime</font> and <font face=\"courier\" height=\"10\">cae0FinishTime</font> attributes, calling client is responsible for converting the date to  a string using Property::toDateString funtion in the SOA client framework's Property class. This is a utility function used to convert a Calendar to a string.                                            A string with the format 'yyyy-MM-dd'T'HH:mm:ssZ' is returned.<br /><br /><br />Value for <font face=\"courier\" height=\"10\">cae0Status</font> should be -<br />INITIALIZING - at the time of creation.<br /><br />Valid values for <font face=\"courier\" height=\"10\">cae0LaunchType</font> are -<br />LOCAL  (When simulation tool is launched on local client machine)<br />REMOTE  (When simulation tool is launched on a remote machine)<br />SERVER&nbsp;&nbsp;&nbsp;&nbsp;(When simulation tool is be launched on the Teamcenter Server)<br />",
            "parameterName": "values"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.0",
        "dependencies": "",
        "description": "The simulation tool launch feature in CAE Manager application supports a progress monitor dialog with persistent status management objects. These objects are maintained in the database for each simulation tool launch job initiated by a user.<br /><br />This operation supports creation of the <b>CAE0SimProcessStatus</b> object from the client side with necessary parameters and conditions. The <font face=\"courier\" height=\"10\">cae0JobId</font> attribute will be populated on the newly created object with a unique string with current time stamp appended to it. This operation will be used by the client whenever the user launches the simulation tool and selects to view the progress monitor for the launched tool. <br />",
        "exceptionCondition": "",
        "id": "createSimProcessStatus#const,std::vector<std::string>,&$const,std::vector<std::string>,&",
        "interface": "CAE0::Soa::SimProc::SimProcessStatusManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "createSimProcessStatus",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessStatusManagement::createSimProcessStatus#const,std::vector<std::string>,&$const,std::vector<std::string>,&",
        "returnDescription": "The service data object will be returned as a response to the client. This service data object will hold the newly created <b>CAE0SimProcessStatus</b> business object. <br /><br />Following are the possible errors returned by this operation -<br /><br /><ul><ul><li type=\"disc\">39014 The specified type <b>CAE0SimProcessStatus</b> does not exist. </li></ul></ul><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   In order to avoid this error, make sure that <b>cae</b> template is loaded in the database.<br /><br /><ul><ul><li type=\"disc\">51000 Internal error in AOM Module. Please report this to your system administrator. </li></ul></ul>",
        "useCase": ""
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "This operation does not support attribute component and attribute name of input Item Revision object. Use the populateSimulationDashboard operation.",
            "deprecatedRelease": "tc11000.4.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "Input analysis dashboard configuration object.",
            "parameterName": "dashboardConfiguration"
          },
          {
            "description": "List of input item revisions (<b>CAEAnalysisRevision</b> and its subtypes) which will be used to query as per the analysis dashboard configuration object.",
            "parameterName": "inputAnalysisIRList"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc11000.2.3",
        "dependencies": "",
        "description": "CAE Analysis Dashboard is associated with a primary view. Analysis Dashboard is divided into two sections. The section on the top is the summary section which shows dashboard name, input method, number of files fetched etc. and the bottom section shows a list of selected <b>CAEAnalysisRevision</b> objects in tabular form and corresponding configured column(s). Column(s) configured shows values/image as per the traversal rules defined in the configuration object (<b>CAE0ConfigItem</b>). Traversal rules are defined for each column and column cell values shows the query result as per the traversal rules. Depending on the configuration from the <b>CAE0ConfigItem</b> object, this operation queries all the input <b>CAEAnalysisRevision</b> objects and returns a structured response to populate all the column(s) cell values.",
        "exceptionCondition": "",
        "id": "populateCAEAnalysisDashboard#const,cae::CAE0ConfigRevision,&$const,std::vector<Teamcenter::CAEAnalysisRevision>,&",
        "interface": "CAE0::Soa::SimProc::SimProcessConfigurationManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "populateCAEAnalysisDashboard",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement::CAEAnalysisDashboardPopulateResp#CAE0::Soa::SimProc::SimProcessConfigurationManagement::populateCAEAnalysisDashboard#const,cae::CAE0ConfigRevision,&$const,std::vector<Teamcenter::CAEAnalysisRevision>,&",
        "returnDescription": "Method returns newly created data type <i>CAEAnalysisDashboardPopulateResp</i>. This response contains the query results in a structured manner to populate the &ldquo;Analysis Dashboard&rdquo;.<br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">3005-  Invalid attribute found.</li><li type=\"disc\">3155- There is no class with this name.</li><li type=\"disc\">516001- An Enquiry internal error has occurred.</li></ul></ul>",
        "useCase": "<b>Use Case 1: User invokes the &ldquo;Analysis Dashboard&rdquo; from the right mouse button click.</b><br />When the user selects an folder from the home view and does an right mouse button click, system presents a dialog to select dashboard object, upon selection, system launches the analysis dashboard. This operation will be fired to populate all the configured column values in the Analysis Dashboard.<br /><br /><b>Use Case 2: User invokes the &ldquo;Analysis Dashboard&rdquo; from the Analysis View tool bar.</b><br />When the user invokes &ldquo;Analysis Dashboard&rdquo; from the Analysis View tool bar, system presents a dialog to select dashboard object, upon selection, system launches the analysis dashboard. This operation will be fired to populate all the configured column values in the Analysis Dashboard."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "Use getDashboardDataForModelStructure operation which will give the more simulation data to monitor in the simulation dashboard.",
            "deprecatedRelease": "tc12000.2.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "<b>CAE0Config</b> object.",
            "parameterName": "dashboardConfiguration"
          },
          {
            "description": "Root <b>BOMLine</b> object from the model view which will be used to get model structure objects and query dashboard data as per the configuration specified in <b>CAE0Config</b> object.",
            "parameterName": "rootBomLine"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc11000.4.0",
        "dependencies": "",
        "description": "Simulation Dashboard is associated with the primary view. Simulation Dashboard is divided into two sections. The section on the top is the summary section which shows the input method, number of files fetched etcetera and the bottom section shows a list of selected <b>ItemRevision</b> objects in tabular form and corresponding configured columns(s). Columns(s) configured shows the values/image as per the traversal rules defined in the <b>CAE0Config</b> object. Traversal rules are defined for each column and column cell values shows the query result as per the traversal rules. Depending on the configuration from the <b>CAE0Config</b> object, this operation queries all the <b>ItemRevision</b> objects by traversing input root <b>BOMLine</b> of model structure and returns a structured response to populate all the column(s) cell values.",
        "exceptionCondition": "",
        "id": "populateDashboardForModelStructure#const,cae::CAE0ConfigRevision,&$const,Teamcenter::BOMLine,&",
        "interface": "CAE0::Soa::SimProc::SimProcessConfigurationManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "populateDashboardForModelStructure",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2017_11::SimProcessConfigurationManagement::SimulationDashboardPopulateResp#CAE0::Soa::SimProc::SimProcessConfigurationManagement::populateDashboardForModelStructure#const,cae::CAE0ConfigRevision,&$const,Teamcenter::BOMLine,&",
        "returnDescription": "Method returns the query results to populate the &ldquo;Simulation Dashboard&rdquo;.<br />The following partial errors may be returned:<br /><br /><ul><ul><li type=\"disc\">206891 - The simulation dashboard configuration is invalid because only simulation dashboards of type Model Dashboard are allowed to launch the dashboard for a model structure.</li></ul></ul>",
        "useCase": "<b>Use Case: User invokes the &ldquo;Simulation Dashboard&rdquo; from the Model view toolbar menu.</b><br />User loads the model structure in the Model view in CAE Manager. When the user invokes &ldquo;Simulation Dashboard&rdquo; from the Model view toolbar menu, system presents a dialog to select simulation dashboard. Upon selection, system launches the simulation dashboard and shows the root <b>BOMLine</b> object from model structure in the view. When the user executes the dashboard, this operation will get all the <b>ItemRevision</b> objects by traversing the <b>BOMLine</b> and populates all the configured column values in the Simulation Dashboard."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "use getDashboardDataForIRList operation which will give the more simulation data to monitor in the simulation dashboard for the files with its details in case of ambiguous.",
            "deprecatedRelease": "tc12000.2.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "Simulation dashboard configuration object.",
            "parameterName": "dashboardConfiguration"
          },
          {
            "description": "List of input item revisions (<b>ItemRevision</b> and its subtypes) which will be used to query as per the simulation dashboard configuration object.",
            "parameterName": "inputItemIRList"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc11000.4.0",
        "dependencies": "",
        "description": "Simulation Dashboard is associated with a primary view. Simulation Dashboard is divided into two sections. The section on the top is the summary section which shows dashboard name, input method, number of files fetched etc. and the bottom section shows a list of selected <b>ItemRevision</b> objects in tabular form and corresponding configured column(s). Column(s) configured shows values/image as per the traversal rules defined in the configuration object (<b>CAE0ConfigItem</b>). Traversal rules are defined for each column and column cell values shows the query result as per the traversal rules. Depending on the configuration from the <b>CAE0ConfigItem</b> object, this operation queries all the input <b>ItemRevision</b> objects and returns a structured response to populate all the column(s) cell values.",
        "exceptionCondition": "",
        "id": "populateSimulationDashboard#const,cae::CAE0ConfigRevision,&$const,std::vector<Teamcenter::ItemRevision>,&",
        "interface": "CAE0::Soa::SimProc::SimProcessConfigurationManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "populateSimulationDashboard",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2017_11::SimProcessConfigurationManagement::SimulationDashboardPopulateResp#CAE0::Soa::SimProc::SimProcessConfigurationManagement::populateSimulationDashboard#const,cae::CAE0ConfigRevision,&$const,std::vector<Teamcenter::ItemRevision>,&",
        "returnDescription": "Method returns newly created data type SimulationDashboardPopulateResp. This response contains the query results in a structured manner to populate the &ldquo;Simulation Dashboard&rdquo;.<br /><br />The following partial errors may be returned:<br />3005- Invalid attribute found.<br />3155- There is no class with this name.<br />7007- Invalid Tag &ndash; the requested object does not exist.<br />206680- The XML file could not be parsed/validated.<br />516001- An Enquiry internal error has occurred.",
        "useCase": "<b>Use Case 1: User invokes the &ldquo;Simulation Dashboard&rdquo; from the right mouse button click.</b><br />When the user selects an folder from the home view and does an right mouse button click, system presents a dialog to select dashboard object, upon selection, system launches the simulation dashboard. This operation will be fired to populate all the configured column values in the Simulation Dashboard.<br /><br /><b>Use Case 2: User invokes the &ldquo;Simulation Dashboard&rdquo; from the Analysis or Model View tool bar.</b><br />When the user invokes &ldquo;Simulation Dashboard&rdquo; from the Analysis or Model View tool bar, system presents a dialog to select dashboard object, upon selection, system launches the simulation dashboard. This operation will be fired to populate all the configured column values in the Simulation Dashboard."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "adding new argument to handle existing object as output object",
            "deprecatedRelease": "tc12000.4.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "List of configured input objects.",
            "parameterName": "inputConfigList"
          },
          {
            "description": "List of configured output objects.",
            "parameterName": "outputConfigList"
          },
          {
            "description": "List of configured datasets.",
            "parameterName": "datasetConfigList"
          },
          {
            "description": "List of configured <b>BOMView Revision</b> objects.",
            "parameterName": "bvrConfigList"
          },
          {
            "description": "The configuration of the <b>Folder</b> object in which the output objects will be pasted upon creation.",
            "parameterName": "destinationFolder"
          },
          {
            "description": "The configuration of the log that will be generated.",
            "parameterName": "detailsLogConfig"
          },
          {
            "description": "The workflow configuration information.",
            "parameterName": "workflowConfig"
          },
          {
            "description": "The <b>CAE0ConfigRevision</b> object holding the CAE Package configuration.",
            "parameterName": "configObject"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc11000.6.0",
        "dependencies": "",
        "description": "The CAE Manager application in Teamcenter provides a way to create and relate multiple Computer Aided Engineering (CAE) objects (sub-types of <b>CAEItem</b> and <b>CAEItemRevision</b> along with the CAE specific relationships and <b>Dataset</b> objects) via a prior configuration defined by the user. This configuration to create the objects is saved in <b>CAE0ConfigRevision</b> object and is termed as configuring a CAE Package.<br />This operation will process the configuration and create the various CAE specific objects as per the configuration. Based on the configuration, this operation creates <b>CAEItem</b> objects and its sub-types, <b>CAEItemRevision</b> objects and its sub-types along with related <b>Dataset</b> objects, <b>BOMView</b> and <b>BOMView</b> <b>Revision</b> objects. This operation also creates relationship between input objects (<b>ItemRevision</b>) and the output objects if configured. The created objects could also be assigned to a workflow as per the configuration. The user can also override the default values specified in the configuration while creating the objects.",
        "exceptionCondition": "",
        "id": "processCAEPackage#const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageInputConfig>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageOutputConfig>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDatasetConfig>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageBVRConfig>,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDestFolderConfig,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDetailsLogConfig,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageWorkFlowConfig,&$const,cae::CAE0ConfigRevision,&",
        "interface": "CAE0::Soa::SimProc::SimDataManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "processCAEPackage",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimDataManagement::processCAEPackage#const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageInputConfig>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageOutputConfig>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDatasetConfig>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageBVRConfig>,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDestFolderConfig,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDetailsLogConfig,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageWorkFlowConfig,&$const,cae::CAE0ConfigRevision,&",
        "returnDescription": "The created objects are returned as a part of the Service Data.<br />Following partial errors may be returned:<br /><ul><ul><li type=\"disc\">214200 - Unable to create business object.</li><li type=\"disc\">214411 - The creation of workflow process has failed.</li><li type=\"disc\">214116 - The input relation type name is not a valid relation type.</li></ul></ul>",
        "useCase": "Use Case 1: User logs into the Rich Application Client (RAC) and opens the CAE Manager application. User clicks on &quot;Open the CAEPackage creation wizard&quot; command present in the global toolbar. System shows all available CAE Package configurations. User selects any of the configuration object. User assigns input objects and clicks on the finish button. This operation will create the CAE objects.<br /><br />Use Case 2: User clicks on the CAE Package tile in Active Workspace client home page. System shows all available and favorite CAE Package configurations in the primary work area. User selects any of the configuration objects from My Favorites sub-location and system shows detailed configuration in secondary work area. User assigns input objects, destination folder. User also provides the property values to be set on output object to be created and clicks on the execute button in secondary work area. This operation will create the CAE  objects."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "use processCAEPackageWithPatterns that resolves patterns configured in the CAE Package.",
            "deprecatedRelease": "tc13000.2.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "A list of configured input objects.",
            "parameterName": "inputConfigList"
          },
          {
            "description": "A list of configured output objects.",
            "parameterName": "outputConfigList"
          },
          {
            "description": "A list of configured datasets.",
            "parameterName": "datasetConfigList"
          },
          {
            "description": "A list of configured <b>BOMView Revision</b> objects.",
            "parameterName": "bvrConfigList"
          },
          {
            "description": "The configuration of the Folder object in which the output objects will be pasted upon creation.",
            "parameterName": "destinationFolder"
          },
          {
            "description": "The configuration of the log that will be generated.",
            "parameterName": "detailsLogConfig"
          },
          {
            "description": "The workflow configuration information.",
            "parameterName": "workflowConfig"
          },
          {
            "description": "The <b>CAE0ConfigRevision</b> object holding the CAE Package configuration.",
            "parameterName": "configObject"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc12000.4.0",
        "dependencies": "",
        "description": "The CAE Manager application in Teamcenter provides a way to create and relate multiple Computer Aided Engineering (CAE) objects (sub-types of <b>CAEItem</b> and <b>CAEItemRevision</b> along with the CAE specific relationships and <b>Dataset</b> objects) via a prior configuration defined by the user. The configuration is done by the user in the Rich Application Client (RAC) by invoking the CAE Package configuration dialog in the CAE Manager application. This saves the configuration to an XML file which is added as a named reference to a <b>Dataset</b> that gets attached to the <b>CAE0Configuration</b> object. This is termed as configuring a CAE Package.<br />This operation will process the configuration and create the various CAE specific objects as per the configuration. Based on the configuration, this operation creates <b>CAEItem</b> objects and its sub-types, <b>CAEItemRevision</b> objects and its sub-types along with related <b>Dataset</b> objects, <b>BOMView</b> and <b>BOMView Revision</b> objects. This operation also creates relationship between input objects (<b>ItemRevision</b>) and the output objects if configured. The created objects could also be assigned to a workflow as per the configuration. The user can also override the default values specified in the configuration while creating the objects.",
        "exceptionCondition": "",
        "id": "processCAEPackage#const,std::vector<CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement::Cae0PackageInputConfig2>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement::Cae0PackageOutputConfig2>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDatasetConfig>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageBVRConfig>,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDestFolderConfig,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDetailsLogConfig,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageWorkFlowConfig,&$const,cae::CAE0ConfigRevision,&",
        "interface": "CAE0::Soa::SimProc::SimDataManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "processCAEPackage",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimDataManagement::processCAEPackage#const,std::vector<CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement::Cae0PackageInputConfig2>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement::Cae0PackageOutputConfig2>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDatasetConfig>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageBVRConfig>,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDestFolderConfig,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDetailsLogConfig,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageWorkFlowConfig,&$const,cae::CAE0ConfigRevision,&",
        "returnDescription": "This operation sends alert once execution of CAEPackage is done. Alert contains details log which further contains information related to any failures happened due to invalid input objects, creation of output objects or relating the output and input objects.<br /><br />This operation returns ServiceData which may contain following errors:<br /><ul><ul><li type=\"disc\">372011 - Invalid configuration type. Valid configuration type is CAEPackages.</li></ul></ul>",
        "useCase": "Use Case 1: User logs into the Rich Application Client (RAC) and opens the CAE Manager application. User clicks on &quot;Open the CAEPackage creation wizard&quot; command present in the global toolbar. System shows all available CAE Package configurations. User selects any of the configuration object. User assigns input objects and clicks on the finish button. This operation will create the CAE objects.<br /><br />Use Case 2: User clicks on the CAE Package tile in Active Workspace client home page. System shows all available and favorite CAE Package configurations in the primary work area. User selects any of the configuration objects from My Favorites sub-location and system shows detailed configuration in secondary work area. User assigns input objects, destination folder. User also provides the property values to be set on output object to be created and clicks on the execute button in secondary work area. This operation will create the CAE objects."
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of configurations with input object details provided by the user.",
            "parameterName": "inputConfigList"
          },
          {
            "description": "A list of configurations with output object details provided by the user.",
            "parameterName": "outputConfigList"
          },
          {
            "description": "A list of configurations with dataset details provided by the user.",
            "parameterName": "datasetConfigList"
          },
          {
            "description": "A list of configurations with <b>BOMView Revision</b> object details provided by the user.",
            "parameterName": "bvrConfigList"
          },
          {
            "description": "The configuration of the <b>Folder</b> object details in which the output objects will be pasted upon creation.",
            "parameterName": "destinationFolder"
          },
          {
            "description": "The configuration of the details of the log that will be generated with summary of CAE Package execution.",
            "parameterName": "detailsLogConfig"
          },
          {
            "description": "The workflow configuration information provided by the user.",
            "parameterName": "workflowConfig"
          },
          {
            "description": "A map (string, list of int) of output item ID pattern and a list of allocated counters for pattern N pairs.<br />The item ID pattern key is used to evaluate the counter allocated for pattern N configured from the CAE Package configuration (<b>CAE0ConfigRevision</b>).<br />Example,<br />If the output item ID pattern configured in the CAE Package configuration (<b>CAE0ConfigRevision</b>) as:, INPUTID&quot;.sim&quot;N and the item ID of the selected object is 000387, then the map has an entry as:,<br />Key: &quot;000387.sim*&quot; and Value: &quot;1, 2&quot;.",
            "parameterName": "patternToCounterListMap"
          },
          {
            "description": "The <b>CAE0ConfigRevision</b> object holding the CAE Package configuration.",
            "parameterName": "configObject"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc13000.2.0",
        "dependencies": "",
        "description": "The CAE Manager application in Teamcenter provides a way to create and relate multiple Computer Aided Engineering (CAE) objects (sub-types of <b>CAEItem</b> and <b>CAEItemRevision</b> along with the CAE specific relationships and <b>Dataset</b> objects) via a prior configuration defined by the user. The configuration is done by the user in the Rich Application Client (RAC) by invoking the CAE Package configuration dialog in the CAE Manager application. This saves the configuration to an XML file which is added as a named reference to a <b>Dataset</b> that gets attached to the <b>CAE0Configuration</b> object. This is termed as configuring a CAE Package.<br />This operation processes the configuration and creates the various CAE specific objects as per the configuration. Based on the configuration, this operation creates <b>CAEItem</b> objects, <b>CAEItemRevision</b> objects along with related <b>Dataset</b> objects, <b>BOMView</b> and <b>BOMView Revision</b> objects. This operation also creates relationship between input objects (<b>ItemRevision</b>) and the output objects if configured. The created objects could also be assigned to a workflow as per the configuration. The default values specified in the configuration can be overridden while creating the objects.",
        "exceptionCondition": "",
        "id": "processCAEPackageWithPatterns#const,std::vector<CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement::Cae0PackageInputConfig2>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2021_06::SimDataManagement::Cae0PackageOutputConfig3>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDatasetConfig>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageBVRConfig>,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDestFolderConfig,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDetailsLogConfig,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageWorkFlowConfig,&$const,CAE0::Soa::Internal::SimProc::_2021_06::SimDataManagement::Cae0StringToIntListMap,&$const,cae::CAE0ConfigRevision,&",
        "interface": "CAE0::Soa::SimProc::SimDataManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "processCAEPackageWithPatterns",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimDataManagement::processCAEPackageWithPatterns#const,std::vector<CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement::Cae0PackageInputConfig2>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2021_06::SimDataManagement::Cae0PackageOutputConfig3>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDatasetConfig>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageBVRConfig>,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDestFolderConfig,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDetailsLogConfig,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageWorkFlowConfig,&$const,CAE0::Soa::Internal::SimProc::_2021_06::SimDataManagement::Cae0StringToIntListMap,&$const,cae::CAE0ConfigRevision,&",
        "returnDescription": "This operation sends an alert to the user in Active Workspace in alert section after the execution of CAE Package is done. The alert contains a detailed log having information related to any errors related to invalid input objects, creation of output objects or relating the output and the input objects.<br /><br />This operation returns ServiceData which may contain the following partial errors:<br /><ul><ul><li type=\"disc\">372011 - The provided &lt;configuration&gt; configuration type in invalid. Valid configuration type is CAEPackages.</li><li type=\"disc\">372017 &ndash; The provided uid for given input object &lt;object type&gt; is invalid. Please provide a valid uid for &lt;object type&gt;.</li><li type=\"disc\">372018 - The provided &lt;type name&gt; is invalid. Please provide a valid type name of the object.</li><li type=\"disc\">372019 - The provided &lt;relation name&gt; relation is invalid. Please provide the correct relation name.</li><li type=\"disc\">372020 - The provided &lt;template name&gt; template or &lt;assignment name&gt; assignment is invalid. Please provide a valid template name and assignment name.</li></ul></ul>",
        "useCase": "Use Case 1: User logs into the Rich Application Client (RAC) and opens the CAE Manager application. User clicks on &quot;Open the CAEPackage creation wizard&quot; command present in the global toolbar. System shows all available CAE Package configurations. User selects any of the configuration object. User assigns input objects and clicks on the finish button. This operation will create the CAE objects.<br /><br />Use Case 2: User clicks on the CAE Package tile in Active Workspace client home page. System shows all available and favorite CAE Package configurations in the primary work area. User selects any of the configuration objects from My Favorites sub-location and system shows detailed configuration in secondary work area. User assigns input objects, destination folder. User also provides the property values to be set on output object to be created and clicks on the execute button in secondary work area. This operation will create the CAE objects."
      },
      {
        "ParameterInfo": [
          {
            "description": "List of BOM Lines to be released",
            "parameterName": "toolBOMLines"
          },
          {
            "description": "This variable determines if the operation is a release all operation.",
            "parameterName": "isReleaseAll"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.3",
        "dependencies": "",
        "description": "This operation is meant for the release operation on the tools.",
        "exceptionCondition": "",
        "id": "releaseTools#const,std::vector<Teamcenter::BOMLine>,&$bool",
        "interface": "CAE0::Soa::SimProc::SimProcessConfigurationManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "releaseTools",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::releaseTools#const,std::vector<Teamcenter::BOMLine>,&$bool",
        "returnDescription": "Service Data",
        "useCase": ""
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of selected objects which needs to be processed to remove <b>DirectModel</b> <b>Dataset</b> objects attached with <b>IMAN_Rendering</b> relationship.",
            "parameterName": "selectedObjects"
          }
        ],
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc11000.5.0",
        "dependencies": "",
        "description": "A CAE (Computer Aided Engineering) BOM (Bill of Materials) when sent to a pre-processor such as Simcenter or any other 3rd party tool, the pre-processor could create new JT (Jupiter Tesselation) file in a <b>DirectModel</b> <b>Dataset</b> related to the <b>CAEModelRevision</b> objects with<b> IMAN_Rendering</b> relationship. The<i> Data Map</i> or <i>StructureMap</i> process used to create a CAE BOM from a CAD (Computer Aided Design) BOM can result in creation of <b>DirectModel</b> <b>Dataset</b> objects attached to the CAE BOM with <b>IMAN_Rendering</b> relationship. This leads to having duplicate <b>DirectModel</b> <b>Dataset</b> objects attached to a <b>CAEModelRevision</b> and cause issues in visualzing the CAE BOM.<br /><br />This operation identifies duplicate <b>DirectModel</b> <b>Dataset</b> objects attached to a <b>CAEModelRevision</b> with <b>IMAN_Rendering</b> relationship and deletes it. If the dataset is referenced by any other <b>ItemRevision</b>, then the <b>IMAN_Rendering</b> relationship between the selected <b>CAEModelRevision</b> and the <b>DirectModel</b> <b>Dataset</b> is removed.<br />If the selected object is a <b>BOMLine</b> object, then this operation will traverse all the child <b>BOMLine</b> objects to the underlying <b>CAEModelRevision</b> object for each child <b>BOMLine</b> object.",
        "exceptionCondition": "",
        "id": "removeDuplicateCadJt#const,std::vector<Teamcenter::BusinessObject>,&",
        "interface": "CAE0::Soa::SimProc::SimStructureManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "removeDuplicateCadJt",
        "opTemplate": "CAE0::Soa::Internal::SimProc::_2018_06::SimStructureManagement::RemoveDuplicateCadJtResponse#CAE0::Soa::SimProc::SimStructureManagement::removeDuplicateCadJt#const,std::vector<Teamcenter::BusinessObject>,&",
        "returnDescription": "The number of <b>CAEModelRevision</b> objects processed or skipped, the number of <b>DirectModel</b> <b>Dataset</b> objects deleted or cut and service data with appropriate errors, if encountered. The updated <b>CAEModelRevision</b> objects are added to the Updated list of the ServiceData.<br /><br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">9043 - Unable to delete dataset.</li><li type=\"disc\">35011 - The relation cannot be deleted.</li></ul></ul>",
        "useCase": "<b>Use Case 1</b> (Delete the <b>DirectModel</b> <b>Dataset</b> objects attached to a <b>CAEModelRevision</b> with <b>IMAN_Rendering</b> relationship).<br /><br />When CAE BOM is created from CAD BOM and <b>DirectModel</b> <b>Dataset</b> object are copied from CAD BOM to CAE BOM. Also pre-processor such as Simcenter or any other 3rd party tool created a new <b>DirectModel</b> <b>Dataset</b> object. User selects one or more <b>BOMLine</b> objects from the CAE BOM and invoke the <i>removeDuplicateCadJt</i> operation to delete the <b>DirectModel</b> <b>Dataset</b> objects attached to a <b>CAEModelRevision</b> with <b>IMAN_Rendering</b> relationship. <br /><br /><b>Use Case 2</b> (Cut the <b>IMAN_Rendering</b> relationship between <b>DirectModel</b> <b>Dataset</b> objects and  a <b>CAEModelRevision</b>).<br /><br />When CAE BOM is created from CAD BOM and <b>DirectModel</b> <b>Dataset</b> object are referenced from CAD BOM to CAE BOM. Also pre-processor such as Simcenter or any other 3rd party tool created a new <b>DirectModel</b> <b>Dataset</b> object. User selects one or more <b>BOMLine</b> objects from the CAE BOM and invoke the <i>removeDuplicateCadJt</i> operation to cut the <b>IMAN_Rendering</b> relationship between <b>DirectModel</b> <b>Dataset</b> objects and a <b>CAEModelRevision</b>."
      },
      {
        "ParameterInfo": [
          {
            "description": "Map (string, list of strings) of attribute and value(s) which will be used to query all the configuration items.",
            "parameterName": "inputCriteria"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc11000.2.3",
        "dependencies": "",
        "description": "CAE configuration is associated with primary view. Configuration views shows list of configuration items on left side of the view in a tree viewer. The tree viewer is further divided into the Site, Group and User level scope. Depending on the input attributes value(s) this operation queries all the <b>CAE0ConfigItem</b> objects.",
        "exceptionCondition": "",
        "id": "retrieveConfigurationList#const,CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement::StringVectorMap2,&",
        "interface": "CAE0::Soa::SimProc::SimProcessConfigurationManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "retrieveConfigurationList",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::retrieveConfigurationList#const,CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement::StringVectorMap2,&",
        "returnDescription": "Returns Service Data containing a list <b>CAE0ConfigItem</b> objects as plain objects along with the partial errors. The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">3005-  Invalid attribute found.</li><li type=\"disc\">3155- There is no class with this name.</li><li type=\"disc\">516001- An Enquiry internal error has occurred.</li></ul></ul>",
        "useCase": "<b>Use Case 1: User open Analysis Dashboard Configuration from from Toolbar.</b><br />When the user opens Analysis Dashboard Configuration from the tool bar, system opens the Analysis configuration view and shows all the available <b>CAE0ConfigItem</b> objects. This operation will be fired to fetch all the existing CAE configuration depending on configuration type and scope.<br /><ul><ul><li type=\"disc\">Loading all the Analysis Dashboard Configurations. The input criteria structure will be:</li></ul></ul><br />                                  StringVectorMap2.put(&ldquo;ConfigType&rdquo;,{&ldquo;AnalysisDashBoard&rdquo;})<br />                                  StringVectorMap2.put(&ldquo;scope&rdquo;,{&ldquo;ALL&rdquo;}); <br /><b>Use Case 2: User open File Upload Configuration from from Toolbar.</b><br />When the user opens File Upload Configuration from the tool bar, system opens the CAE configuration view and shows all the available <b>CAE0ConfigItem</b> objects. This operation will be fired to fetch all the existing CAE configuration depending on configuration type and scope.<br /><ul><ul><li type=\"disc\">Loading Desktop Support Configurations for Group level. The input criteria structure will be:</li></ul></ul><br />                                  StringVectorMap2.put(&ldquo;ConfigType&rdquo;,{&ldquo;DesktopSupport&rdquo;})<br />                                  StringVectorMap2.put(&ldquo;scope&rdquo;,{&ldquo;Group&rdquo;}); <br /><b>Use Case 3: User selects Analysis Dashboards for supported business objects.</b><br />When the user selects the business objects in the Analysis view and invokes Analysis Dashboard. This operation will be fired to fetch all the existing CAE configuration depending on configuration type, scope and selected business object types.The input criteria structure will be:<br />                                  StringVectorMap2.put(&ldquo;ConfigType&rdquo;,{&ldquo;AnalysisDashBoard&rdquo;})<br />                                  StringVectorMap2.put(&ldquo;scope&rdquo;,{&ldquo;ALL&rdquo;});<br />                                  StringVectorMap.put(&ldquo;TargetBOTypes&rdquo;,{&ldquo;CAEAnalysisRevision&rdquo;,&rdquo;CustomAnalysisRevision&rdquo;});"
      },
      {
        "ParameterInfo": [
          {
            "description": "This is an array of the BOMLines to be revised",
            "parameterName": "toolBOMLines"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.3",
        "dependencies": "",
        "description": "This operation revises the object selected by the use rin the UI.",
        "exceptionCondition": "",
        "id": "reviseSimTool#const,std::vector<Teamcenter::BOMLine>,&",
        "interface": "CAE0::Soa::SimProc::SimProcessConfigurationManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "reviseSimTool",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::reviseSimTool#const,std::vector<Teamcenter::BOMLine>,&",
        "returnDescription": "Servicedata",
        "useCase": ""
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of unique job IDs for <b>CAE0SimProcessStatus</b> objects which are to be deleted. <br /><br />",
            "parameterName": "jobIds"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.0",
        "dependencies": "",
        "description": "The simulation tool launch feature in CAE Manager application supports a progress monitor dialog with a persistent status management object which will be maintained in the database. <br /><br />This operation removes the corresponding <b>CAE0SimProcessStatus</b> objects from datatbase for the given job IDs.<br /><br />",
        "exceptionCondition": "",
        "id": "deleteSimProcessStatus#const,std::vector<std::string>,&",
        "interface": "CAE0::Soa::SimProc::SimProcessStatusManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "deleteSimProcessStatus",
        "opTemplate": "bool#CAE0::Soa::SimProc::SimProcessStatusManagement::deleteSimProcessStatus#const,std::vector<std::string>,&",
        "returnDescription": "True - if status objects were deleted successfully from databse. <br />False - if deletion was not successful.<br />",
        "useCase": "The progress monitor will display status for all the jobs initiated by a user. However, once the job is finished, user may not need its status  tracked on progress monitor. Such jobs can be deleted from database using this operation Deleted job attributes will no longer apprear on the progress monitor after this operation is completed. <br /><br />"
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of BOMLines of the tools that needs to be unreleased.",
            "parameterName": "toolBOMLines"
          },
          {
            "description": "If true, the release status of the entire BOM structure is removed.",
            "parameterName": "isUnreleaseAll"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc11000.2.2",
        "dependencies": "",
        "description": "This operation removes the release status &ldquo;TCM Released&rdquo; of the Simulation Tool Revision BOMLine objects. The value of the argument isUnreleaseAll determines if release status of all the children of the input BOMLine should be removed or not.",
        "exceptionCondition": "",
        "id": "unreleaseTools#const,std::vector<Teamcenter::BOMLine>,&$bool",
        "interface": "CAE0::Soa::SimProc::SimProcessConfigurationManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "unreleaseTools",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::unreleaseTools#const,std::vector<Teamcenter::BOMLine>,&$bool",
        "returnDescription": "The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">51003 The current user does not have write access to the target selecttion.</li><li type=\"disc\">206874 The Simulation Tool is not released.</li><li type=\"disc\">206875 The Simulation Tool &quot;toolname&quot; cannot be unreleased because one of its children is released.</li></ul></ul>",
        "useCase": "Use Case 1: User unrelease selected Simulation Tool.<br />User will be able to unrelease the selected simulation tool. Released tool cannot be modified but using the Unrelease command user will be allowed to modify the simulation tool.<br /><br />User Case 2: User unrelease selected tool and also all its children.<br />User will be able to unrelease the selected simulation tool and also all its children."
      },
      {
        "ParameterInfo": [
          {
            "description": "The unique job ID of the <b>CAE0SimProcessStatus</b> object to be updated.",
            "parameterName": "jobID"
          },
          {
            "description": "List of attribute names that are to be updated.<br />Valid values for attribute names are -<br /><font face=\"courier\" height=\"10\">cae0StartTime<br />cae0FinishTime<br />cae0Status<br />cae0WorkDir</font><br />",
            "parameterName": "attributes"
          },
          {
            "description": "List of values for the corresponding attributes passed as argument to the operation.<br />All attribute values are to be in the String format. <br /><br />For <font face=\"courier\" height=\"10\">cae0StartTime</font> and <font face=\"courier\" height=\"10\">cae0FinishTime</font> attributes, calling client is responsible for converting the date to  a string using Property::toDateString funtion in the SOA client  framework's Property     <br />class. This is a utility function used to convert a Calendar to a string.<br />A string with the format 'yyyy-MM-dd'T'HH:mm:ssZ' is returned.<br /><br /><br />Valid values for <font face=\"courier\" height=\"10\">cae0Status</font> are-<br />INITIALIZING<br />IN PROGRESS<br />INTERMEDIATE LOADING<br />LOADING<br />COMPLETE<br />TERMINATED<br />FAILED<br />",
            "parameterName": "values"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.0",
        "dependencies": "",
        "description": "The simulation tool launch feature in CAE Manager application supports a progress monitor dialog with persistent status management object which are maintained in the database for every simulation tool launch job initiated by a user. <br /><br />The status object <b>CAE0SimProcessStatus</b>, which will be created during the launch of the simulation tool launch will need to be updated at different stages of tool launch. This operation updates the attributes such as status, last upload date, finish time and the last working directory of the <b>CAE0SimProcessStatus</b> object for a given simulation tool launch job.<br />",
        "exceptionCondition": "",
        "id": "updateSimProcessStatus#const,std::string,&$const,std::vector<std::string>,&$const,std::vector<std::string>,&",
        "interface": "CAE0::Soa::SimProc::SimProcessStatusManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "updateSimProcessStatus",
        "opTemplate": "bool#CAE0::Soa::SimProc::SimProcessStatusManagement::updateSimProcessStatus#const,std::string,&$const,std::vector<std::string>,&$const,std::vector<std::string>,&",
        "returnDescription": "True - if the attributes on the status object are updated correctly.<br />False - if the attributes updated fails for the status object.",
        "useCase": ""
      },
      {
        "canOverride": "false",
        "component": "CAE0CAEIntegrations",
        "createRelease": "tc11000.6.0",
        "dependencies": "",
        "description": "The simulation tool launch feature in CAE Manager application supports a progress monitor dialog with a status management object (<b>CAE0SimProcessStatus</b>). When the user launches a simulation tool, a status object is created to track the progress of the simulation tool launch operation.<br />If the user does not clean the status objects using the progress monitor&rsquo;s &ldquo;Clear&rdquo; or &ldquo;Clear All&rdquo; functionality, status objects remains in the database. This slows the progress monitor dialog open action.<br />This operation removes the <b>CAE0SimProcessStatus</b> objects from the database based on the values of the preferences <i>CAE_Jobs_Clear_After_Size</i> and <i>CAE_Jobs_Clear_Batch_Size</i>  during the tool launch operation.",
        "exceptionCondition": "",
        "id": "deleteSimProcessStatusObjects#",
        "interface": "CAE0::Soa::SimProc::SimProcessStatusManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "deleteSimProcessStatusObjects",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessStatusManagement::deleteSimProcessStatusObjects",
        "returnDescription": "<i>serviceData</i> is returned and may contain following partial errors:<br />1700   &ndash; The preference CAE_Jobs_Clear_After_Size cannot be found.<br />1700   &ndash; The preference CAE_Jobs_Clear_Batch_Size cannot be found.",
        "useCase": "Use Case 1: User launches a simulation tool, system calls the <i>deleteSimProcessStatusObjects</i> operation. This operation queries all the status objects for the logged in user. System then compares the number of status objects with value of the preference <i>CAE_Jobs_Clear_After_Size</i>. If the number of status objects are greater than the defined value then this operation will delete the status objects as per the value of the preference <i>CAE_Jobs_Clear_Batch_Size</i>."
      },
      {
        "ParameterInfo": [
          {
            "description": "The list of tool objects to be deleted.",
            "parameterName": "toolsToBDeleted"
          },
          {
            "description": "The variable that determines if the item and all the revisions should be deleted.",
            "parameterName": "shouldDeleteItemAndAllRev"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.3",
        "dependencies": "",
        "description": "This operation deletes the tool object and the references attached to it.",
        "exceptionCondition": "",
        "id": "deleteTool#const,std::vector<Teamcenter::BusinessObject>,&$bool",
        "interface": "CAE0::Soa::SimProc::SimProcessConfigurationManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "deleteTool",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::deleteTool#const,std::vector<Teamcenter::BusinessObject>,&$bool",
        "returnDescription": "Returns ServiceData",
        "useCase": ""
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "Adding new argument to handle the Pedigree Capture in case import tool launch.",
            "deprecatedRelease": "tc10000.1.5"
          }
        ],
        "ParameterInfo": [
          {
            "description": "Simulation Tool to be launched.",
            "parameterName": "simulationTool"
          },
          {
            "description": "Array of LaunchInputInfo",
            "parameterName": "inputObjects"
          },
          {
            "description": "Working directory of the Simulation Tool",
            "parameterName": "workingDirectory"
          },
          {
            "description": "Launch type for the process. Valid values are \"LOCAL\", \"REMOTE\", \"SERVER\", \"LOCAL_DETACHED\".",
            "parameterName": "launchType"
          },
          {
            "description": "ExportRuntimeOverrideInfo constaining runtime overrides for export configuration of Simulation Tool.",
            "parameterName": "exportRuntimeConfiguration"
          },
          {
            "description": "ImportRuntimeOverrideInfo constaining runtime overrides for export configuration of Simulation Tool.",
            "parameterName": "importRuntimeConfiguration"
          }
        ],
        "canOverride": "false",
        "component": "Fnd0CAEIntegrations",
        "createRelease": "tc10000.1.3",
        "dependencies": "",
        "description": "This operation launches the Simulation Tool as per the pre-defined configuration. The configuration contains details about the tool launch type, export and import rules for the files, notification, and cleanup. The inputs to the operation is an array of InputObjectStructure, each containing one or more business objects, name of the tool to be launched and the launch type. Based on the input values of parameters itemCreationSetting and datasetCreationSetting, ItemRevision and Dataset objects are created or modified.<br />It is a pre-requisite that the Simulation Administrator or user with DBA privileges must configure the Simulation Tool in CAEManager application of Teamcenter. To use this operation, the user should have either a simulation_author or rtt_author license.",
        "exceptionCondition": "",
        "id": "executeSimulationToolLaunch#const,Teamcenter::BusinessObject,&$const,std::vector<CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::LaunchInputInfo>,&$const,std::string$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo",
        "interface": "CAE0::Soa::SimProc::SimulationToolLaunch",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "executeSimulationToolLaunch",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimulationToolLaunch::executeSimulationToolLaunch#const,Teamcenter::BusinessObject,&$const,std::vector<CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::LaunchInputInfo>,&$const,std::string$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo",
        "returnDescription": "Partial Errors are returned in the ServiceData when failed to import the utput data successfully:<br /><ul><ul><li type=\"disc\">206831 - The number of inputs to the tool is not between the minimum criteria and maximum criteria defined for the simulation tool. </li><li type=\"disc\">206835 - The input launch script path contains spaces, and cannot, therefore, be executed. </li><li type=\"disc\">206818 - The log file cannot be created. </li><li type=\"disc\">206819 - The working directory cannot be created. </li><li type=\"disc\">206820 - Invalid Simulation Tool. </li><li type=\"disc\">206821 - The primary input types are not defined. </li><li type=\"disc\">206822 - The primary input rule is not defined. </li><li type=\"disc\">206823 - The launch script is not defined. </li><li type=\"disc\">206824 - The input files for the Simulation Tool are not found. </li><li type=\"disc\">206825 - The working directory path cannot contain spaces.</li></ul></ul>",
        "useCase": "Use Case 1: Import Simulation Objects with As Needed Item Creation Setting.<br />When executed with itemCreationSetting as \"As_Needed\", no new Item will be created if there exists one as per the Simulation Tool output configuration. If found none, new Item will be created as per the Simulation Tool output configuration.<br /><br />Use Case 2: Import Simulation Objects with Always Item Creation Setting.<br />When executed with itemCreationSetting as \"Always\", new Item will be created as per the Simulation Tool output configuration.<br /><br />Use Case 3: Import Simulation Objects with Never Item Creation Setting.<br />When this operation is executed with itemCreationSetting as \"Never\" and if no existing Item is found as per the Simulation Tool output configuration, no new Item will be created.<br /><br />Use Case 4: Import Simulation Objects with As Needed Dataset Creation Setting.<br />When executed with datasetCreationSetting as \"As_Needed\", no new Dataset will be created if there exists one as per the Simulation Tool output configuration. If found none, new Dataset will be created as per the Simulation Tool output configuration.<br /><br />Use Case 5: Import Simulation Objects with Always Dataset Creation Setting.<br />When executed with datasetCreationSetting as \"Always\", new Dataset will be created as per the process Simulation Tool configuration.<br /><br />Use Case 6: Import Simulation Objects with Never Dataset Creation Setting.<br />When executed with datasetCreationSetting as \"Never\" and if no existing Dataset is found as per the process output configuration, no new Dataset will be created. "
      }
    ],
    "OperationTemplate": [
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of zip file tickets which contain the PLMXML files to import.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "zipFileTickets"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::Folder",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The <b>Folder</b> under which the imported data is attached as its content. If selected folder is not valid, then imported data is pasted under Home folder of the user.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "selectedFolder"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "bool",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "If true,  the import CAE Data operation is performed in background.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "isAsync"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc12000.2.0",
        "description": "This service operation takes zip file tickets as input which are generated on client side after uploading them in transient volume of user. Using these file tickets, the zip files are downloaded in temporary directory on server. The downloaded zip files are unzipped on server side. These unzipped files contain PLMXML files which are imported using PLMXML import methods into Teamcenter. This imported data is added under the selected folder in Teamcenter which is input from the client. If selected folder is not valid, then imported data is pasted under Home folder of the user. User gets a Teamcenter mail at the end of the operation. This mail contains the information about operation and the dataset containing PLMXML log files generated during import of the PLMXML files.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimDataManagement::importCAEData#const,std::vector<std::string>,&$const,Teamcenter::Folder,&$bool",
        "name": "CAE0::Soa::SimProc::SimDataManagement::importCAEData",
        "returnConst": "false",
        "returnDescription": "This operation returns serviceData which may contain following errors:&nbsp;&nbsp;&nbsp;&nbsp;<br />1106 &ndash; Directory does not exist.<br />206815 &ndash; No valid license to access the Teamcenter Simulation functionality.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of zip file tickets which contain the PLMXML files to import.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "zipFileTickets"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::Folder",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The <b>Folder</b> under which the imported data is attached as its content. If selected folder is not valid, then imported data is pasted under Home folder of the user.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "selectedFolder"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "void",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc12000.2.0",
        "description": "This service operation takes zip file tickets as input which are generated on client side after uploading them in transient volume of user. Using these file tickets, the zip files are downloaded in temporary directory on server. The downloaded zip files are unzipped on server side. These unzipped files contain PLMXML files which are imported using PLMXML import methods into Teamcenter. This imported data is added under the selected folder in Teamcenter which is input from the client. If selected folder is not valid, then imported data is pasted under Home folder of the user. User gets a Teamcenter mail at the end of the operation. This mail contains the information about operation and the dataset containing PLMXML log files generated during import of the PLMXML files.",
        "id": "void#CAE0::Soa::SimProc::SimDataManagement::importCAEDataAsync#const,std::vector<std::string>,&$const,Teamcenter::Folder,&",
        "name": "CAE0::Soa::SimProc::SimDataManagement::importCAEDataAsync",
        "returnConst": "false",
        "returnDescription": "As this is an asynchronous operation, it does not have return parameter.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "cae::CAE0ConfigRevision",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "List of <b>CAE0ConfigRevisions</b> objects.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "configItemList"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement::CAEConfigDetailResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.2.3",
        "description": "Analysis Dash Board configuration view and File Upload Rule configuration view shows list of configured items in a tree viewer with Site, Group and User level scope. CAE Configuration views have tree viewer in the left side and detailed configuration is shown in the right side of the view. This operation gets the detailed configuration from input CAE configuration items.",
        "id": "CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement::CAEConfigDetailResponse#CAE0::Soa::SimProc::SimProcessConfigurationManagement::getCAEConfigDetail#const,std::vector<cae::CAE0ConfigRevision>,&",
        "name": "CAE0::Soa::SimProc::SimProcessConfigurationManagement::getCAEConfigDetail",
        "returnConst": "false",
        "returnDescription": "Method returns the <i>CAEConfigDetailResponse</i>. This response contains the information about configurations. The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">206681-  Error occurred during retrieving dataset from Item Revision.</li><li type=\"disc\">206683-  Error in extracting named references file from dataset.</li><li type=\"disc\">206684-  No named references found in the dataset.</li><li type=\"disc\">206874- Invalid configuration item.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "cae::CAE0ConfigRevision",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Simulation dashboard configuration object.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "dashboardConfiguration"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::ItemRevision",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of input item revisions (<b>ItemRevision</b> and its sub-types) which will be used to query simulation dashboard data as per the simulation dashboard configuration object.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "itemRevisionList"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2019_06::SimProcessConfigurationManagement::SimulationDashboardDetailsResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc12000.2.0",
        "description": "Simulation Dashboard functionality is used to monitor the simulation data in the simulation dashboard view as per the simulation dashboard configuration which is configured by the user in the Teamcenter Rich Client. Simulation Dashboard is divided into two sections. The section on the top is the summary section which shows dashboard name, input method, files information details etc. and the bottom section shows a table with list of selected <b>ItemRevision</b> objects in the first column and its simulation data in the corresponding configured column(s). This service operation is used to get the simulation data for the list of provided <b>ItemRevision</b> objects as per the simulation dashboard configuration saved under <b>CAE0ConfigRevision</b> object. These objects to monitor are populated in the first column in the simulation dashboard table and the simulation data is populated in the subsequent columns for each object to monitor. Each row in the simulation dashboard table represents related simulation data for the object monitored.",
        "id": "CAE0::Soa::Internal::SimProc::_2019_06::SimProcessConfigurationManagement::SimulationDashboardDetailsResponse#CAE0::Soa::SimProc::SimProcessConfigurationManagement::getDashboardDataForIRList#const,cae::CAE0ConfigRevision,&$const,std::vector<Teamcenter::ItemRevision>,&",
        "name": "CAE0::Soa::SimProc::SimProcessConfigurationManagement::getDashboardDataForIRList",
        "returnConst": "false",
        "returnDescription": "Method returns data type <i>SimulationDashboardDetailsResp</i>onse. This response contains the query results in a structured manner to populate the simulation dashboard data in the &ldquo;Simulation Dashboard&rdquo; view.<br /><br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">206680- The XML file could not be parsed/validated: CAE_Analysis_Dashboard_config.xml</li><li type=\"disc\">372008 - The provided input object is invalid because only objects of type &ldquo;CAE Configuration&rdquo;, with configuration type &ldquo;Analysis Dashboard&rdquo; or &ldquo;Model Dashboard&rdquo;, are allowed.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "cae::CAE0ConfigRevision",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Simulation dashboard configuration object.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "dashboardConfiguration"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BOMLine",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A root <b>BOMLine</b> object from the model view which will be used to get model structure objects and query dashboard data as per the configuration specified in <b>CAE0ConfigRevision</b> object.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "rootBomLine"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2019_06::SimProcessConfigurationManagement::SimulationDashboardDetailsResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc12000.2.0",
        "description": "Simulation Dashboard functionality is used to monitor the simulation data in the simulation dashboard view as per the simulation dashboard configuration which is configured by the user in the Teamcenter Rich Client. Simulation Dashboard is divided into two sections. The section on the top is the summary section which shows dashboard name, input method, files information details etc. and the bottom section shows a table with list of selected <b>ItemRevision</b> objects in the first column and its simulation data in the corresponding configured column(s). This service operation is used to get the simulation data for the list of <b>ItemRevision</b> objects by traversing the input root <b>BOMLine</b> from the model structure as per the simulation dashboard configuration saved under <b>CAE0ConfigRevision</b> object. These objects to monitor are populated in the first column in the simulation dashboard table and the simulation data is populated in the subsequent columns for each object to monitor. Each row in the simulation dashboard table represents related simulation data for the object monitored.",
        "id": "CAE0::Soa::Internal::SimProc::_2019_06::SimProcessConfigurationManagement::SimulationDashboardDetailsResponse#CAE0::Soa::SimProc::SimProcessConfigurationManagement::getDashboardDataForModelStructure#const,cae::CAE0ConfigRevision,&$const,Teamcenter::BOMLine,&",
        "name": "CAE0::Soa::SimProc::SimProcessConfigurationManagement::getDashboardDataForModelStructure",
        "returnConst": "false",
        "returnDescription": "Method returns data type <i>SimulationDashboardDetailsResponse</i>. This response contains the query results in a structured manner to populate the simulation dashboard data in the &ldquo;Simulation Dashboard&rdquo; view.<br /><br />The following partial errors may be returned:<br /><br /><ul><ul><li type=\"disc\">206680- The XML file could not be parsed/validated: CAE_Analysis_Dashboard_config.xml</li><li type=\"disc\">206891 - The simulation dashboard configuration is invalid because only simulation dashboards of type Model Dashboard are allowed to launch the dashboard for a model structure.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Name of the tabs for which the properties have to be fetched.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "tabIdentifiers"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolBOMPropStructResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.3",
        "description": "This operation returns all the properties for all the tools in the hierarchy in one call from the server. It takes tab identifiers as input, creates the BOM window, traverses the hierarchy, collects the properties of the all the tool and stores them in a response object.",
        "id": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolBOMPropStructResponse#CAE0::Soa::SimProc::SimProcessConfigurationManagement::getToolBOMProperties#const,std::vector<std::string>,&",
        "name": "CAE0::Soa::SimProc::SimProcessConfigurationManagement::getToolBOMProperties",
        "returnConst": "false",
        "returnDescription": "The root tool, its properties required to render the menu, child tools and their respective property values.<br /> The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">51003   The current user does not have write access to the selected object.</li><li type=\"disc\">46062 The BOM cannot be expanded because it contains an unreadable item.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::vector<std::string>",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Name of the tabs for which the properties have to be fetched.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "tabIdentifiers"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "bool",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "If true, only released tools will be fetched otherwise user level Revision Rule preference CAE_tool_menu_rev_rule will be used.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "releasedToolsOnly"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolBOMPropStructResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.2.2",
        "description": "This operation returns all properties for all the tools in the hierarchy. It takes tab identifiers as input, creates the BOM window, traverses the hierarchy, collects the properties of all the tools and returns them in a response object.",
        "id": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolBOMPropStructResponse#CAE0::Soa::SimProc::SimProcessConfigurationManagement::getToolBOMProperties2#const,std::vector<std::string>,&$bool",
        "name": "CAE0::Soa::SimProc::SimProcessConfigurationManagement::getToolBOMProperties2",
        "returnConst": "false",
        "returnDescription": "The root tool, its properties required to render the menu, child tools and their respective property values.<br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">51003 The current user does not have write access to the selected object.</li><li type=\"disc\">46062 The BOM cannot be expanded because it contains an unreadable item.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Input item type names for which Simulation Tools are to be fetched. Support type names are: ItemRevision, CAEModelRevision, and CAEAnalysisRevision.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputItemTypes"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Tab names of which configurations are to be fetched for all Simulation Tools.<br />Possible string values are:<br /><ul><ul><li type=\"disc\">CAE0General </li><li type=\"disc\">CAE0LaunchParameters </li><li type=\"disc\">CAE0EnvVariables </li><li type=\"disc\">CAE0InputConfiguration </li><li type=\"disc\">CAE0OutputConfiguration </li><li type=\"disc\">CAE0InputParameters </li><li type=\"disc\">CAE0AttributeConfiguration </li><li type=\"disc\">CAE0AccessControl </li><li type=\"disc\">CAE0Feedback</li></ul></ul>",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "tabIdentifiers"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Launch types for which Simulation Tools are to be fetched.<br />Possible string values are:<br /><ul><ul><li type=\"disc\">cae0LocalLaunch</li><li type=\"disc\">cae0LocalDetachedLaunch </li><li type=\"disc\">cae0RemoteLaunch </li><li type=\"disc\">cae0ServerLaunch</li></ul></ul>",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "launchTypes"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::SimProc::_2015_10::SimProcessConfigurationManagement::ToolTabsInfo",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.5",
        "description": "This operation returns a list of structures having tab information for Simulation Tools provided the input item types, required tab identifiers, user name, role and group. <br />The operation fetches the configurations for all tabs from input tab identifiers for all tools and then applies constraints to this list as per the logged in user/role/group access restrictions, input item configuration being same as the provided input item types and configured launch types being same as provided launch types.",
        "id": "CAE0::Soa::SimProc::_2015_10::SimProcessConfigurationManagement::ToolTabsInfo#CAE0::Soa::SimProc::SimProcessConfigurationManagement::getToolTabProperties#const,std::vector<std::string>,&$const,std::vector<std::string>,&$const,std::vector<std::string>,&",
        "name": "CAE0::Soa::SimProc::SimProcessConfigurationManagement::getToolTabProperties",
        "returnConst": "false",
        "returnDescription": "This operation will return a collection of structures containing configuration information for Simulation Tools for logged in user/group/role access, input types and launch.<br /><br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">51003 - The current user does not have write access to the selected object.</li><li type=\"disc\">46062 - The BOM cannot be expanded because it contains an unreadable item.</li><li type=\"disc\">51000 - Internal error in AOM Module. Please report this to your system administrator.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "This is a list of business objects that have been cut and need to pasted under a target BOMLine.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "toolsTobePasted"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BOMLine",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The target BOMLine under which the selected BOMLines have to be pasted.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "targetBOMLine"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.3",
        "description": "This operation pastes the selected BOM Lines under a target BOMLine.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::pasteTool#const,std::vector<Teamcenter::BusinessObject>,&$const,Teamcenter::BOMLine,&",
        "name": "CAE0::Soa::SimProc::SimProcessConfigurationManagement::pasteTool",
        "returnConst": "false",
        "returnDescription": "ServiceData",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "cae::CAE0ConfigRevision",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Input analysis dashboard configuration object.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "dashboardConfiguration"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::CAEAnalysisRevision",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "List of input item revisions (<b>CAEAnalysisRevision</b> and its subtypes) which will be used to query as per the analysis dashboard configuration object.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputAnalysisIRList"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement::CAEAnalysisDashboardPopulateResp",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.2.3",
        "description": "CAE Analysis Dashboard is associated with a primary view. Analysis Dashboard is divided into two sections. The section on the top is the summary section which shows dashboard name, input method, number of files fetched etc. and the bottom section shows a list of selected <b>CAEAnalysisRevision</b> objects in tabular form and corresponding configured column(s). Column(s) configured shows values/image as per the traversal rules defined in the configuration object (<b>CAE0ConfigItem</b>). Traversal rules are defined for each column and column cell values shows the query result as per the traversal rules. Depending on the configuration from the <b>CAE0ConfigItem</b> object, this operation queries all the input <b>CAEAnalysisRevision</b> objects and returns a structured response to populate all the column(s) cell values.",
        "id": "CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement::CAEAnalysisDashboardPopulateResp#CAE0::Soa::SimProc::SimProcessConfigurationManagement::populateCAEAnalysisDashboard#const,cae::CAE0ConfigRevision,&$const,std::vector<Teamcenter::CAEAnalysisRevision>,&",
        "name": "CAE0::Soa::SimProc::SimProcessConfigurationManagement::populateCAEAnalysisDashboard",
        "returnConst": "false",
        "returnDescription": "Method returns newly created data type <i>CAEAnalysisDashboardPopulateResp</i>. This response contains the query results in a structured manner to populate the &ldquo;Analysis Dashboard&rdquo;.<br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">3005-  Invalid attribute found.</li><li type=\"disc\">3155- There is no class with this name.</li><li type=\"disc\">516001- An Enquiry internal error has occurred.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "cae::CAE0ConfigRevision",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "<b>CAE0Config</b> object.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "dashboardConfiguration"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BOMLine",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Root <b>BOMLine</b> object from the model view which will be used to get model structure objects and query dashboard data as per the configuration specified in <b>CAE0Config</b> object.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "rootBomLine"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2017_11::SimProcessConfigurationManagement::SimulationDashboardPopulateResp",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.4.0",
        "description": "Simulation Dashboard is associated with the primary view. Simulation Dashboard is divided into two sections. The section on the top is the summary section which shows the input method, number of files fetched etcetera and the bottom section shows a list of selected <b>ItemRevision</b> objects in tabular form and corresponding configured columns(s). Columns(s) configured shows the values/image as per the traversal rules defined in the <b>CAE0Config</b> object. Traversal rules are defined for each column and column cell values shows the query result as per the traversal rules. Depending on the configuration from the <b>CAE0Config</b> object, this operation queries all the <b>ItemRevision</b> objects by traversing input root <b>BOMLine</b> of model structure and returns a structured response to populate all the column(s) cell values.",
        "id": "CAE0::Soa::Internal::SimProc::_2017_11::SimProcessConfigurationManagement::SimulationDashboardPopulateResp#CAE0::Soa::SimProc::SimProcessConfigurationManagement::populateDashboardForModelStructure#const,cae::CAE0ConfigRevision,&$const,Teamcenter::BOMLine,&",
        "name": "CAE0::Soa::SimProc::SimProcessConfigurationManagement::populateDashboardForModelStructure",
        "returnConst": "false",
        "returnDescription": "Method returns the query results to populate the &ldquo;Simulation Dashboard&rdquo;.<br />The following partial errors may be returned:<br /><br /><ul><ul><li type=\"disc\">206891 - The simulation dashboard configuration is invalid because only simulation dashboards of type Model Dashboard are allowed to launch the dashboard for a model structure.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "cae::CAE0ConfigRevision",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Simulation dashboard configuration object.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "dashboardConfiguration"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::ItemRevision",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "List of input item revisions (<b>ItemRevision</b> and its subtypes) which will be used to query as per the simulation dashboard configuration object.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputItemIRList"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2017_11::SimProcessConfigurationManagement::SimulationDashboardPopulateResp",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.4.0",
        "description": "Simulation Dashboard is associated with a primary view. Simulation Dashboard is divided into two sections. The section on the top is the summary section which shows dashboard name, input method, number of files fetched etc. and the bottom section shows a list of selected <b>ItemRevision</b> objects in tabular form and corresponding configured column(s). Column(s) configured shows values/image as per the traversal rules defined in the configuration object (<b>CAE0ConfigItem</b>). Traversal rules are defined for each column and column cell values shows the query result as per the traversal rules. Depending on the configuration from the <b>CAE0ConfigItem</b> object, this operation queries all the input <b>ItemRevision</b> objects and returns a structured response to populate all the column(s) cell values.",
        "id": "CAE0::Soa::Internal::SimProc::_2017_11::SimProcessConfigurationManagement::SimulationDashboardPopulateResp#CAE0::Soa::SimProc::SimProcessConfigurationManagement::populateSimulationDashboard#const,cae::CAE0ConfigRevision,&$const,std::vector<Teamcenter::ItemRevision>,&",
        "name": "CAE0::Soa::SimProc::SimProcessConfigurationManagement::populateSimulationDashboard",
        "returnConst": "false",
        "returnDescription": "Method returns newly created data type SimulationDashboardPopulateResp. This response contains the query results in a structured manner to populate the &ldquo;Simulation Dashboard&rdquo;.<br /><br />The following partial errors may be returned:<br />3005- Invalid attribute found.<br />3155- There is no class with this name.<br />7007- Invalid Tag &ndash; the requested object does not exist.<br />206680- The XML file could not be parsed/validated.<br />516001- An Enquiry internal error has occurred.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageInputConfig",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "List of configured input objects.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputConfigList"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageOutputConfig",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "List of configured output objects.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "outputConfigList"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDatasetConfig",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "List of configured datasets.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "datasetConfigList"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageBVRConfig",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "List of configured <b>BOMView Revision</b> objects.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "bvrConfigList"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDestFolderConfig",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The configuration of the <b>Folder</b> object in which the output objects will be pasted upon creation.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "destinationFolder"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDetailsLogConfig",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The configuration of the log that will be generated.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "detailsLogConfig"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageWorkFlowConfig",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The workflow configuration information.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "workflowConfig"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "cae::CAE0ConfigRevision",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The <b>CAE0ConfigRevision</b> object holding the CAE Package configuration.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "configObject"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.6.0",
        "description": "The CAE Manager application in Teamcenter provides a way to create and relate multiple Computer Aided Engineering (CAE) objects (sub-types of <b>CAEItem</b> and <b>CAEItemRevision</b> along with the CAE specific relationships and <b>Dataset</b> objects) via a prior configuration defined by the user. This configuration to create the objects is saved in <b>CAE0ConfigRevision</b> object and is termed as configuring a CAE Package.<br />This operation will process the configuration and create the various CAE specific objects as per the configuration. Based on the configuration, this operation creates <b>CAEItem</b> objects and its sub-types, <b>CAEItemRevision</b> objects and its sub-types along with related <b>Dataset</b> objects, <b>BOMView</b> and <b>BOMView</b> <b>Revision</b> objects. This operation also creates relationship between input objects (<b>ItemRevision</b>) and the output objects if configured. The created objects could also be assigned to a workflow as per the configuration. The user can also override the default values specified in the configuration while creating the objects.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimDataManagement::processCAEPackage#const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageInputConfig>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageOutputConfig>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDatasetConfig>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageBVRConfig>,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDestFolderConfig,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDetailsLogConfig,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageWorkFlowConfig,&$const,cae::CAE0ConfigRevision,&",
        "name": "CAE0::Soa::SimProc::SimDataManagement::processCAEPackage",
        "returnConst": "false",
        "returnDescription": "The created objects are returned as a part of the Service Data.<br />Following partial errors may be returned:<br /><ul><ul><li type=\"disc\">214200 - Unable to create business object.</li><li type=\"disc\">214411 - The creation of workflow process has failed.</li><li type=\"disc\">214116 - The input relation type name is not a valid relation type.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BOMLine",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "List of BOM Lines to be released",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "toolBOMLines"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "bool",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "This variable determines if the operation is a release all operation.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "isReleaseAll"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.3",
        "description": "This operation is meant for the release operation on the tools.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::releaseTools#const,std::vector<Teamcenter::BOMLine>,&$bool",
        "name": "CAE0::Soa::SimProc::SimProcessConfigurationManagement::releaseTools",
        "returnConst": "false",
        "returnDescription": "Service Data",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement::StringVectorMap2",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Map (string, list of strings) of attribute and value(s) which will be used to query all the configuration items.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputCriteria"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.2.3",
        "description": "CAE configuration is associated with primary view. Configuration views shows list of configuration items on left side of the view in a tree viewer. The tree viewer is further divided into the Site, Group and User level scope. Depending on the input attributes value(s) this operation queries all the <b>CAE0ConfigItem</b> objects.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::retrieveConfigurationList#const,CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement::StringVectorMap2,&",
        "name": "CAE0::Soa::SimProc::SimProcessConfigurationManagement::retrieveConfigurationList",
        "returnConst": "false",
        "returnDescription": "Returns Service Data containing a list <b>CAE0ConfigItem</b> objects as plain objects along with the partial errors. The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">3005-  Invalid attribute found.</li><li type=\"disc\">3155- There is no class with this name.</li><li type=\"disc\">516001- An Enquiry internal error has occurred.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BOMLine",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "This is an array of the BOMLines to be revised",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "toolBOMLines"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.3",
        "description": "This operation revises the object selected by the use rin the UI.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::reviseSimTool#const,std::vector<Teamcenter::BOMLine>,&",
        "name": "CAE0::Soa::SimProc::SimProcessConfigurationManagement::reviseSimTool",
        "returnConst": "false",
        "returnDescription": "Servicedata",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BOMLine",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of BOMLines of the tools that needs to be unreleased.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "toolBOMLines"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "bool",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "If true, the release status of the entire BOM structure is removed.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "isUnreleaseAll"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.2.2",
        "description": "This operation removes the release status &ldquo;TCM Released&rdquo; of the Simulation Tool Revision BOMLine objects. The value of the argument isUnreleaseAll determines if release status of all the children of the input BOMLine should be removed or not.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::unreleaseTools#const,std::vector<Teamcenter::BOMLine>,&$bool",
        "name": "CAE0::Soa::SimProc::SimProcessConfigurationManagement::unreleaseTools",
        "returnConst": "false",
        "returnDescription": "The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">51003 The current user does not have write access to the target selecttion.</li><li type=\"disc\">206874 The Simulation Tool is not released.</li><li type=\"disc\">206875 The Simulation Tool &quot;toolname&quot; cannot be unreleased because one of its children is released.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "List of attribute names that are to be set on the newly created object. <br />Valid values for attribute names are -<br /><font face=\"courier\" height=\"10\">cae0LaunchType<br />cae0ToolName<br />cae0StartTime<br />cae0Status<br />cae0UserId<br />cae0WorkDir<br />cae0PrimaryObjects</font><br />",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "attributes"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "List of values for the corresponding attributes passed as argument to the operation. All attribute values are to be in String format. <br /><br />For <font face=\"courier\" height=\"10\">cae0StartTime</font> and <font face=\"courier\" height=\"10\">cae0FinishTime</font> attributes, calling client is responsible for converting the date to  a string using Property::toDateString funtion in the SOA client framework's Property class. This is a utility function used to convert a Calendar to a string.                                            A string with the format 'yyyy-MM-dd'T'HH:mm:ssZ' is returned.<br /><br /><br />Value for <font face=\"courier\" height=\"10\">cae0Status</font> should be -<br />INITIALIZING - at the time of creation.<br /><br />Valid values for <font face=\"courier\" height=\"10\">cae0LaunchType</font> are -<br />LOCAL  (When simulation tool is launched on local client machine)<br />REMOTE  (When simulation tool is launched on a remote machine)<br />SERVER&nbsp;&nbsp;&nbsp;&nbsp;(When simulation tool is be launched on the Teamcenter Server)<br />",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "values"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.0",
        "description": "The simulation tool launch feature in CAE Manager application supports a progress monitor dialog with persistent status management objects. These objects are maintained in the database for each simulation tool launch job initiated by a user.<br /><br />This operation supports creation of the <b>CAE0SimProcessStatus</b> object from the client side with necessary parameters and conditions. The <font face=\"courier\" height=\"10\">cae0JobId</font> attribute will be populated on the newly created object with a unique string with current time stamp appended to it. This operation will be used by the client whenever the user launches the simulation tool and selects to view the progress monitor for the launched tool. <br />",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessStatusManagement::createSimProcessStatus#const,std::vector<std::string>,&$const,std::vector<std::string>,&",
        "name": "CAE0::Soa::SimProc::SimProcessStatusManagement::createSimProcessStatus",
        "returnConst": "false",
        "returnDescription": "The service data object will be returned as a response to the client. This service data object will hold the newly created <b>CAE0SimProcessStatus</b> business object. <br /><br />Following are the possible errors returned by this operation -<br /><br /><ul><ul><li type=\"disc\">39014 The specified type <b>CAE0SimProcessStatus</b> does not exist. </li></ul></ul><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   In order to avoid this error, make sure that <b>cae</b> template is loaded in the database.<br /><br /><ul><ul><li type=\"disc\">51000 Internal error in AOM Module. Please report this to your system administrator. </li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of unique job IDs for <b>CAE0SimProcessStatus</b> objects which are to be deleted. <br /><br />",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "jobIds"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "bool",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.0",
        "description": "The simulation tool launch feature in CAE Manager application supports a progress monitor dialog with a persistent status management object which will be maintained in the database. <br /><br />This operation removes the corresponding <b>CAE0SimProcessStatus</b> objects from datatbase for the given job IDs.<br /><br />",
        "id": "bool#CAE0::Soa::SimProc::SimProcessStatusManagement::deleteSimProcessStatus#const,std::vector<std::string>,&",
        "name": "CAE0::Soa::SimProc::SimProcessStatusManagement::deleteSimProcessStatus",
        "returnConst": "false",
        "returnDescription": "True - if status objects were deleted successfully from databse. <br />False - if deletion was not successful.<br />",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.6.0",
        "description": "The simulation tool launch feature in CAE Manager application supports a progress monitor dialog with a status management object (<b>CAE0SimProcessStatus</b>). When the user launches a simulation tool, a status object is created to track the progress of the simulation tool launch operation.<br />If the user does not clean the status objects using the progress monitor&rsquo;s &ldquo;Clear&rdquo; or &ldquo;Clear All&rdquo; functionality, status objects remains in the database. This slows the progress monitor dialog open action.<br />This operation removes the <b>CAE0SimProcessStatus</b> objects from the database based on the values of the preferences <i>CAE_Jobs_Clear_After_Size</i> and <i>CAE_Jobs_Clear_Batch_Size</i>  during the tool launch operation.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessStatusManagement::deleteSimProcessStatusObjects",
        "name": "CAE0::Soa::SimProc::SimProcessStatusManagement::deleteSimProcessStatusObjects",
        "returnConst": "false",
        "returnDescription": "<i>serviceData</i> is returned and may contain following partial errors:<br />1700   &ndash; The preference CAE_Jobs_Clear_After_Size cannot be found.<br />1700   &ndash; The preference CAE_Jobs_Clear_Batch_Size cannot be found.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Attribute name to be used for fetching status objects. <br />Valid attribute names are -<br /><font face=\"courier\" height=\"10\">cae0JobId<br />cae0LaunchType<br />cae0ToolName<br />cae0StartTime<br />cae0FinishTime<br />cae0Status<br />cae0UserId<br />cae0WorkDir</font><br />",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "attribute"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Value for given attribute in String format. <br />For <font face=\"courier\" height=\"10\">cae0StartTime</font> and <font face=\"courier\" height=\"10\">cae0FinishTime</font> attributes, calling client is responsible for converting the date to  a string using Property::toDateString funtion in the SOA client  framework's Property     <br />class. This is a utility function used to convert a Calendar to a string.<br />A string with the format 'yyyy-MM-dd'T'HH:mm:ssZ' is returned.<br /><br />Valid values for <font face=\"courier\" height=\"10\">cae0Status</font> are-<br />INITIALIZING<br />IN PROGRESS<br />INTERMEDIATE LOADING<br />LOADING<br />COMPLETE<br />TERMINATED<br />FAILED<br /><br />Valid values for <font face=\"courier\" height=\"10\">cae0LaunchType</font> are -<br />LOCAL<br />REMOTE<br />SERVER<br />",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "value"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.0",
        "description": "The simulation tool launch feature in CAE Manager application supports a progress monitor dialog with a persistent status management object which is maintained in the database for each simulation tool launched by the user.<br /><br />This operation fetches  <b>CAE0SimProcessStatus</b> objects from database that match the attribute-value provided as input argument.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessStatusManagement::getSimProcessStatus#const,std::string,&$const,std::string,&",
        "name": "CAE0::Soa::SimProc::SimProcessStatusManagement::getSimProcessStatus",
        "returnConst": "false",
        "returnDescription": "The service data object will be returned as a response to the client. The desired <b>CAE0SimProcessStatus</b> objects are returned as object list.<br /><br />Following are the possible errors returned - <br /><br /><ul><ul><li type=\"disc\">51000 Internal error in AOM Module. Please report this to your system administrator. </li><li type=\"disc\">51007 Failed on Object CAE0SimProcessStatus</li><li type=\"disc\">51001 Object is locked for modify in another session</li><li type=\"disc\">51003 You do not have write access to object CAE0SimProcessStatus</li><li type=\"disc\">51010 You do not have delete access to the object CAE0SimProcessStatus</li><li type=\"disc\">51019 The attribute is not valid for that operation.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The unique job ID of the <b>CAE0SimProcessStatus</b> object to be updated.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "jobID"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "List of attribute names that are to be updated.<br />Valid values for attribute names are -<br /><font face=\"courier\" height=\"10\">cae0StartTime<br />cae0FinishTime<br />cae0Status<br />cae0WorkDir</font><br />",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "attributes"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "List of values for the corresponding attributes passed as argument to the operation.<br />All attribute values are to be in the String format. <br /><br />For <font face=\"courier\" height=\"10\">cae0StartTime</font> and <font face=\"courier\" height=\"10\">cae0FinishTime</font> attributes, calling client is responsible for converting the date to  a string using Property::toDateString funtion in the SOA client  framework's Property     <br />class. This is a utility function used to convert a Calendar to a string.<br />A string with the format 'yyyy-MM-dd'T'HH:mm:ssZ' is returned.<br /><br /><br />Valid values for <font face=\"courier\" height=\"10\">cae0Status</font> are-<br />INITIALIZING<br />IN PROGRESS<br />INTERMEDIATE LOADING<br />LOADING<br />COMPLETE<br />TERMINATED<br />FAILED<br />",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "values"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "bool",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.0",
        "description": "The simulation tool launch feature in CAE Manager application supports a progress monitor dialog with persistent status management object which are maintained in the database for every simulation tool launch job initiated by a user. <br /><br />The status object <b>CAE0SimProcessStatus</b>, which will be created during the launch of the simulation tool launch will need to be updated at different stages of tool launch. This operation updates the attributes such as status, last upload date, finish time and the last working directory of the <b>CAE0SimProcessStatus</b> object for a given simulation tool launch job.<br />",
        "id": "bool#CAE0::Soa::SimProc::SimProcessStatusManagement::updateSimProcessStatus#const,std::string,&$const,std::vector<std::string>,&$const,std::vector<std::string>,&",
        "name": "CAE0::Soa::SimProc::SimProcessStatusManagement::updateSimProcessStatus",
        "returnConst": "false",
        "returnDescription": "True - if the attributes on the status object are updated correctly.<br />False - if the attributes updated fails for the status object.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BOMLine",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The Root <b>BOMLine</b> of the input model structure loaded in the <b>BOMWindow</b>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "rootBOMLine"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "cae::CAE0ConfigRevision",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The selected Derivative Rule configuration.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "selectedRule"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The selected Variant Configuration.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "selectedVarConfig"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "An XML string containing the variant configuration data.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "varConfigDetails"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "int",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "The number of output structures to be derived.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "numOfStructs"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The name to be assigned to the output structure root. If no value is provided, output structure root will have the same name as that of the input model structure loaded in the <b>BOMWindow</b>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "optionalRootName"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The index to be appended to the output structure root name to differentiate each structure when multiple structures are created. If no value is provided, all output structure roots will have the same name.<br />The supported values are strings with multiple numeric digits. Alphanumeric strings and special characters are not supported as optionIndex value.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "optionalIndex"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "bool",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "The flag to indicate if auto-generated index is to be used. If true, a unique auto-generated number will be appended to the name of the root of derived structures. The optionalIndex value will be ignored if useAutoIndex flag is true.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "useAutoIndex"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2017_05::SimStructureManagement::DeriveResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.3.0",
        "description": "This operation creates multiple cloned or variant structures from the root <b>BOMLine</b> of a BOM structure loaded in a model <b>BOMWindow</b> by applying a derivative rule to it. <br />The output BOM structures may use the variant options set on the model <b>BOMWindow</b> or user can provide a set of variant options to be applied when deriving the output from input BOM structure. The output BOM structure is determined by the XSLT-based rules executed against the input BOM structure. These XSLT-based rules are a part of the derivative rule configuration. Several XSLT-based rules are defined under a derivative rule. There can be several derivative rules defined in the database by the user. <br /><br />The output structures may optionally have a user defined name for the root, suffixed with a user defined numerical index which increments for each output structure created.<br /><br />This operation uses the existing Data Mapping functionality to apply the XSLT-based rules against input structure and generate the output structure. Data mapping defines the mapping between an input item type and its resulting output item type. The Derive Structures operation specific data mapping rules will co-exist with existing configurations, stored in the datamapping.xml file. This file is maintained in the database. <br /><br />To use create derived structures operation, well-defined <i>CAEDerivativeRuleConfig.xml, CAEDerivativeVariantConfig.xml, datamapping.xml </i>and <i>NodeConfigXML.xml</i> files are required in the database.<br /><i>CAEDerivativeRuleConfig.xml</i> file contains the configurations and conditional XSLT-based rules pertaining to the Derivative Rule. <i>CAEDerivativeVariantConfig.xml</i> contains the variant options data in form of name and value pairs. <i>Datamapping.xml</i> contains mapping rules configured for mapping between input and output structures. <i>NodeXMLconfig.xml</i> has configured item attributes, which are mapped between input and output structure. <br /><br />Derivative Rules Configuration view is used to create a Derivative Rule as well as a Variant Configuration.<br /><i>Datamapping.xml</i> and <i>NodeXMLConfig.xml</i> are configured by an Administrator and stored at the location in database which is pointed by user preference CAE_datamap_files_location.",
        "id": "CAE0::Soa::Internal::SimProc::_2017_05::SimStructureManagement::DeriveResponse#CAE0::Soa::SimProc::SimStructureManagement::createDerivedStructures#const,Teamcenter::BOMLine,&$const,cae::CAE0ConfigRevision,&$const,std::string,&$const,std::string,&$int$const,std::string,&$const,std::string,&$bool",
        "name": "CAE0::Soa::SimProc::SimStructureManagement::createDerivedStructures",
        "returnConst": "false",
        "returnDescription": "DeriveResponse represents the output of the createDerivedStructures operation.<br /><br />A log is returned with the results of the derive operation. The item IDs and revisions of created items along with the description of additional items and relationships created in the process are part of the log. The following partial errors may be returned as a part of the Service data:<br /><br />The following partial errors may be returned<br />206845 - Error occurred during Derive operation. <br />206845 - Derive Engine unable to load/read/parse XMLRendering. <br />206643 - CAE_dataMapping_file preference not defined. <br />206647 - Item creation failed, operation aborted. <br />206648 - Occurrence creation failed, operation aborted. <br />206649 - Unknown attribute found. <br />206650 - Object not modifiable, set attribute operation failed. <br />206651 - Form creation failed. <br />206652 - BOMView creation failed. <br />206653 - Unable to save the Item in the Newstuff folder. <br />206664 - Error in relationship creation. <br />206665 - Item node line definition missing in Data Map.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement::Cae0PackageInputConfig2",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of configured input objects.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputConfigList"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement::Cae0PackageOutputConfig2",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of configured output objects.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "outputConfigList"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDatasetConfig",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of configured datasets.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "datasetConfigList"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageBVRConfig",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of configured <b>BOMView Revision</b> objects.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "bvrConfigList"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDestFolderConfig",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The configuration of the Folder object in which the output objects will be pasted upon creation.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "destinationFolder"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDetailsLogConfig",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The configuration of the log that will be generated.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "detailsLogConfig"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageWorkFlowConfig",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The workflow configuration information.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "workflowConfig"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "cae::CAE0ConfigRevision",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The <b>CAE0ConfigRevision</b> object holding the CAE Package configuration.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "configObject"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc12000.4.0",
        "description": "The CAE Manager application in Teamcenter provides a way to create and relate multiple Computer Aided Engineering (CAE) objects (sub-types of <b>CAEItem</b> and <b>CAEItemRevision</b> along with the CAE specific relationships and <b>Dataset</b> objects) via a prior configuration defined by the user. The configuration is done by the user in the Rich Application Client (RAC) by invoking the CAE Package configuration dialog in the CAE Manager application. This saves the configuration to an XML file which is added as a named reference to a <b>Dataset</b> that gets attached to the <b>CAE0Configuration</b> object. This is termed as configuring a CAE Package.<br />This operation will process the configuration and create the various CAE specific objects as per the configuration. Based on the configuration, this operation creates <b>CAEItem</b> objects and its sub-types, <b>CAEItemRevision</b> objects and its sub-types along with related <b>Dataset</b> objects, <b>BOMView</b> and <b>BOMView Revision</b> objects. This operation also creates relationship between input objects (<b>ItemRevision</b>) and the output objects if configured. The created objects could also be assigned to a workflow as per the configuration. The user can also override the default values specified in the configuration while creating the objects.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimDataManagement::processCAEPackage#const,std::vector<CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement::Cae0PackageInputConfig2>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement::Cae0PackageOutputConfig2>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDatasetConfig>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageBVRConfig>,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDestFolderConfig,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDetailsLogConfig,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageWorkFlowConfig,&$const,cae::CAE0ConfigRevision,&",
        "name": "CAE0::Soa::SimProc::SimDataManagement::processCAEPackage",
        "returnConst": "false",
        "returnDescription": "This operation sends alert once execution of CAEPackage is done. Alert contains details log which further contains information related to any failures happened due to invalid input objects, creation of output objects or relating the output and input objects.<br /><br />This operation returns ServiceData which may contain following errors:<br /><ul><ul><li type=\"disc\">372011 - Invalid configuration type. Valid configuration type is CAEPackages.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2017_11::SimStructureManagement::StructureMapInputsInfo2",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The input structure to hold all the inputs for StructureMap execution service operation.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "structureMapInputs"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimStructureManagement::StructureMapFilterInclusionRuleInfo",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The input structure to hold all the information for inclusion rule for StructureMap execution service operation.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inclusionRuleInputs"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::SimProc::_2017_05::SimStructureManagement::StructureMapExecutionResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.6.0",
        "description": "This operation creates an output BOM structure given the root <b>BOMLine</b> of an input BOM structure along with a selection of child <b>BOMLine</b> objects in the structure. The selected <b>BOMLine</b> objects will be processed to determine their parent <b>BOMLine</b> objects which will form the complete selection and will be used for processing. The <b>BOMLine</b> objects that are not a part of the selection will be filtered out to create the output BOM structure. This operation also reads a PLMXML file generated by the Lifecycle Viewer application in Teamcenter, this file is parsed to get the selection made in the Lifecycle Viewer and a filter rule is created based on the selection.<br /><br />The output BOM structure is determined by the XSLT-based <i>Data Map rules</i> executed against the input BOM structure. <i>Data Map</i> syntax is in compliance with the schema defined in <i>tcsim_xslWithNode.xsd</i>, located in <i>TC_DATA</i>.<br /><br /><i>Data Map rules</i> define the mapping between an input item type and its resulting output item type. <i>Data Map rules</i> are defined for an entire site and are stored in the <i>datamapping.xml</i> file located in <i>TC_DATA</i>. The name of the <i>datampping</i> file is defined by the site preference <i>CAE_dataMapping_file</i>.<br /><br />The <i>Data Map rules</i> can be configured for various domains defined as LOV objects under StructureMap Domains in <i>BMIDE</i>. To configure the domains, in the <i>Extensions</i> view in <i>BMIDE</i>, open LOV-&gt;StructureMap Domains and add additional domain values. The domain to be used for applying <i>Data Map rules</i> can also be provided as an input.<br /><br />To use this operation, a well-defined <i>datamapping.xml</i> is required in <i>TC_DATA</i> and the user should have either a simulation_author or rtt_author license.",
        "id": "CAE0::Soa::SimProc::_2017_05::SimStructureManagement::StructureMapExecutionResponse#CAE0::Soa::SimProc::SimStructureManagement::executeStructMapWithInclusionRule#const,CAE0::Soa::Internal::SimProc::_2017_11::SimStructureManagement::StructureMapInputsInfo2,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimStructureManagement::StructureMapFilterInclusionRuleInfo,&",
        "name": "CAE0::Soa::SimProc::SimStructureManagement::executeStructMapWithInclusionRule",
        "returnConst": "false",
        "returnDescription": "The <b>PSBOMViewRevision</b> of the root of the newly created output structure added to the Created list of the <i>serviceData</i>. If the root of the output structure does not have a <b>BOMViewRevision</b>, then the <b>ItemRevision</b> of the root is added to the Created list of the serviceData. An <i>activityLog</i> is also returned which contains the results of the <i>DataMap rules</i> applied to the input structure and the output items created. The details include the type of the output item created, the <i>Item ID</i> of the root output item, a count of the input <b>BOMLine</b> objects that were processed and the time taken for the execution.<br /><br />serviceData may contain following partial errors:<br />206622 &ndash; Structure Engine unable to load/read/parse DataMap.<br />206628 &ndash; Invalid Structure Map.<br />206641 &ndash; Invalid Datamap.<br />206642 &ndash; XML Libraries for StructureMap Engine not available.<br />206643 &ndash; CAE_dataMapping_file preference not defined.<br />206647 &ndash; Item creation failed, operation aborted.<br />206648 &ndash; Occurrence creation failed, operation aborted.<br />206649 &ndash; Unknown attribute found.<br />206650 &ndash; Object not modifiable, set attribute operation failed.<br />206651 &ndash; Form creation failed.<br />206652 &ndash; BOMView creation failed.<br />206653 &ndash; Unable to save the Item in the Newstuff folder.<br />206658 &ndash; Existing Relationship found, relationship not being created.<br />206662 &ndash; Error encountered in Variant Condition creation.<br />206664 &ndash; Error in relationship creation.<br />206665 &ndash; Item node line definition missing in DataMap.<br />206666 &ndash; StructureMap domain not found for StructureMapRevision.<br />206672 &ndash; Rules with different domains found in the same StructureMap/DataMap.<br />206673 &ndash; Rules with no domain defined found in StructureMap/DataMap.<br />206676 &ndash; Invalid domain for datamapping.<br />206677 &ndash; Multiple variant clauses found in the variant condition. Variant Condition creation failed.<br />206678 &ndash; Invalid or missing variant clause expression. Variant Condition creation failed.<br />206679 &ndash; Mapped BOMView Type does not exist, creating default view type.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::SimProc::_2017_05::SimStructureManagement::StructureMapInputsInfo",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A structure holding inputs for executeStructureMap operation.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "structureMapInputs"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::SimProc::_2017_05::SimStructureManagement::StructureMapExecutionResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.3.0",
        "description": "This operation creates an output BOM structure given the root <b>ItemRevision</b> of the root <b>BOMLine</b> of an input BOM structure along with its <b>RevisionRule</b> and the <b>VariantRule</b>. A <b>Snapshot</b> folder of the input BOM structure along with the <b>VariantRule</b> can also be provided as an input. The output BOM structure is determined by the XSLT-based <i>Data Map rules </i>executed against the input BOM structure. <i>Data Map</i> syntax is in compliance with the schema defined in <i>tcsim_xslWithNode.xsd</i>, located in <i>TC_DATA</i>.<br /><br /><i>Data Map rules</i> define the mapping between an input item type and its resulting output item type. <i>Data Map rules</i> are defined for an entire site and are stored in the <i>datamapping.xml</i> file located in <i>TC_DATA</i>. The name of the <i>datamapping</i> file is defined by the site preference <i>CAE_dataMapping_file</i>.<br /><br />The <i>Data Map rules</i> can be configured for various domains defined as LOV objects under StructureMap Domains in <i>BMIDE</i>. To configure the domains, in the <i>Extensions</i> view in <i>BMIDE</i>, open LOV-&gt;StructureMap Domains and add additional domain values. The domain to be used for applying <i>Data Map rules</i> can also be provided as an input.<br /><br />To use this operation, a well-defined <i>datamapping.xml</i> is required in <i>TC_DATA</i> and the user should have either a simulation_author or rtt_author license.<br /><br />This service operation calls asynchronous service operation internlly to execute Datamap with the given parameters.",
        "id": "CAE0::Soa::SimProc::_2017_05::SimStructureManagement::StructureMapExecutionResponse#CAE0::Soa::SimProc::SimStructureManagement::executeStructureMap#const,CAE0::Soa::SimProc::_2017_05::SimStructureManagement::StructureMapInputsInfo,&",
        "name": "CAE0::Soa::SimProc::SimStructureManagement::executeStructureMap",
        "returnConst": "false",
        "returnDescription": "This operation returns ServiceData which may contain following partial errors:<br />206622 &ndash; Structure Engine unable to load/read/parse DataMap.<br />206628 &ndash; Invalid Structure Map.<br />206641 &ndash; Invalid Datamap.<br />206642 &ndash; XML Libraries for StructureMap Engine not available.<br />206643 &ndash; CAE_dataMapping_file preference not defined.<br />206647 &ndash; Item creation failed, operation aborted.<br />206648 &ndash; Occurrence creation failed, operation aborted.<br />206649 &ndash; Unknown attribute found.<br />206650 &ndash; Object not modifiable, set attribute operation failed.<br />206651 &ndash; Form creation failed.<br />206652 &ndash; BOMView creation failed.<br />206653 &ndash; Unable to save the Item in the Newstuff folder.<br />206658 &ndash; Existing Relationship found, relationship not being created.<br />206662 &ndash; Error encountered in Variant Condition creation.<br />206664 &ndash; Error in relationship creation.<br />206665 &ndash; Item node line definition missing in DataMap.<br />206666 &ndash; StructureMap domain not found for StructureMapRevision.<br />206672 &ndash; Rules with different domains found in the same  StructureMap/DataMap.<br />206673 &ndash; Rules with no domain defined found in StructureMap/DataMap.<br />206676 &ndash; Invalid domain for datamapping.<br />206677 &ndash; Multiple variant clauses found in the variant condition. Variant Condition creation failed.<br />206678 &ndash; Invalid or missing variant clause expression. Variant Condition creation failed.<br />206679 &ndash; Mapped BOMView Type does not exist, creating default view type.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::ItemRevision",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "<b>ItemRevision</b> of the root item of the input structure. This can be null if the <i>snapshotFolder</i> is provided as input to the operation. If the <i>rootIR</i> is not null and <i>snapshotFolder</i> is also provided as an input, then <i>rootIR</i> input will be ignored and <i>snapshotFolder</i> will take precedence.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "rootIR"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::Snapshot",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The <b>Snapshot</b> folder of the input structure. The <i>snapshotFolder</i> can be null if the root <i>rootIR</i> is used as an input to the operation. The <i>snapshotFolder</i> takes precedence over the <i>rootIR</i>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "snapshotFolder"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::RevisionRule",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The <b>RevisionRule</b> of the input structure. An optional parameter and can be provided if the root <b>ItemRevision</b> is used as an input to the operation. This parameter will be ignored if <i>snapshotFolder</i> is used as an input.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "revRule"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::VariantRule",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The <b>VariantRule</b> for the input structure. This can be provided for both, the <i>rootIR</i> or <i>snapshotFolder</i> as input. This is an optional parameter and can be null.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "variantRule"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The domain for the <i>Data Map rules</i> to be applied. The <i>datamapping.xml </i>file can be configured for various domains defined as LOV objects under StructureMap Domains in <i>BMIDE</i>. This argument is used to specify which domain to be used from the <i>datamapping.xml</i> file. If the value is not provided, the default is assumed to be CAE. If <b>StructureMapRevision</b> is null, then domain value will be considered and Datamapping will be executed.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "domain"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::StructureMapRevision",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The <b>StructureMapRevision</b> containing a <b>CAEStructureMap</b> <i>Dataset</i> with an XML <i>named reference </i>containing valid <i>StructureMap rules</i>. If <b>StructureMapRevision</b> is not null, then domain value will be ignored.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "structureMapIR"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "void",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.3.0",
        "description": "This service operation asynchronously executes StructureMap with the given parameters, and establishes a relation between input Product structure and the newly created <b>CAEModel</b> structure.",
        "id": "void#CAE0::Soa::SimProc::SimStructureManagement::executeStructureMapAsync#const,Teamcenter::ItemRevision,&$const,Teamcenter::Snapshot,&$const,Teamcenter::RevisionRule,&$const,Teamcenter::VariantRule,&$const,std::string,&$const,Teamcenter::StructureMapRevision,&",
        "name": "CAE0::Soa::SimProc::SimStructureManagement::executeStructureMapAsync",
        "returnConst": "false",
        "returnDescription": "As this is an asynchronous operation, it does not have return parameter.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2017_11::SimStructureManagement::StructureMapInputsInfo2",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The input structure to hold all the inputs for StructureMap execution service operation.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "structureMapInputs"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::SimProc::_2017_05::SimStructureManagement::StructureMapExecutionResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.4.0",
        "description": "This operation creates an output BOM structure given the root <b>BOMLine</b> of an input BOM structure along with a selection of child<b> BOMLine</b> objects in the structure. The selected <b>BOMLine</b> objects will be processed to determine their parent <b>BOMLine</b> objects which will form the complete selection and will be used for processing. The <b>BOMLine</b> objects that are not a part of the selection will be filtered out to create the output BOM structure. The output BOM structure is determined by the XSLT-based <i>Data Map rules</i> executed against the input BOM structure. <i>Data Map</i> syntax is in compliance with the schema defined in <i>tcsim_xslWithNode.xsd</i>, located in <i>TC_DATA</i>.<br /><br /><i>Data Map rules</i> define the mapping between an input item type and its resulting output item type. <i>Data Map rules</i> are defined for an entire site and are stored in the <i>datamapping.xml</i> file located in <i>TC_DATA</i>. The name of the datampping file is defined by the site preference <i>CAE_dataMapping_file</i>.<br /><br />The<i> Data Map rules</i> can be configured for various domains defined as LOV objects under StructureMap Domains in BMIDE. To configure the domains, in the <i>Extensions</i> view in <i>BMIDE</i>, open LOV-&gt;StructureMap Domains and add additional domain values. The domain to be used for applying<i> Data Map rules</i> can also be provided as an input.<br /><br />To use this operation, a well-defined <i>datamapping.xml</i> is required in <i>TC_DATA</i> and the user should have either a simulation_author or rtt_author license.",
        "id": "CAE0::Soa::SimProc::_2017_05::SimStructureManagement::StructureMapExecutionResponse#CAE0::Soa::SimProc::SimStructureManagement::executeStructureMapOnSelection#const,CAE0::Soa::Internal::SimProc::_2017_11::SimStructureManagement::StructureMapInputsInfo2,&",
        "name": "CAE0::Soa::SimProc::SimStructureManagement::executeStructureMapOnSelection",
        "returnConst": "false",
        "returnDescription": "This operation returns <i>StructureMapExecutionResponse</i> which consists of two structure elements the <i>serviceData</i> and the <i>activityLog</i>.<br />The <b>PSBOMViewRevision</b> of the root of the newly created output structure added to the Created list of the <i>serviceData</i>. If the root of the output structure does not have a <b>BOMViewRevision</b>, then the <b>ItemRevision</b> of the root is added to the Created list of the <i>serviceData</i>. An <i>activityLog</i> is also returned which contains the results of the <i>DataMap rules</i> applied to the input structure and the output items created. The details include the type of the output item created, the <i>Item ID</i> of the root output item, a count of the input <b>BOMLine</b> objects that were processed and the time taken for the execution.<br /><br /><i>serviceData</i> may contain following partial errors:<br />206622 &ndash; Structure Engine unable to load/read/parse DataMap.<br />206628 &ndash; Invalid Structure Map.<br />206641 &ndash; Invalid Datamap.<br />206642 &ndash; XML Libraries for StructureMap Engine not available.<br />206643 &ndash; CAE_dataMapping_file preference not defined.<br />206647 &ndash; Item creation failed, operation aborted.<br />206648 &ndash; Occurrence creation failed, operation aborted.<br />206649 &ndash; Unknown attribute found.<br />206650 &ndash; Object not modifiable, set attribute operation failed.<br />206651 &ndash; Form creation failed.<br />206652 &ndash; BOMView creation failed.<br />206653 &ndash; Unable to save the Item in the Newstuff folder.<br />206658 &ndash; Existing Relationship found, relationship not being created.<br />206662 &ndash; Error encountered in Variant Condition creation.<br />206664 &ndash; Error in relationship creation.<br />206665 &ndash; Item node line definition missing in DataMap.<br />206666 &ndash; StructureMap domain not found for StructureMapRevision.<br />206672 &ndash; Rules with different domains found in the same StructureMap/DataMap.<br />206673 &ndash; Rules with no domain defined found in StructureMap/DataMap.<br />206676 &ndash; Invalid domain for datamapping.<br />206677 &ndash; Multiple variant clauses found in the variant condition. Variant Condition creation failed.<br />206678 &ndash; Invalid or missing variant clause expression. Variant Condition creation failed.<br />206679 &ndash; Mapped BOMView Type does not exist, creating default view type.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimStructureManagement::StructureMapInputsInfo3",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The input structure to hold all the inputs for Structure Map execution service operation.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "structureMapInputs"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "void",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.6.0",
        "description": "This service operation asynchronously executes Structure Map with the given parameters, and establishes a relation between input Product structure and the newly created <b>CAEModel</b> structure.",
        "id": "void#CAE0::Soa::SimProc::SimStructureManagement::generateCAEStructOnSelectionAsync#const,CAE0::Soa::Internal::SimProc::_2018_11::SimStructureManagement::StructureMapInputsInfo3,&",
        "name": "CAE0::Soa::SimProc::SimStructureManagement::generateCAEStructOnSelectionAsync",
        "returnConst": "false",
        "returnDescription": "As this is an asynchronous operation, it does not have return parameter.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of Teamcenter business objects to be converted into NodeXML.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "objects"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The NodeXML can be generated for various domains defined as LOV objects under StructureMap Domains in BMIDE. To configure the domains, in the Extensions view in BMIDE, open LOV->StructureMap Domains and add additional domain values. This argument is used to specify which domain to use to generate the NodeXML.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "domain"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::GenerateNodeXMLResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.4",
        "description": "This operation generates a <i>NodeXML</i> representation of the Teamcenter business objects identified in the input parameter and the selected domain defined as LOV under <b>StructureMap Domains</b> in BMIDE. <i>NodeXML</i> is XML-based and is most commonly used in the process for creating <i>Data Map</i> and <i>StructureMap rules</i>. The generated NodeXML consists of the visible attributes and their values associated with the <b>Item</b>, <b>ItemRevision</b>, related <b>Form</b> objects and the <b>BOMLine</b>. The <i>NodeXML</i> syntax is in compliance with the schema defined in <i>tcsim_sm_node.xsd</i>, located in <i>TC_DATA</i> folder.<br /><br />For more details on building and executing <i>Data Map</i> and <i>StructureMap</i> rules, please refer to the \"<i>Creating StructureMap rules</i>\" section in the <i>Simulation Process Management Guide->Using StructureMaps</i> chapter of the Teamcenter documentation.",
        "id": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::GenerateNodeXMLResponse#CAE0::Soa::SimProc::SimStructureManagement::generateNodeXML#const,std::vector<Teamcenter::BusinessObject>,&$const,std::string,&",
        "name": "CAE0::Soa::SimProc::SimStructureManagement::generateNodeXML",
        "returnConst": "false",
        "returnDescription": "The method returns a <i>NodeXML</i> document consisting of the displayable attributes and its values for the <b>Item</b>, <b>ItemRevision</b>, <b>Form</b> and <b>BOMLine</b> for each business object provided in the input and service data with appropriate errors, if encountered.<br /><br />The following partial errors may be returned:<br /><br /><ul><ul><li type=\"disc\">39004 Unable to load the type</li><li type=\"disc\">39014 The specified type does not exist</li><li type=\"disc\">38020 Invalid name provided to define property.</li><li type=\"disc\">38022 The Object type is invalid for property.</li><li type=\"disc\">38027 Property type not supported by this operation.</li><li type=\"disc\">38040 Invalid property descriptor tag.</li><li type=\"disc\">38043 Unable to get value from a pomattribute for property</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of Teamcenter business objects to be converted into <i>NodeXML</i>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "objects"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The <i>NodeXML</i> can be generated for various domains defined as LOV objects under <b>StructureMap Domains</b> in BMIDE. To configure the domains, in the Extensions view in BMIDE, open LOV-&gt;StructureMap Domains and add additional domain values. This argument is used to specify which domain to use to generate the <i>NodeXML</i>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "domain"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The displayable attributes and its values for the <b>Item</b>, <b>ItemRevision</b>, <b>Form</b> and <b>BOMLine</b> for each business object can be segregated by the focus depending on whether they will be used as an input or the output in the <i>DataMap</i> and <i>StructureMap rules</i>. The <i>NodeXML</i> can be generated with IN focused attributes or OUT focused attributes. This parameter is used to specify which focus is to be used for generating the <i>NodeXML</i>. In case no value is provided for the focus, the <i>NodeXML</i> will be generated with attributes of both focus types.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "focus"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::GenerateNodeXMLResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.5.0",
        "description": "This operation generates a <i>NodeXML</i> representation of the Teamcenter business objects identified in the input parameter and the selected domain defined as LOV under <b>StructureMap Domains</b> in BMIDE for the given focus. <i>NodeXML</i> is XML-based and is most commonly used in the process for creating<i> Data Map </i>and <i>StructureMap rules</i>. The generated <i>NodeXML</i> consists of the visible attributes and their values associated with the <b>Item</b>, <b>ItemRevision</b>, related <b>Form</b> objects and the <b>BOMLine</b>. These attributes are segregated by the focus depending on whether they will be used as an input or the output in the<i> DataMap</i> and <i>StructureMap rules</i>. The <i>NodeXML</i> syntax is in compliance with the schema defined in <i>tcsim_sm_node.xsd</i>, located in<i> TC</i>_<i>DATA</i> folder. For more details on building and executing <i>Data Map</i> and <i>StructureMap rules,</i> please refer to the &quot;<i>Creating StructureMap rules</i>&quot; section in the <i>Simulation Process Management Guide-&gt;Using StructureMaps</i> chapter of the Teamcenter documentation.",
        "id": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::GenerateNodeXMLResponse#CAE0::Soa::SimProc::SimStructureManagement::generateNodeXMLWithFocus#const,std::vector<Teamcenter::BusinessObject>,&$const,std::string,&$const,std::string,&",
        "name": "CAE0::Soa::SimProc::SimStructureManagement::generateNodeXMLWithFocus",
        "returnConst": "false",
        "returnDescription": "The method returns a GenerateNodeXMLResponse object that contains the <i>NodeXML</i> document consisting of the displayable attributes and its values for the <b>Item</b>, <b>ItemRevision</b>, <b>Form</b> and <b>BOMLine</b> for each business object provided in the input and service data with appropriate errors, if encountered. <br />The following partial errors may be returned:<br /><br /><ul><ul><li type=\"disc\">39004 - Unable to load the type</li><li type=\"disc\">39014 - The specified type does not exist</li><li type=\"disc\">38020 - Invalid name provided to define property.</li><li type=\"disc\">38022 - The Object type is invalid for property.</li><li type=\"disc\">38027 - Property type not supported by this operation.</li><li type=\"disc\">38040 - Invalid property descriptor tag.</li><li type=\"disc\">38043 - Unable to get value from a pomattribute for property</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Selected Composite View Top Line. It can be <b>ItemRevision</b>, <b>CAEModelRevision</b>, <b>CAEAnalysisRevision</b>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "component"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "int",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "Item Types to be filtered from Tool Bar. It can be <b>CAEModelRevision</b>, <b>CAEGeometryRevision</b>, <b>CAEAnalysisRevision</b> and All.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "filterItemType"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Relationship List to be filtered from Tool Bar.  Relationship List is the list of Strings populated from <br /><b>CAE_significant_relation_types_for_Product</b> Teamcenter Preference for <b>ItemRevision</b>, <b>CAE_significant_relation_types_for_CAEModel</b> Teamcenter Preference for <b>CAEModelRevision</b>,<b> CAE_significant_relation_types_for_CAEAnalysis</b> Teamcenter Preference for <b>CAEAnalysisRevision</b>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "filterRelationType"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "bool",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "Boolean value to indicate to Show Related Analysis RootOnly. If true, will show the related<br /><b>CAEAnalysisRevision</b> for Root <b>CAEModelRevision</b>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "showRelatedAnalysisRootOnly"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::ConfigurationContext",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "<b>ConfigurationContext</b> applied on the input view.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "configurationContext"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::CompositeViewResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.4",
        "description": "CAE Manager provides Composite View to view Product, Model and Analysis with their relationships in a organised way. This Operation will return the Composite View one level Data Tree Structure built on the server side. This is done using Persistant Object Model queries to get the results. This Operation also have capability to filter the Structure based on Item Type and Relation Type passed as parameters.",
        "id": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::CompositeViewResponse#CAE0::Soa::SimProc::SimStructureManagement::getCompositeLineNodes#const,Teamcenter::BusinessObject,&$int$const,std::vector<std::string>,&$bool$const,Teamcenter::ConfigurationContext,&",
        "name": "CAE0::Soa::SimProc::SimStructureManagement::getCompositeLineNodes",
        "returnConst": "false",
        "returnDescription": "Method return newly created data type about the queried item parent child structure as ParentToChildCompositeStructure data structure along with Service Data for detecting any errors from the server side.<br /><br />The following partial errors may be returned:<br />51003   - The current user does not have write access to the selected object.<br />46062 - The BOM cannot be expanded because it contains an unreadable item.<br />206815 - The license check failed. There is no valid license to access the Teamcenter Simulation functionality.<br />516001 - An Enquiry internal error has occurred.<br />516003 - The Enquiry module has not been initialized.<br />516021 - An invalid value is given to the enquiry.<br />516027 - The enquiry module has run out of memory<br />",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Selected Composite View Top Line. It can be <b>ItemRevision</b>, <b>CAEModelRevision</b>, <b>CAEAnalysisRevision</b>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "component"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "int",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "Item Types to be filtered from Tool Bar. It can be<br />0 - <b>CAEModelRevision</b><br />1 - <b>CAEGeometryRevision</b><br />2 - <b>CAEAnalysisRevision</b><br />3 <b>- All</b>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "filterItemType"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Relationship List to be filtered from Tool Bar.  Relationship List is the list of Strings populated from <br /><b>CAE_significant_relation_types_for_Product</b> Teamcenter Preference for <b>ItemRevision</b>,<br /><b>CAE_significant_relation_types_for_CAEModel</b> Teamcenter Preference for <b>CAEModelRevision</b>,<b> CAE_significant_relation_types_for_CAEAnalysis</b> Teamcenter Preference for <b>CAEAnalysisRevision</b>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "filterRelationType"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "bool",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "If True it will show the related <b>CAEAnalysisRevision</b> for all <b>CAEModelRevision</b>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "showRelatedAnalysisAll"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "bool",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "If True it will show the related <b>CAEAnalysisRevision</b> for Root <b>CAEModelRevision</b>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "showRelatedAnalysisRootOnly"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::ConfigurationContext",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "<b>ConfigurationContext</b> applied on the input view.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "configurationContext"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::CompositeViewResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.4",
        "description": "CAE Manager provides Composite View to view Product, Model and Analysis with their several relationships in a organised way. This Operation will return the Composite View all level Data Tree Structure built on the server side. It uses TIE query to get the results. This Operation also have capability to filter the Structure based on Item Type and Relation Type passed as parameters in the Operation. <b>ConfigurationContext</b> is also passed as parameter for TIE Query",
        "id": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::CompositeViewResponse#CAE0::Soa::SimProc::SimStructureManagement::getCompositeLineNodesExpandBelow#const,Teamcenter::BusinessObject,&$int$const,std::vector<std::string>,&$bool$bool$const,Teamcenter::ConfigurationContext,&",
        "name": "CAE0::Soa::SimProc::SimStructureManagement::getCompositeLineNodesExpandBelow",
        "returnConst": "false",
        "returnDescription": "Method returns the newly created data type about the queried item parent child structure as ParentToChildCompositeStructure data structure.<br /><br />The following partial errors may be returned:<br />51003 - The current user does not have write access to the selected object.<br />46062 - The BOM cannot be expanded because it contains an unreadable item.<br />206815 - The license check failed. There is no valid license to access the Teamcenter Simulation functionality.<br />11001 - TcXML Import Export internal error.<br />11002 - Transfermode name passed for import/export is missing in the database.<br />11004 - Failed to create Log/FailedObjects file for import/export.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Selected Composite View Top Line. This can be <b>ItemRevision</b>, <b>CAEModelRevision</b> or <b>CAEAnalysisRevision</b>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "component"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "int",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "Item Types to filter on. Supported values are:<br />0 - <b>CAEModelRevision</b><br />1 - <b>CAEGeometryRevision</b><br />2 - <b>CAEAnalysisRevision</b><br />3 <b>- All</b>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "filterItemType"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::vector<std::string>",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Relationship List to be filtered from Tool Bar. Relationship List is the list of Strings populated from <br /><b>CAE_significant_relation_types_for_Product</b> Teamcenter Preference for <b>ItemRevision</b>,<br /><b>CAE_significant_relation_types_for_CAEModel</b> Teamcenter Preference for <b>CAEModelRevision</b>, <b>CAE_significant_relation_types_for_CAEAnalysis </b>Teamcenter Preference for <b>CAEAnalysisRevision</b>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "filterRelationType"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "bool",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "If True it will show the related <b>CAEAnalysisRevision</b> for all <b>CAEModelRevision</b>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "showRelatedAnalysisAll"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "bool",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "If True it will show the related <b>CAEAnalysisRevision</b> for Root <b>CAEModelRevision</b>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "showRelatedAnalysisRootOnly"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::ConfigurationContext",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "<b>ConfigurationContext</b> applied on the input view.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "configurationContext"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::vector<std::string>",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Column names represent the internal names of the <b>ItemRevision</b> properties.For example:- object_name,object_desc.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "columnNames"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2016_03::SimStructureManagement::CompositeViewResponse2",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.6",
        "description": "CAE Manager provides Composite View to view Product, Model and Analysis with their several relationships in an organized way. This Operation returns the Composite View all level Data Tree Structure built on the server side. It uses TcXML Import Export query to get the results. This operation also has the capability to filter the structure based on <b>Item</b> type and relation type passed as parameters in the operation. <b>ConfigurationContext</b> is also passed as parameter for TcXML Import Export Query.",
        "id": "CAE0::Soa::Internal::SimProc::_2016_03::SimStructureManagement::CompositeViewResponse2#CAE0::Soa::SimProc::SimStructureManagement::getCompositeLineNodesExpandBelow2#const,Teamcenter::BusinessObject,&$int$const,std::vector<std::string>,&$bool$bool$const,Teamcenter::ConfigurationContext,&$const,std::vector<std::string>,&",
        "name": "CAE0::Soa::SimProc::SimStructureManagement::getCompositeLineNodesExpandBelow2",
        "returnConst": "false",
        "returnDescription": "Method returns the newly created data type about the queried item parent child structure as <i>ParentToChildCompositeStructure2</i> data structure.<br /><br />The following partial errors may be returned:<br />51003 - The current user does not have write access to the selected object.<br />46062 - The BOM cannot be expanded because it contains an unreadable item.<br />206815 - The license check failed. There is no valid license to access the Teamcenter Simulation functionality.<br />11001 - TcXML Import Export internal error.<br />11002 - Transfermode name passed for import/export is missing in the database.<br />11004 - Failed to create Log/FailedObjects file for import/export.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement::Cae0PackageInputConfig2",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of configurations with input object details provided by the user.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputConfigList"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2021_06::SimDataManagement::Cae0PackageOutputConfig3",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of configurations with output object details provided by the user.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "outputConfigList"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDatasetConfig",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of configurations with dataset details provided by the user.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "datasetConfigList"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageBVRConfig",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of configurations with <b>BOMView Revision</b> object details provided by the user.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "bvrConfigList"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDestFolderConfig",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The configuration of the <b>Folder</b> object details in which the output objects will be pasted upon creation.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "destinationFolder"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDetailsLogConfig",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The configuration of the details of the log that will be generated with summary of CAE Package execution.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "detailsLogConfig"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageWorkFlowConfig",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The workflow configuration information provided by the user.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "workflowConfig"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2021_06::SimDataManagement::Cae0StringToIntListMap",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A map (string, list of int) of output item ID pattern and a list of allocated counters for pattern N pairs.<br />The item ID pattern key is used to evaluate the counter allocated for pattern N configured from the CAE Package configuration (<b>CAE0ConfigRevision</b>).<br />Example,<br />If the output item ID pattern configured in the CAE Package configuration (<b>CAE0ConfigRevision</b>) as:, INPUTID&quot;.sim&quot;N and the item ID of the selected object is 000387, then the map has an entry as:,<br />Key: &quot;000387.sim*&quot; and Value: &quot;1, 2&quot;.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "patternToCounterListMap"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "cae::CAE0ConfigRevision",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The <b>CAE0ConfigRevision</b> object holding the CAE Package configuration.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "configObject"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc13000.2.0",
        "description": "The CAE Manager application in Teamcenter provides a way to create and relate multiple Computer Aided Engineering (CAE) objects (sub-types of <b>CAEItem</b> and <b>CAEItemRevision</b> along with the CAE specific relationships and <b>Dataset</b> objects) via a prior configuration defined by the user. The configuration is done by the user in the Rich Application Client (RAC) by invoking the CAE Package configuration dialog in the CAE Manager application. This saves the configuration to an XML file which is added as a named reference to a <b>Dataset</b> that gets attached to the <b>CAE0Configuration</b> object. This is termed as configuring a CAE Package.<br />This operation processes the configuration and creates the various CAE specific objects as per the configuration. Based on the configuration, this operation creates <b>CAEItem</b> objects, <b>CAEItemRevision</b> objects along with related <b>Dataset</b> objects, <b>BOMView</b> and <b>BOMView Revision</b> objects. This operation also creates relationship between input objects (<b>ItemRevision</b>) and the output objects if configured. The created objects could also be assigned to a workflow as per the configuration. The default values specified in the configuration can be overridden while creating the objects.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimDataManagement::processCAEPackageWithPatterns#const,std::vector<CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement::Cae0PackageInputConfig2>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2021_06::SimDataManagement::Cae0PackageOutputConfig3>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDatasetConfig>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageBVRConfig>,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDestFolderConfig,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageDetailsLogConfig,&$const,CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PackageWorkFlowConfig,&$const,CAE0::Soa::Internal::SimProc::_2021_06::SimDataManagement::Cae0StringToIntListMap,&$const,cae::CAE0ConfigRevision,&",
        "name": "CAE0::Soa::SimProc::SimDataManagement::processCAEPackageWithPatterns",
        "returnConst": "false",
        "returnDescription": "This operation sends an alert to the user in Active Workspace in alert section after the execution of CAE Package is done. The alert contains a detailed log having information related to any errors related to invalid input objects, creation of output objects or relating the output and the input objects.<br /><br />This operation returns ServiceData which may contain the following partial errors:<br /><ul><ul><li type=\"disc\">372011 - The provided &lt;configuration&gt; configuration type in invalid. Valid configuration type is CAEPackages.</li><li type=\"disc\">372017 &ndash; The provided uid for given input object &lt;object type&gt; is invalid. Please provide a valid uid for &lt;object type&gt;.</li><li type=\"disc\">372018 - The provided &lt;type name&gt; is invalid. Please provide a valid type name of the object.</li><li type=\"disc\">372019 - The provided &lt;relation name&gt; relation is invalid. Please provide the correct relation name.</li><li type=\"disc\">372020 - The provided &lt;template name&gt; template or &lt;assignment name&gt; assignment is invalid. Please provide a valid template name and assignment name.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "List of business objects for which the information of the attached files needs to be fetched. These business objects can be <b>Item</b>, <b>ItemRevision</b>, etc.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputObjects"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2016_10::SimStructureManagement::GetFileDetailsResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.2.3",
        "description": "File Explorer view is a secondary view associated with Home, Product, Model and Analysis view  in CAE Manager. File Explorer view displays list of <b>ImanFile</b> objects which are associated with <b>ItemRevision</b> through <b>Dataset</b>. This Operation returns required information for File Explorer view.",
        "id": "CAE0::Soa::Internal::SimProc::_2016_10::SimStructureManagement::GetFileDetailsResponse#CAE0::Soa::SimProc::SimStructureManagement::getFileDetails#const,std::vector<Teamcenter::BusinessObject>,&",
        "name": "CAE0::Soa::SimProc::SimStructureManagement::getFileDetails",
        "returnConst": "false",
        "returnDescription": "Method returns a GetFileDetailsResponse object.<br /><br />The following partial errors may be returned:<br />206815 - The license check failed. There is no valid license to access the Teamcenter Simulation functionality.<br />214110 - The input object is not valid.<br />215075 - Invalid Item Revision.<br />39004 - Unable to load the type.<br />7007 - Invalid Tag - the requested object does not exist.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "List of business objects for which the information of the attached files needs to be fetched. These business objects can be <b>Item</b>, <b>ItemRevision</b>, <b>Dataset</b>, <b>Folder</b> or <b>CAE0FileCollection</b>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputObjects"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2018_06::SimStructureManagement::GetFileDetailsResponse2",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.5.0",
        "description": "File Explorer view is a secondary view associated with Home, Product, Model and Analysis view  in CAE Manager. File Explorer view displays list of <b>ImanFile</b> objects which are associated with <b>ItemRevision</b> or <b>CAE0FileCollection</b> through <b>Dataset</b>. This Operation returns required information for File Explorer view.",
        "id": "CAE0::Soa::Internal::SimProc::_2018_06::SimStructureManagement::GetFileDetailsResponse2#CAE0::Soa::SimProc::SimStructureManagement::getFileDetails2#const,std::vector<Teamcenter::BusinessObject>,&",
        "name": "CAE0::Soa::SimProc::SimStructureManagement::getFileDetails2",
        "returnConst": "false",
        "returnDescription": "Method returns a GetFileDetailsResponse2 object.<br /><br />The following partial errors may be returned:<br />206815 - The license check failed. There is no valid license to access the Teamcenter Simulation functionality.<br />214110 - The input object is not valid.<br />215075 - Invalid Item Revision.<br />39004 - Unable to load the type.<br />7007 - Invalid Tag - the requested object does not exist.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of business objects for which the information of the attached files needs to be fetched. The supported business objects are <b>Item</b>, <b>ItemRevision</b>, <b>Dataset</b>, <b>Folder</b> and <b>CAE0FileCollection</b>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputObjects"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2020_12::SimStructureManagement::GetFileDetailsResponse3",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc13000.1.0",
        "description": "File Explorer view is a secondary view associated with Home, Product, Model and Analysis view in CAE Manager. File Explorer view displays a list of <b>ImanFile</b> objects which are associated with <b>ItemRevision</b> or <b>CAE0FileCollection</b> through <b>Dataset</b>. This operation returns required information for File Explorer view.",
        "id": "CAE0::Soa::Internal::SimProc::_2020_12::SimStructureManagement::GetFileDetailsResponse3#CAE0::Soa::SimProc::SimStructureManagement::getFileDetails3#const,std::vector<Teamcenter::BusinessObject>,&",
        "name": "CAE0::Soa::SimProc::SimStructureManagement::getFileDetails3",
        "returnConst": "false",
        "returnDescription": "The list of <i>FileDetails</i> including <b>ImanFile</b>, its associated <b>Dataset</b>, <b>ItemRevision</b> and folder path if the file present in the <b>CAE0FileCollection</b> object and a list of <b>ItemRevision</b> objects.<br />The following partial errors may be returned:<br />      7007 Invalid Tag - the requested object does not exist.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The input product structure root. Each line in the input product structure typically represents an Product or Item type.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "targetReferenceLine"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::ConfigurationContext",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "<b>ConfigurationContext</b> applied on the target model view.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "modelConfigurationContext"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Current Product line business Object which is of Product/Item type.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "productCurrentLine"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::ConfigurationContext",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "<b>ConfigurationContext</b> applied on the input product view.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "productConfigurationContext"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::TargetReferencesViewDataResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.4",
        "description": "CAE Manager provides an expand below option for the Target References View loaded structure. This operation will generate a tree structure containing Target References for each line from the specified Input structure. A target reference is the CAE Target Relationship between a CAE ModelRevision object and an ItemRevision object. The tree structure will represent an all level expanded data tree structure. This is done using TCXML Import Export queries on the server side.",
        "id": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::TargetReferencesViewDataResponse#CAE0::Soa::SimProc::SimStructureManagement::getTargetRefLineNodesExpandBelow#const,Teamcenter::BusinessObject,&$const,Teamcenter::ConfigurationContext,&$const,Teamcenter::BusinessObject,&$const,Teamcenter::ConfigurationContext,&",
        "name": "CAE0::Soa::SimProc::SimStructureManagement::getTargetRefLineNodesExpandBelow",
        "returnConst": "false",
        "returnDescription": "The operation returns a Target References view data response which will contain the Target Reference tree structure generated and service data with appropriate errors, if encountered. <br />The following partial errors may be returned:<br />206815 - The license check failed. There is no valid license to access the Teamcenter <br />Simulation functionality.<br />11001 - TcXML Import Export internal error.<br />11002 - Transfermode name passed for import/export is missing in the database.<br />11004 - Failed to create Log/FailedObjects file for import/export.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The input product structure root. Each line in the input product structure typically represents an Product or Item type.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "targetReferenceLine"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::ConfigurationContext",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "<b>ConfigurationContext</b> applied on the target model view.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "modelConfigurationContext"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Current Product line business Object which is of Product/Item type.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "productCurrentLine"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::ConfigurationContext",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "<b>ConfigurationContext</b> applied on the input product view.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "productConfigurationContext"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::vector<std::string>",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Column names  represent the internal names of the <b>ItemRevision</b> properties. For example:- object_name, object_desc.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "columnNames"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2016_03::SimStructureManagement::TargetReferencesViewDataResponse2",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.6",
        "description": "CAE Manager provides an expand below option for the Target References View loaded structure. This operation generates a tree structure containing Target References for each line from the specified Input structure. A target reference is the CAE Target Relationship between a <b>CAEModelRevision</b> object and an <b>ItemRevision</b> object. The tree structure will represent an all level expanded data tree structure. This is done using TCXML Import Export queries on the server side.",
        "id": "CAE0::Soa::Internal::SimProc::_2016_03::SimStructureManagement::TargetReferencesViewDataResponse2#CAE0::Soa::SimProc::SimStructureManagement::getTargetRefLineNodesExpandBelow2#const,Teamcenter::BusinessObject,&$const,Teamcenter::ConfigurationContext,&$const,Teamcenter::BusinessObject,&$const,Teamcenter::ConfigurationContext,&$const,std::vector<std::string>,&",
        "name": "CAE0::Soa::SimProc::SimStructureManagement::getTargetRefLineNodesExpandBelow2",
        "returnConst": "false",
        "returnDescription": "The operation returns a Target References view data response which will contain the Target Reference tree structure generated and service data with appropriate errors, if encountered. <br />The following partial errors may be returned:<br />206815 - The license check failed. There is no valid license to access the Teamcenter <br />Simulation functionality.<br />11001 - TcXML Import Export internal error.<br />11002 - Transfermode name passed for import/export is missing in the database.<br />11004 - Failed to create Log/FailedObjects file for import/export.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The input product structure root. Each line in the input product structure typically represents an Product or Item type.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "targetReferenceLine"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::ConfigurationContext",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "<b>ConfigurationContext</b> applied on the target model view.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "modelConfigurationContext"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Current Product line business Object which is of Product/Item type.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "productCurrentLine"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::ConfigurationContext",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "<b>ConfigurationContext</b> applied on the input product view.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "productConfigurationContext"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::TargetReferencesViewDataResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.4",
        "description": "CAE Manager provides option for showing one level structure in Target References View;. This operation will generate a tree structure containing Target References for each line from the specified Input structure. A target reference is the CAE Target Relationship between a CAE Model object and an Item object. This Operation will represent one level data tree structure. This is done using  Persistant Object Model queries on the server side.",
        "id": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::TargetReferencesViewDataResponse#CAE0::Soa::SimProc::SimStructureManagement::getTargetReferencesLineNodes#const,Teamcenter::BusinessObject,&$const,Teamcenter::ConfigurationContext,&$const,Teamcenter::BusinessObject,&$const,Teamcenter::ConfigurationContext,&",
        "name": "CAE0::Soa::SimProc::SimStructureManagement::getTargetReferencesLineNodes",
        "returnConst": "false",
        "returnDescription": "<ul><ul><li type=\"disc\">The Operation returns a Target References view data response which will contain the Target Reference tree structure generated and service data with appropriate errors, if encountered. The following partial errors may be returned:</li></ul></ul><br />206815 - The license check failed. There is no valid license to access the Teamcenter Simulation functionality.<br />516001 - An Enquiry internal error has occurred.<br />516003 - The Enquiry module has not been initialized.<br />516021 - An invalid value is given to the enquiry.<br />516027 - The enquiry module has run out of memory.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BOMLine",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Root <b>BOMLine</b> of the loaded model structure.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "modelRoot"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2017_05::SimStructureManagement::HighlightModelResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.3.0",
        "description": "This operation categorizes the loaded model structure into recycle, reused or unique underlying components which can be highlighted on the client as per the colors set in the preference.<br /><ul><ul><li type=\"disc\">A unique <b>CAEModelRevision</b> is the one that appears only once in the structure.</li><li type=\"disc\">A recycled <b>CAEModelRevision</b> is the one that appears more than once in the loaded structure</li><li type=\"disc\">A reused <b>CAEModelRevision</b> is the one that is used in structures other than the loaded model structure</li></ul></ul>",
        "id": "CAE0::Soa::Internal::SimProc::_2017_05::SimStructureManagement::HighlightModelResponse#CAE0::Soa::SimProc::SimStructureManagement::highlightModelStructure#const,Teamcenter::BOMLine,&",
        "name": "CAE0::Soa::SimProc::SimStructureManagement::highlightModelStructure",
        "returnConst": "false",
        "returnDescription": "Returns a structure containing a map of recycle, reused and unique bomlines. The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">43009 - Invalid value.</li><li type=\"disc\">515024 - The object is not valid. Possibly due to an earlier error not having been handled, uninitialized data or unloaded/deleted or otherwise invalid references. Check where the reference was obtained from and the validity of same in this operation.</li><li type=\"disc\">38041 - An invalid object instance is being used in conjunction with property.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of selected objects which needs to be processed to remove <b>DirectModel</b> <b>Dataset</b> objects attached with <b>IMAN_Rendering</b> relationship.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "selectedObjects"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2018_06::SimStructureManagement::RemoveDuplicateCadJtResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.5.0",
        "description": "A CAE (Computer Aided Engineering) BOM (Bill of Materials) when sent to a pre-processor such as Simcenter or any other 3rd party tool, the pre-processor could create new JT (Jupiter Tesselation) file in a <b>DirectModel</b> <b>Dataset</b> related to the <b>CAEModelRevision</b> objects with<b> IMAN_Rendering</b> relationship. The<i> Data Map</i> or <i>StructureMap</i> process used to create a CAE BOM from a CAD (Computer Aided Design) BOM can result in creation of <b>DirectModel</b> <b>Dataset</b> objects attached to the CAE BOM with <b>IMAN_Rendering</b> relationship. This leads to having duplicate <b>DirectModel</b> <b>Dataset</b> objects attached to a <b>CAEModelRevision</b> and cause issues in visualzing the CAE BOM.<br /><br />This operation identifies duplicate <b>DirectModel</b> <b>Dataset</b> objects attached to a <b>CAEModelRevision</b> with <b>IMAN_Rendering</b> relationship and deletes it. If the dataset is referenced by any other <b>ItemRevision</b>, then the <b>IMAN_Rendering</b> relationship between the selected <b>CAEModelRevision</b> and the <b>DirectModel</b> <b>Dataset</b> is removed.<br />If the selected object is a <b>BOMLine</b> object, then this operation will traverse all the child <b>BOMLine</b> objects to the underlying <b>CAEModelRevision</b> object for each child <b>BOMLine</b> object.",
        "id": "CAE0::Soa::Internal::SimProc::_2018_06::SimStructureManagement::RemoveDuplicateCadJtResponse#CAE0::Soa::SimProc::SimStructureManagement::removeDuplicateCadJt#const,std::vector<Teamcenter::BusinessObject>,&",
        "name": "CAE0::Soa::SimProc::SimStructureManagement::removeDuplicateCadJt",
        "returnConst": "false",
        "returnDescription": "The number of <b>CAEModelRevision</b> objects processed or skipped, the number of <b>DirectModel</b> <b>Dataset</b> objects deleted or cut and service data with appropriate errors, if encountered. The updated <b>CAEModelRevision</b> objects are added to the Updated list of the ServiceData.<br /><br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">9043 - Unable to delete dataset.</li><li type=\"disc\">35011 - The relation cannot be deleted.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Simulation Tool to be launched.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "simulationTool"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::LaunchInputInfo",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Array of LaunchInputInfo",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputObjects"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Working directory of the Simulation Tool",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "workingDirectory"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Launch type for the process. Valid values are \"LOCAL\", \"REMOTE\", \"SERVER\", \"LOCAL_DETACHED\".",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "launchType"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "ExportRuntimeOverrideInfo constaining runtime overrides for export configuration of Simulation Tool.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "exportRuntimeConfiguration"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "ImportRuntimeOverrideInfo constaining runtime overrides for export configuration of Simulation Tool.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "importRuntimeConfiguration"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.3",
        "description": "This operation launches the Simulation Tool as per the pre-defined configuration. The configuration contains details about the tool launch type, export and import rules for the files, notification, and cleanup. The inputs to the operation is an array of InputObjectStructure, each containing one or more business objects, name of the tool to be launched and the launch type. Based on the input values of parameters itemCreationSetting and datasetCreationSetting, ItemRevision and Dataset objects are created or modified.<br />It is a pre-requisite that the Simulation Administrator or user with DBA privileges must configure the Simulation Tool in CAEManager application of Teamcenter. To use this operation, the user should have either a simulation_author or rtt_author license.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimulationToolLaunch::executeSimulationToolLaunch#const,Teamcenter::BusinessObject,&$const,std::vector<CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::LaunchInputInfo>,&$const,std::string$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo",
        "name": "CAE0::Soa::SimProc::SimulationToolLaunch::executeSimulationToolLaunch",
        "returnConst": "false",
        "returnDescription": "Partial Errors are returned in the ServiceData when failed to import the utput data successfully:<br /><ul><ul><li type=\"disc\">206831 - The number of inputs to the tool is not between the minimum criteria and maximum criteria defined for the simulation tool. </li><li type=\"disc\">206835 - The input launch script path contains spaces, and cannot, therefore, be executed. </li><li type=\"disc\">206818 - The log file cannot be created. </li><li type=\"disc\">206819 - The working directory cannot be created. </li><li type=\"disc\">206820 - Invalid Simulation Tool. </li><li type=\"disc\">206821 - The primary input types are not defined. </li><li type=\"disc\">206822 - The primary input rule is not defined. </li><li type=\"disc\">206823 - The launch script is not defined. </li><li type=\"disc\">206824 - The input files for the Simulation Tool are not found. </li><li type=\"disc\">206825 - The working directory path cannot contain spaces.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Simulation Tool to be launched.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "simulationTool"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::LaunchInputInfo",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Array of LaunchInputInfo.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputObjects"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Working directory of the Simulation Tool.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "workingDirectory"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Launch type for the process. Valid values are \"LOCAL\", \"REMOTE\", \"SERVER\", \"LOCAL_DETACHED\".",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "launchType"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "ExportRuntimeOverrideInfo constaining runtime overrides for export configuration of Simulation Tool.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "exportRuntimeConfiguration"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "ImportRuntimeOverrideInfo constaining runtime overrides for export configuration of Simulation Tool.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "importRuntimeConfiguration"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::StructureContext",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Structure context information for pedigree capture in case of import tool launch.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "pedigreeCaptureInfo"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.5",
        "description": "This operation launches the Simulation Tool as per the pre-defined configuration. The configuration contains details about the tool launch type, export and import rules for the files, notification, and cleanup. The inputs to the operation is an array of InputObjectStructure, each containing one or more business objects, name of the tool to be launched and the launch type. Based on the input values of parameters itemCreationSetting and datasetCreationSetting, ItemRevision and Dataset objects are created or modified.<br />It is a pre-requisite that the Simulation Administrator or user with DBA privileges must configure the Simulation Tool in CAEManager application of Teamcenter. To use this operation, the user should have either a simulation_author or rtt_author license.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimulationToolLaunch::executeSimulationToolLaunch#const,Teamcenter::BusinessObject,&$const,std::vector<CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::LaunchInputInfo>,&$const,std::string$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo$const,std::vector<Teamcenter::StructureContext>,&",
        "name": "CAE0::Soa::SimProc::SimulationToolLaunch::executeSimulationToolLaunch",
        "returnConst": "false",
        "returnDescription": "Partial Errors are returned in the ServiceData when failed to import the utput data successfully:<br /><br />206831 - The number of inputs to the tool is not between the minimum criteria and maximum criteria defined for the simulation tool. <br />206835 - The input launch script path contains spaces, and cannot, therefore, be executed. <br />206818 - The log file cannot be created. <br />206819 - The working directory cannot be created. <br />206820 - Invalid Simulation Tool. <br />206821 - The primary input types are not defined. <br />206822 - The primary input rule is not defined. <br />206823 - The launch script is not defined. <br />206824 - The input files for the Simulation Tool are not found. <br />206825 - The working directory path cannot contain spaces.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BOMLine",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "This is an array of the tools to be cloned.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "toolBOMLines"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The name of the clone.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "cloneName"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.3",
        "description": "This operation involves the creation of the clones of the tool",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::cloneTool#const,std::vector<Teamcenter::BOMLine>,&$const,std::string,&",
        "name": "CAE0::Soa::SimProc::SimProcessConfigurationManagement::cloneTool",
        "returnConst": "false",
        "returnDescription": "Returns ServiceData",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Simulation Tool to be launched.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "simulationTool"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::LaunchInputInfo2",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Array of LaunchInputInfo2.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputObjects"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The directory where the current job runs and generates the output files.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "workingDirectory"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Launch type for the process. Valid values are &quot;LOCAL&quot;, &quot;REMOTE&quot;, &quot;SERVER&quot;, &quot;LOCAL_DETACHED&quot;.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "launchType"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Runtime overrides for export configuration of Simulation Tool.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "exportRuntimeConfiguration"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo2",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Runtime overrides for import configuration of Simulation Tool.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "importRuntimeConfiguration"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::StructureContext",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Structure context information for pedigree capture in case of import tool launch.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "pedigreeCaptureInfo"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.2.2",
        "description": "This operation launches the Simulation Tool as per the pre-defined configuration. The configuration contains details about the tool launch type, export and import rules for the files, notification, and cleanup. The inputs to the operation is an array of InputObjectStructure, each containing one or more business objects, name of the tool to be launched and the launch type. Based on the input values of parameters itemCreationSetting and datasetCreationSetting, <b>ItemRevision</b> and <b>Dataset</b> objects are created or modified.<br /><br />It is a pre-requisite that the Simulation Administrator or user with DBA privileges must configure the Simulation Tool in CAEManager application of Teamcenter. To use this operation, the user should have either a simulation_author or rtt_author license.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimulationToolLaunch::executeSimulationToolLaunch#const,Teamcenter::BusinessObject,&$const,std::vector<CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::LaunchInputInfo2>,&$const,std::string$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo$const,CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo2$const,std::vector<Teamcenter::StructureContext>,&",
        "name": "CAE0::Soa::SimProc::SimulationToolLaunch::executeSimulationToolLaunch",
        "returnConst": "false",
        "returnDescription": "Partial Errors are returned in the ServiceData when failed to import the utput data successfully:<br /><br />206831 - The number of inputs to the tool is not between the minimum criteria and maximum criteria defined for the simulation tool. <br />206835 - The input launch script path contains spaces, and cannot, therefore, be executed. <br />206818 - The log file cannot be created. <br />206819 - The working directory cannot be created. <br />206820 - Invalid Simulation Tool. <br />206821 - The primary input types are not defined. <br />206822 - The primary input rule is not defined. <br />206823 - The launch script is not defined. <br />206824 - The input files for the Simulation Tool are not found. <br />206825 - The working directory path cannot contain spaces.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "<b>CAE0ToolRevision</b> object containing the configuration of the Simulation tool to be launched.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "simulationTool"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::LaunchInputInfo2",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A List of <i>LaunchInputInfo2</i>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputObjects"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The directory where the current job runs and generates the output files.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "workingDirectory"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Launch type for the process. The valid values are :<br />LOCAL: In this type of launch, the Simulation tool is launched on the client machine and the Simulation results are imported back into Teamcenter.<br />SERVER: In a 4-Tier environment, the Simulation tool can be present on the machine where the Teamcenter server is set up. This type of launch invokes the Simulation tool on the server machine and imported the results back into Teamcenter.<br />REMOTE: This type of tool launch heppedns on the remote machine located in the network. The Simulation tool is launched on the remote machine and the results are imported back into Teamcenter. Remote launch requires the <i>Dispatcher</i> components to be installed on the remote machine.<br />LOCAL_DETACHED: This type of launch is similar to REMOTE launch with the exception that the Teamcenter Rich Application Client from where the Simulation tool is triggered can be closed but the launch of the Simulation tool on the remote machine continues and the results are imported back into Teamcenter.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "launchType"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Runtime overrides for export configuration of Simulation Tool.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "exportRunTimeConfiguration"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo2",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Runtime overrides for import configuration of Simulation Tool.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "importRuntimeConfiguration"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::StructureContext",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "<b>StructureContext</b> object containing the information for pedigree capture in case of import tool launch.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "pedigreeCaptureInfo"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::SimProc::_2017_11::SimulationToolLaunch::OptionalInputInfo",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A List of <i>OptionalInputInfo</i> whose inputObject&rsquo;s named references will be exported to the export directory after launching the Simulation tool.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "optionalInputInfo"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.4.0",
        "description": "This operation launches the Simulation Tool as per the pre-defined configuration. The configuration contains details about the tool launch type, export and import rules for the files, notification, and cleanup. The inputs to the operation is an array of <font face=\"courier\" height=\"10\">InputObjectStructure</font>, each containing one or more business objects, name of the tool to be launched and the launch type. Based on the input values of parameters <font face=\"courier\" height=\"10\">itemCreationSetting</font> and <font face=\"courier\" height=\"10\">datasetCreationSetting</font>, <b>ItemRevision</b> and <b>Dataset</b> objects are created or modified. For performing Simulation, the Simulation tool may require some additional data such as templates required by any port-processing application or process document supporting Simulation operation to be performed. This data can be provided through Optional Inputs configuration and is exported along with the input objects.<br /><br />It is a pre-requisite that the Simulation Administrator or user with database administrator privileges must configure the Simulation Tool in CAEManager Application of Teamcenter. To use this operation, the user should have either a simulation_author or rtt_author license.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimulationToolLaunch::executeSimulationToolLaunch#const,Teamcenter::BusinessObject,&$const,std::vector<CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::LaunchInputInfo2>,&$const,std::string$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo$const,CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo2$const,std::vector<Teamcenter::StructureContext>,&$const,std::vector<CAE0::Soa::SimProc::_2017_11::SimulationToolLaunch::OptionalInputInfo>,&",
        "name": "CAE0::Soa::SimProc::SimulationToolLaunch::executeSimulationToolLaunch",
        "returnConst": "false",
        "returnDescription": "Partial Errors are returned in the <font face=\"courier\" height=\"10\">ServiceData</font> when failed to import the utput data successfully:<br /><br />206831 - The number of inputs to the tool is not between the minimum criteria and maximum criteria defined for the simulation tool. <br />206835 - The input launch script path contains spaces, and cannot, therefore, be executed. <br />206818 - The log file cannot be created. <br />206819 - The working directory cannot be created. <br />206820 - Invalid Simulation Tool. <br />206821 - The primary input types are not defined. <br />206822 - The primary input rule is not defined. <br />206823 - The launch script is not defined. <br />206824 - The input files for the Simulation Tool are not found. <br />206825 - The working directory path cannot contain spaces.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "<b>CAE0ToolRevision</b> object containing the configuration of the Simulation tool to be launched.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "simulationTool"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::SimProc::_2020_01::SimulationToolLaunch::LaunchInputInfo3",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A List of <i>LaunchInputInfo3</i>. If invalid launch info is provided, operation reads <i>simulationTool</i> configuration to get default values of <i>inputObject</i>, <i>inputDataset</i>, <i>inputFile</i> and <i>inputWebLink</i>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputObjects"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::SimProc::_2020_01::SimulationToolLaunch::ExportFileOptions",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "List of <i>ExportFileOptions</i> which is to be used while exporting files in staging directory. If invalid values are provided, operation considers &ldquo;Skip&rdquo; as default option for export.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "fileExportOptions"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The directory where the current job runs and generates the output files.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "scratchDirectory"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The location under which user staging directory is created.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "userStagingLocation"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Name of the directory which is created under user staging location and where the file(s) is exported.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "userStagingDir"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Launch type for the process. The valid values are :<br />LOCAL: In this type of launch, the Simulation tool is launched on the client machine and the Simulation results are imported back into Teamcenter.<br />SERVER: In a 4-Tier environment, the Simulation tool can be present on the machine where the Teamcenter server is set up. This type of launch invokes the Simulation tool on the server machine and imported the results back into Teamcenter.<br />REMOTE: This type of tool launch heppedns on the remote machine located in the network. The Simulation tool is launched on the remote machine and the results are imported back into Teamcenter. Remote launch requires the <i>Dispatcher</i> components to be installed on the remote machine.<br />LOCAL_DETACHED: This type of launch is similar to REMOTE launch with the exception that the Teamcenter Rich Application Client from where the Simulation tool is triggered can be closed but the launch of the Simulation tool on the remote machine continues and the results are imported back into Teamcenter. If invalid values are provided for launch type, operation consider launch type as &ldquo;REMOTE&rdquo;.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "launchType"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Runtime overrides for export configuration of Simulation Tool. If invalid values are provided, operation reads <i>simulationTool</i> for default values.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "exportRunTimeConfiguration"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo2",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Runtime overrides for import configuration of Simulation Tool. If invalid values are provided, operation reads <i>simulationTool</i> for default values.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "importRuntimeConfiguration"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::StructureContext",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "<b>StructureContext</b> object containing the information for pedigree capture in case of import tool launch.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "pedigreeCaptureInfo"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::SimProc::_2017_11::SimulationToolLaunch::OptionalInputInfo",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A List of <i>OptionalInputInfo</i> whose inputObject&rsquo;s named references will be exported to the export directory after launching the Simulation tool.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "optionalInputInfo"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc12000.3.0",
        "description": "This operation launches the Simulation Tool as per the pre-defined configuration. The configuration contains details about the tool launch type, export and import rules for the files, notification, and cleanup. The inputs to the operation is an array of <i>inputObjects</i>, each containing one or more business objects, <i>simulationTool</i> to be launched and the <i>launchType</i>. Based on the input values of parameters <i>itemCreationSetting</i> and <i>datasetCreationSetting</i>, <b>ItemRevision</b> and <b>Dataset</b> objects are created or modified. This operation also takes <i>userStagingLocation</i> and <i>userStagingDir</i> which is used if tool is configured to use staging directory. For performing Simulation, the Simulation tool may require some additional data such as templates required by any port-processing application or process document supporting Simulation operation to be performed. This data can be provided through Optional Inputs configuration and is exported along with the input objects.<br /><br />It is a pre-requisite that the Simulation Administrator or user with database administrator privileges must configure the Simulation Tool in CAEManager Application of Teamcenter. To use this operation, the user should have either a simulation_author or rtt_author license.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimulationToolLaunch::executeSimulationToolLaunch#const,Teamcenter::BusinessObject,&$const,std::vector<CAE0::Soa::SimProc::_2020_01::SimulationToolLaunch::LaunchInputInfo3>,&$const,std::string$const,std::string$const,std::string$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ExportConfigRuntimeOverrideInfo,&$const,CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo2,&$const,std::vector<Teamcenter::StructureContext>,&$const,std::vector<CAE0::Soa::SimProc::_2017_11::SimulationToolLaunch::OptionalInputInfo>,&$const,std::vector<CAE0::Soa::SimProc::_2020_01::SimulationToolLaunch::ExportFileOptions>,&",
        "name": "CAE0::Soa::SimProc::SimulationToolLaunch::executeSimulationToolLaunch",
        "returnConst": "false",
        "returnDescription": "Partial Errors are returned in the ServiceData when failed to import the utput data successfully:<br /><br /><ul><ul><li type=\"disc\">206831 - The number of inputs to the tool is not between the minimum criteria and maximum criteria defined for the simulation tool. </li><li type=\"disc\">206835 - The input launch script path contains spaces, and cannot, therefore, be executed. </li><li type=\"disc\">206906 - The scratch directory cannot be created.</li><li type=\"disc\">206821 - The primary input types are not defined. </li><li type=\"disc\">206823 - The launch script is not defined. </li><li type=\"disc\">206907 - The user staging directory cannot be created.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The name of exported PLM XML file.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "plmxmlFileName"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The transfer mode name used for export. The supported transfer modes are &ldquo;CAEConfiguredDataFilesExportDefault&rdquo;, &ldquo;ConfiguredDataExportDefault&rdquo; and &ldquo;ConfiguredDataFilesExportDefault&rdquo;.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "transferMode"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of objects which need to be exported. The supported object types are: <b>ItemRevision</b>, <b>Dataset</b> and <b>Folder</b>.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "objectsToExport"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "bool",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "If true, exported objects will be checked out; otherwise, exported objects will not be checked out.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "checkOutOnExport"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "User defined name of the tool. This is the user defined name of the <b>CAE0ToolRevision</b> object.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "toolName"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of FMS file tickets for the checked-out and not checked-out objects.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "logFileTickets"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2020_04::SimulationToolLaunch::NameAndValue",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of the session options to control export behavior as name-value pairs. The supported options are: <i>&ldquo;PIE_Export_ImanFile_Tickets&rdquo;</i>, <i>&ldquo;PIE_Export_PLMD_Tickets&rdquo;</i>. If <i>&ldquo;PIE_Export_ImanFile_Tickets&rdquo;</i> is true then PLMXML returns the <b>ImanFile</b> tickets for the named references that are exported. If <i>&ldquo;PIE_Export_PLMD_Tickets&rdquo;</i> is true then PLMXML returns the *.plmd file tickets for the named references that are exported. This is used by the Data Share Manager (DSM) to perform the download.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "sessionOptions"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2017_05::SimulationToolLaunch::ExportObjectsToPLMXMLResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc12000.4.0",
        "description": "This operation exports the objects using PLMXML and checks out the exported objects. The simulation tool configured with PLMXML input rule and &ldquo;Check Out Exported Objects&rdquo; option requires that exported objects need to be checked out. It will generate a PLMXML file and a export log file. During the PLMXML export operation, if the Data Share Manager (DSM) is enabled, then system uses the Data Share Manager (DSM) to perform the download of files.",
        "id": "CAE0::Soa::Internal::SimProc::_2017_05::SimulationToolLaunch::ExportObjectsToPLMXMLResponse#CAE0::Soa::SimProc::SimulationToolLaunch::exportAndCheckoutPLMXMLWithDSM#const,std::string$const,std::string$const,std::vector<Teamcenter::BusinessObject>,&$bool$const,std::string$const,std::vector<std::string>,&$const,std::vector<CAE0::Soa::Internal::SimProc::_2020_04::SimulationToolLaunch::NameAndValue>,&",
        "name": "CAE0::Soa::SimProc::SimulationToolLaunch::exportAndCheckoutPLMXMLWithDSM",
        "returnConst": "false",
        "returnDescription": "<b>ExportObjectsToPLMXMLResponse</b> &ndash; This response holds the list of  FMS file tickets for the exported XML file and the log files, the list of file tickets for the dataset named reference files, and any partial failures.<br /><br />The following partial errors may be returned:<br /><br />203331 - No Target Object Found.<br />203421 - The input transfer mode is invalid.<br />203431 - The input XML file name does not have extension .xml or .plmxml.<br />203432 - The input xml file name is missing.<br />203484 - The specified Transfer Mode is not for PLM XML export purpose. Please select a proper Transfer Mode and try again.<br />203486 - The input XML file name contains invalid characters.<br />203488 - The value of input session option is invalid.<br />Other failure in the whole export process.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of <b>Mat1MaterialRevision</b> objects to be exported. Mandatory parameter to call the operation and is validated in client and server side.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "materialsObjects"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Material Export File Name with extension. Mandatory parameter to call the operation and is validated in client and server side.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "materialExportFileName"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Material Export Filter Name specified. Empty value means no Export Filter is specified. Optional parameter to call the operation and is validated in client and server side if specified.<br />Valid Values are:<br />&quot;NX MatML&quot;<br />&quot;Catia MatML&quot;<br />&quot;Ansys MatML&quot;<br />&quot;Simcenter STAR-CCM+ MatML&quot;",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "materialExportFilterName"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2020_04::SimulationToolLaunch::ExportMaterialResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc12000.4.0",
        "description": "This operation exports a list of <b>Mat1MaterialRevision</b> in MatML format into a file named as <i>materialExportFileName</i>   applying the Export Filter specified in <i>materialExportFilterName</i>. If <i>materialExportFilterName</i> is not specified, the list of <b>Mat1MaterialRevision</b> is exported without applying any Export Filter. Export Filter specifies the format in which the material is exported for a specific solver like ANSYS, Simcenter Nastran, etc.",
        "id": "CAE0::Soa::Internal::SimProc::_2020_04::SimulationToolLaunch::ExportMaterialResponse#CAE0::Soa::SimProc::SimulationToolLaunch::exportMaterialsForToolLaunch#const,std::vector<Teamcenter::BusinessObject>,&$const,std::string,&$const,std::string,&",
        "name": "CAE0::Soa::SimProc::SimulationToolLaunch::exportMaterialsForToolLaunch",
        "returnConst": "false",
        "returnDescription": "Returns ExportMaterialResponse containing exported <i>materialExportFile</i> and <i>materialExportLogFile</i> <b>ImanFile</b> object. The following partial errors may be returned:<br /><br /><ul><ul><li type=\"disc\">48033 - Invalid type for item Item Revision</li><li type=\"disc\">206910 - The File Name is invalid</li><li type=\"disc\">206911 - The Material Export Filter name is invalid</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The name of exported PLMXML file.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "plmxmlFileName"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The transfer mode name used for export. The supported transfer modes are &ldquo;CAEConfiguredDataFilesExportDefault&rdquo;, &ldquo;ConfiguredDataExportDefault&rdquo; and &ldquo;ConfiguredDataFilesExportDefault&rdquo;.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "transferMode"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of objects which need to be exported.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "objectsToExport"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "bool",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "If true, exported objects will be checked out; otherwise, exported objects will not be checked out.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "checkOutOnExport"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The simulation tool name for which export is performed.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "toolName"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::vector<std::string>",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of FMS file tickets for the checked-out and not checked-out objects.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "logFileTickets"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2017_05::SimulationToolLaunch::ExportObjectsToPLMXMLResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.3.0",
        "description": "Simulation tool configured with PLMXML input rule and &ldquo;Check Out Exported Objects&rdquo; option requires that exported objects need to be checked out. This operation exports the objects using PLMXML and checks out the exported objects. It will generate a PLMXML file and a export log file.",
        "id": "CAE0::Soa::Internal::SimProc::_2017_05::SimulationToolLaunch::ExportObjectsToPLMXMLResponse#CAE0::Soa::SimProc::SimulationToolLaunch::exportObjectsToPLMXMLForToolLaunch#const,std::string$const,std::string$const,std::vector<Teamcenter::BusinessObject>,&$bool$const,std::string$const,std::vector<std::string>,&",
        "name": "CAE0::Soa::SimProc::SimulationToolLaunch::exportObjectsToPLMXMLForToolLaunch",
        "returnConst": "false",
        "returnDescription": "<b>ExportObjectsToPLMXMLResponse</b> - This response holds the list of FMS file tickets for the exported XML file and the log files, the list of file tickets for the dataset named reference files, and any partial failures.<br /><br />The following partial errors may be returned:<br /><br /><ul><ul><li type=\"disc\">203485 &ndash; The input XML file name contains full file path</li><li type=\"disc\">203485 &ndash; The input XML file name does not have extension .xml or .plmxml.</li><li type=\"disc\">203484 - The specified Transfer Mode is not for PLM XML export purpose. Please select a proper Transfer Mode and try again.</li><li type=\"disc\">203454 &ndash; An error has occurred during the processing of some objects.</li><li type=\"disc\">Other failure in the whole export process.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimulationToolLaunch::ToolsForStructureMapResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.6.0",
        "description": "This operation gathers the <b>CAE0Tool</b> objects which are configured for <b>CAEModelRevision</b> or its sub-types as input.  The <b>CAE0ToolRevision</b> objects holds the configuration to launch a CAE (Computer Aided Engineering) tool which is used to perform pre and post processing operations on a Simulation data. A CAE tool is launched on the output structure that the StructureMap operation generates. The configuration defined by the <b>CAE0ToolRevision</b> object specifies the launch type which the CAE tool. The launch types can be <i>&ldquo;Local</i>&rdquo; where the CAE tool can be launched on the system where the Teamcenter client is running; <i>&ldquo;Server&rdquo;</i> where CAE tool can be launched on the system where the Teamcenter Server is installed and <i>&ldquo;Remote&rdquo;</i> where the CAE tool can be launched through dispatcher services.",
        "id": "CAE0::Soa::Internal::SimProc::_2018_11::SimulationToolLaunch::ToolsForStructureMapResponse#CAE0::Soa::SimProc::SimulationToolLaunch::getValidToolsForStructureMap",
        "name": "CAE0::Soa::SimProc::SimulationToolLaunch::getValidToolsForStructureMap",
        "returnConst": "false",
        "returnDescription": "The <b>CAE0Tool</b> objects which has at least a released revision and their supported launch types.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The FMS file ticket for the input xml file to be imported.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "xmlFileTicket"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The list of FMS file tickets for dataset named reference files.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "namedRefFileTickets"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The list of FMS file tickets for the log files.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "logFileTickets"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The transfer mode name used for import. The supported transfer modes are &ldquo;CAE_incremental_import&rdquo;, &ldquo;ConfiguredDataImportDefault&rdquo; and &ldquo;incremental_import&rdquo;.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "transferMode"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "bool",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "If true, imported objects will be checked in; otherwise, imported objects will not be checked in.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "checkInOnImport"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "bool",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "If true, check-out will be cancelled; otherwise, objects will remain checked-out.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "performCancelCheckOut"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2020_04::SimulationToolLaunch::NameAndValue",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of the session options to control import behavior as name-value pairs. The supported options are: &ldquo;<i>PIE_IMPORT_WITH_DSM</i>&rdquo;, &ldquo;<i>PIE_IMPORT_CLIENT_FILE_PATH</i>&rdquo;. If &ldquo;<i>PIE_IMPORT_WITH_DSM</i> &rdquo; is true and &ldquo; <i>PIE_IMPORT_CLIENT_FILE_PATH</i>&rdquo; is set with client side full path for dataset named reference files folder, then PLMXML returns the *.plmd file tickets for the named references that are imported. This is used by the Data Share Manager (DSM) to perform the upload.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "sessionOptions"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2020_04::SimulationToolLaunch::ImportObjectsFromPLMXMLResponse2",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc12000.4.0",
        "description": "Simulation tool configured with PLMXML output rule and &ldquo;Check In Imported Objects&rdquo; option requires that imported objects need to be checked in. This operation imports the objects using PLMXML and checks in the imported objects. The XML file should be uploaded to the transient volume before calling this operation. If Datashare Manager(DSM) is enabled, then the system uses the DSM to upload the named reference files for the datasets otherwise the named reference files for datasets should be uploaded to the transient volume before the calling of this operation.",
        "id": "CAE0::Soa::Internal::SimProc::_2020_04::SimulationToolLaunch::ImportObjectsFromPLMXMLResponse2#CAE0::Soa::SimProc::SimulationToolLaunch::importAndCheckinPLMXMLwithDSM#const,std::string,&$const,std::vector<std::string>,&$const,std::vector<std::string>,&$const,std::string,&$bool$bool$const,std::vector<CAE0::Soa::Internal::SimProc::_2020_04::SimulationToolLaunch::NameAndValue>,&",
        "name": "CAE0::Soa::SimProc::SimulationToolLaunch::importAndCheckinPLMXMLwithDSM",
        "returnConst": "false",
        "returnDescription": "<b>ImportObjectsFromPLMXMLResponse2</b> &ndash; This response holds the FMS file tickets for the log files, the list of *.plmd file tickets for the dataset named refernce files, and any partial failures.<br /><br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">203474 - The input file name is too long.</li><li type=\"disc\">203485 - The specified Transfer Mode  is not for PLM XML import purpose. Please select a proper Transfer Mode and try again.</li><li type=\"disc\">203454 - An error has occurred during the processing of some objects.</li><li type=\"disc\">203488 - The value of input session option is invalid.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The FMS file ticket for the input xml file to be imported.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "xmlFileTicket"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::vector<std::string>",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The list of FMS file tickets for dataset named reference files.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "namedRefFileTickets"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::vector<std::string>",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The list of FMS file tickets for the log files.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "logFileTickets"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The transfer mode name used for import. The supported transfer modes are &ldquo;CAE_incremental_import&rdquo;, &quot;ConfiguredDataImportDefault&quot; and &ldquo;incremental_import&rdquo;.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "transferMode"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "bool",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "If true, imported objects will be checked in; otherwise, imported objects will not be checked in.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "checkInOnImport"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "bool",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "If true, check-out will be cancelled; otherwise, objects will remain checked-out.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "performCancelCheckOut"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "CAE0::Soa::Internal::SimProc::_2017_05::SimulationToolLaunch::ImportObjectsFromPLMXMLResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.3.0",
        "description": "Simulation tool configured with PLMXML output rule and &ldquo;Check In Imported Objects&rdquo; option requires that imported objects need to be checked in. This operation imports the objects using PLMXML and checks in the imported objects. The XML file and the named reference files for datasets should be uploaded to the transient volume before the calling of this operation.",
        "id": "CAE0::Soa::Internal::SimProc::_2017_05::SimulationToolLaunch::ImportObjectsFromPLMXMLResponse#CAE0::Soa::SimProc::SimulationToolLaunch::importObjsFromPLMXMLForToolLaunch#const,std::string,&$const,std::vector<std::string>,&$const,std::vector<std::string>,&$const,std::string$bool$bool",
        "name": "CAE0::Soa::SimProc::SimulationToolLaunch::importObjsFromPLMXMLForToolLaunch",
        "returnConst": "false",
        "returnDescription": "<b>ImportObjectsFromPLMXMLResponse</b> &ndash; This response holds the FMS file tickets for the log files, and any partial failures.<br /><br />The following partial errors may be returned:<br /><br /><ul><ul><li type=\"disc\">203474 &ndash; The input file name is too long.</li><li type=\"disc\">203485 - The specified Transfer Mode is not for PLM XML import purpose. Please select a proper Transfer Mode and try again.</li><li type=\"disc\">203454 &ndash; An error has occurred during the processing of some objects.</li><li type=\"disc\">203302 &ndash; Insufficent privilege to perform this Import operation.</li><li type=\"disc\">203412 &ndash; Closure rule could not be found.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Simulation Tool whose launch data need to be imported.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "simulationTool"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Directory from where the data has to be imported.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "workingDirectory"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Teamcenter object on which Simulation Tool is launched.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputObject"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Path of the file containing the created objects information.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "xmlFileName"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "ImportRuntimeOverrideInfo constaining runtime overrides for export configuration of Simulation Tool.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "importRuntimeConfiguration"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.3",
        "description": "This internal operation imports the output data generated in the working directory as a result of execution of Simulation Tool launch into Teamcenter. Creation or modification of the Teamcenter objects required to hold the imported data is determined by the arguments itemCreationSetting and datasetCreationSetting. Naming of the created Teamcenter objects is controlled by passing the desired naming patterns as argument outputNamePatterns.<br />It is pre-requisite that the Simulation Administrator or user with DBA privileges must configure the Simulation Tool before executing this service.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimulationToolLaunch::importSimulationToolLaunchOutputs#const,Teamcenter::BusinessObject,&$const,std::string$const,Teamcenter::BusinessObject,&$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo",
        "name": "CAE0::Soa::SimProc::SimulationToolLaunch::importSimulationToolLaunchOutputs",
        "returnConst": "false",
        "returnDescription": "Partial Errors are returned in the ServiceData when failed to import the utput data successfully:<br /><ul><ul><li type=\"disc\">206805  - Unable to open the log file.</li><li type=\"disc\">206806 -  Unable to find the result files in the working directory.</li><li type=\"disc\">206810 - Invalid Simulation Tool.</li><li type=\"disc\">206807 - One or more datasets were either not created or created with one or more missing named references.</li><li type=\"disc\">206815 - The license check failed. There is no valid license to access the Teamcenter Simulation functionality.</li><li type=\"disc\">206817 - No output rules are configured for data import.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BOMLine",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of <b>BOMLine</b> objects of the tools that need to be cloned.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "toolBOMLines"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Name of the clone to be created. This is a mandatory parameter.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "cloneName"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Item ID of the clone to be created. If no value is provided, the value is auto-generated as per the <i>Naming Rule </i>attached to the <i>item_id</i> property of the <b>CAE0Tool</b> business object.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "cloneItemId"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Item Revision ID of the clone to be created. If no value is provided, the value is auto-generated as per the <i>Revision Naming</i> <i>Rule</i> attached to the <i>item_revision_id</i> property of the <b>CAE0ToolRevision</b> business object.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "cloneItemRevId"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.2.2",
        "description": "This operation clones a selected tool object in the <b>BOMWindow</b>.<br />SimTool1<br /><ul><ul><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SimTool1_Child1</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SimTool1_Child2</li><li type=\"disc\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; SimTool1_Child3</li></ul></ul><br /><br />In the figure shown above, the user can select SimTool1 for clone. A dialog box comes up to ask the user for the new name, ID, and revision ID for the clone. After the use provides the new name, ID and revision ID and hits Ok on the dialog, the User Interface is refreshed to show the new clone created under SimTool1&rsquo;s parent with the user-provided name. The new object will have three children with the same name as SimTool1 but different Item id&rsquo;s. If a tab was SimTool1&rsquo;s own tab, a corresponding new tab will be created for the clone. If a tab was inherited, new clone will inherit the same tab from SimTool1&rsquo;s parent.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::cloneTool2#const,std::vector<Teamcenter::BOMLine>,&$const,std::string,&$const,std::string,&$const,std::string,&",
        "name": "CAE0::Soa::SimProc::SimProcessConfigurationManagement::cloneTool2",
        "returnConst": "false",
        "returnDescription": "The created objects are returned. The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">51003   The current user does not have write access to the selected object.</li><li type=\"disc\">51007   The clone operation has failed.</li><li type=\"disc\">46062 The BOM cannot be expanded because it contains an unreadable item.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Simulation Tool whose launch data need to be imported.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "simulationTool"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Directory from where the data has to be imported.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "workingDirectory"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Teamcenter object on which Simulation Tool is launched.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputObject"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Path of the file containing the created objects information.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "xmlFileName"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "ImportRuntimeOverrideInfo constaining runtime overrides for export configuration of Simulation Tool.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "importRuntimeConfiguration"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Tool launch Job ID string.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "jobID"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.5",
        "description": "This internal operation imports the output data generated in the working directory as a result of execution of Simulation Tool launch into Teamcenter. Creation or modification of the Teamcenter objects required to hold the imported data is determined by the arguments itemCreationSetting and datasetCreationSetting. Naming of the created Teamcenter objects is controlled by passing the desired naming patterns as argument outputNamePatterns.<br />It is pre-requisite that the Simulation Administrator or user with DBA privileges must configure the Simulation Tool before executing this service. <br /><br />Use Case:<br />Use Case 1: Import Simulation Objects with As Needed Item Creation Setting.<br />When executed with itemCreationSetting as \"As_Needed\", no new Item will be created if there exists one as per the Simulation Tool output configuration. If found none, new Item will be created as per the Simulation Tool output configuration.<br /><br />Use Case 2: Import Simulation Objects with Always Item Creation Setting.<br />When executed with itemCreationSetting as \"Always\", new Item will be created as per the Simulation Tool output configuration.<br /><br />Use Case 3: Import Simulation Objects with Never Item Creation Setting.<br />When this operation is executed with itemCreationSetting as \"Never\" and if no existing Item is found as per the Simulation Tool output configuration, no new Item will be created.<br /><br />Use Case 4: Import Simulation Objects with As Needed Dataset Creation Setting.<br />When executed with datasetCreationSetting as \"As_Needed\", no new Dataset will be created if there exists one as per the Simulation Tool output configuration. If found none, new Dataset will be created as per the Simulation Tool output configuration.<br /><br />Use Case 5: Import Simulation Objects with Always Dataset Creation Setting.<br />When executed with datasetCreationSetting as \"Always\", new Dataset will be created as per the process Simulation Tool configuration.<br /><br />Use Case 6: Import Simulation Objects with Never Dataset Creation Setting.<br />When executed with datasetCreationSetting as \"Never\" and if no existing Dataset is found as per the process output configuration, no new Dataset will be created.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimulationToolLaunch::importSimulationToolLaunchOutputs#const,Teamcenter::BusinessObject,&$const,std::string$const,Teamcenter::BusinessObject,&$const,std::string$const,CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo$const,std::string",
        "name": "CAE0::Soa::SimProc::SimulationToolLaunch::importSimulationToolLaunchOutputs",
        "returnConst": "false",
        "returnDescription": "Partial Errors are returned in the ServiceData when failed to import the utput data successfully:<br /><br />206805 - Unable to open the log file.<br />206806 - Unable to find the result files in the working directory.<br />206810 - Invalid Simulation Tool.<br />206807 - One or more datasets were either not created or created with one or more missing named references.<br />206815 - The license check failed. There is no valid license to access the Teamcenter Simulation functionality.<br />206817 - No output rules are configured for data import.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Simulation Tool whose launch data need to be imported.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "simulationTool"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Directory from where the data has to be imported.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "workingDirectory"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Teamcenter::BusinessObject",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Teamcenter object on which Simulation Tool is launched.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputObject"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Path of the file containing the created objects information.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "xmlFileName"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo2",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "ImportRuntimeOverrideInfo containing runtime overrides for import configuration of Simulation Tool.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "importRuntimeConfiguration"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "std::string",
                "qualifier": ""
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Tool launch Job ID string.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "jobID"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.2.2",
        "description": "This internal operation imports the output data generated in the working directory as a result of execution of Simulation Tool launch into Teamcenter. Creation or modification of the Teamcenter objects required to hold the imported data is determined by the arguments itemCreationSetting and datasetCreationSetting. Naming of the created Teamcenter objects is controlled by passing the desired naming patterns as argument outputNamePatterns.<br /><br />It is pre-requisite that the Simulation Administrator or user with DBA privileges must configure the Simulation Tool before executing this service.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimulationToolLaunch::importSimulationToolLaunchOutputs#const,Teamcenter::BusinessObject,&$const,std::string$const,Teamcenter::BusinessObject,&$const,std::string$const,CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch::ImportConfigRuntimeOverrideInfo2$const,std::string",
        "name": "CAE0::Soa::SimProc::SimulationToolLaunch::importSimulationToolLaunchOutputs",
        "returnConst": "false",
        "returnDescription": "Partial Errors are returned in the ServiceData when failed to import the utput data successfully:<br /><br />206805 - Unable to open the log file.<br />206806 - Unable to find the result files in the working directory.<br />206810 - Invalid Simulation Tool.<br />206807 - One or more datasets were either not created or created with one or more missing named references.<br />206815 - The license check failed. There is no valid license to access the Teamcenter Simulation functionality.<br />206817 - No output rules are configured for data import.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolConfigInfo",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Represents the array of the tool objects sent to the SOA",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "toolObjects"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.3",
        "description": "This operation creates , updates the tool objects ( it also takes care of the deletion of the tab objects).",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::createOrUpdateToolObjects#const,std::vector<CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolConfigInfo>,&",
        "name": "CAE0::Soa::SimProc::SimProcessConfigurationManagement::createOrUpdateToolObjects",
        "returnConst": "false",
        "returnDescription": "Returns servicedata",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2016_05::SimProcessConfigurationManagement::CAEToolConfigInfo2",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of data structure <i>CAEToolConfig2</i> object structure that holds the information for the tool to be created or updated",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "toolObjects"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc11000.2.2",
        "description": "This operation creates the Simulation Tool objects from the input configuration passed as parameter <b>CAEToolConfigInfo2</b>. It also handles the updating configuration of the Simulation Tool object. It also deletes the tab objects as a part of the update operation when tool inherits from the parent.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::createOrUpdateToolObjects2#const,std::vector<CAE0::Soa::Internal::SimProc::_2016_05::SimProcessConfigurationManagement::CAEToolConfigInfo2>,&",
        "name": "CAE0::Soa::SimProc::SimProcessConfigurationManagement::createOrUpdateToolObjects2",
        "returnConst": "false",
        "returnDescription": "The created objects are returned. The following partial errors may be returned:<br /><br /><ul><ul><li type=\"disc\">51003   The current user does not have write access to the object.</li><li type=\"disc\">51007   Failed to create the Simulation Tool.</li><li type=\"disc\">63392   You do not have sufficient privileges on this object.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The list of tool objects to be deleted.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "toolsToBDeleted"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "bool",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "The variable that determines if the item and all the revisions should be deleted.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "shouldDeleteItemAndAllRev"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.3",
        "description": "This operation deletes the tool object and the references attached to it.",
        "id": "Teamcenter::Soa::Server::ServiceData#CAE0::Soa::SimProc::SimProcessConfigurationManagement::deleteTool#const,std::vector<Teamcenter::BusinessObject>,&$bool",
        "name": "CAE0::Soa::SimProc::SimProcessConfigurationManagement::deleteTool",
        "returnConst": "false",
        "returnDescription": "Returns ServiceData",
        "returnFreeMemory": "false",
        "static": "false"
      }
    ],
    "ServiceInterface": [
      {
        "createRelease": "tc11000.6.0",
        "dependencies": "",
        "description": "The Simulation DataManagement service allows clients to create and expand Teamcenter data. Specifically there are operations to support creating the CAE (Computer Aided Engineering) objects (<b>CAEItem</b>, <b>CAEItemRevision</b> and <b>Dataset</b> objects specific to CAE).<br />This services supports the following use cases:<br /><ul><ul><li type=\"disc\">Create of CAE objects (<b>CAEItem</b>/<b>CAEItemRevision</b>/<b>Dataset</b>) as well as the accompanying data such as named references and ancillary forms</li><li type=\"disc\">Retrieving folder contents that CAE integrations are typically interested in: <b>CAEItem</b> objects, <b>CAEItemRevision</b> objects, and <b>Dataset</b> objects specific to CAE.</li></ul></ul>",
        "libraryName": "CAE0SoaSimProc",
        "name": "SimDataManagement",
        "namespace": "CAE0::Soa::SimProc",
        "serviceLibraryRef": ""
      },
      {
        "createRelease": "tc10000.1.3",
        "dependencies": "",
        "description": "This service contains the SOAs for creation, update, clone, delete, paste, revise and release operations on the tool objects and the tab objects associated with them. This is also used to retrieve the CAE Configuration objects and get the simulation dashboard data from the dashboard configuration objects.",
        "libraryName": "CAE0SoaSimProc",
        "name": "SimProcessConfigurationManagement",
        "namespace": "CAE0::Soa::SimProc",
        "serviceLibraryRef": ""
      },
      {
        "createRelease": "tc10000.1.0",
        "dependencies": "",
        "description": "The SimPorcessStatusManagement service provides operations to create and manage the Simulation Process Status objects.",
        "libraryName": "CAE0SoaSimProc",
        "name": "SimProcessStatusManagement",
        "namespace": "CAE0::Soa::SimProc",
        "serviceLibraryRef": ""
      },
      {
        "createRelease": "tc10000.1.4",
        "dependencies": "SimStructureManagement",
        "description": "This class holds the operations for the CAE Simulation Module functionality. All the TcSim Structure Management related operations should be added to this class.",
        "libraryName": "CAE0SoaSimProc",
        "name": "SimStructureManagement",
        "namespace": "CAE0::Soa::SimProc",
        "serviceLibraryRef": ""
      },
      {
        "createRelease": "tc10000.1.3",
        "dependencies": "",
        "description": "This service provides functionalities related to launch of Simulation Tool.",
        "libraryName": "CAE0SoaSimProc",
        "name": "SimulationToolLaunch",
        "namespace": "CAE0::Soa::SimProc",
        "serviceLibraryRef": ""
      }
    ],
    "Struct": [
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Name of the column configured.",
            "name": "columnName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Value of the column. The calling client is responsible for converting &ldquo;columnValue&rdquo; string to the different data types (int, float, date etc) as per property type. Property type is specified in the field &ldquo;columnValueType&rdquo;.",
            "name": "columnValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Type of the column configured.",
            "name": "columnType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Value type of the column. Supported values are: &ldquo;bool&rdquo;, &ldquo;char&rdquo;, &ldquo;date&rdquo;, &ldquo;double&rdquo;, &ldquo;int&rdquo;, &ldquo;string&rdquo;, &ldquo;business object&rdquo; and &ldquo;unknown&rdquo;.",
            "name": "columnValueType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Image value to be shown in column.",
            "name": "imageValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Dataset"
              }
            ],
            "description": "<b>Dataset</b> component to be shown in column.",
            "name": "datasetComp"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::StructureContext"
              }
            ],
            "description": "<b>StructureContext</b> Object to be shown in column.",
            "name": "pedigreeObject"
          }
        ],
        "createRelease": "tc11000.2.3",
        "description": "This structure holds the query result for single column.",
        "isPublished": "false",
        "name": "CAEAnalysisDashboardColumnInfo",
        "namespace": "CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Name of the column configured.",
            "name": "heading"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Dataset type.",
            "name": "dsType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "Number of files found.",
            "name": "foundCount"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "Number of files searched.",
            "name": "totalCount"
          }
        ],
        "createRelease": "tc11000.2.3",
        "description": "This structure holds the file summary information to be shown in Analysis Dashboard.",
        "isPublished": "false",
        "name": "CAEAnalysisDashboardFileStatus",
        "namespace": "CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
              }
            ],
            "description": "Properties name value struct for tool object.",
            "name": "toolPropValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
              }
            ],
            "description": "Property name value struct for general configuration tab.",
            "name": "generalConfigTabPropValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
              }
            ],
            "description": "Property name value struct for general configuration tab of Parent Tool.",
            "name": "parentGeneralConfigTabPropValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
              }
            ],
            "description": "Property name value struct for launch property configuration tab of Parent Tool.",
            "name": "parentLaunchPropConfigTabPropValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
              }
            ],
            "description": "Property name value struct for environment variable configuration tab of Parent Tool.",
            "name": "parentEnvVarConfigTabPropValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
              }
            ],
            "description": "Property name value struct for file input configuration tab of Parent Tool.",
            "name": "parentInputConfigTabPropValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
              }
            ],
            "description": "Property name value struct for output configuration tab of Parent Tool.",
            "name": "parentOutputConfigTabPropValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
              }
            ],
            "description": "Property name value struct for input parameter configuration tab of Parent Tool.",
            "name": "parentInputParamConfigTabPropValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
              }
            ],
            "description": "Property name value struct for attribute configuration tab of Parent Tool.",
            "name": "parentAttributeConfigTabPropValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
              }
            ],
            "description": "Property name value struct for user feedback configuration tab of Parent Tool.",
            "name": "parentUserFeedbackConfigTabPropValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
              }
            ],
            "description": "Property name value struct for access control configuration tab of Parent Tool",
            "name": "parentAccessControlConfigTabPropValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
              }
            ],
            "description": "Property name value struct for launch property configuration tab.",
            "name": "launchPropConfigTabPropValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
              }
            ],
            "description": "Property name value struct for environment variables configuration tab.",
            "name": "envVarConfigTabPropValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
              }
            ],
            "description": "Property name value struct for file input configuration tab.",
            "name": "inputConfigTabPropValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
              }
            ],
            "description": "Property name value struct for output configuration tab.",
            "name": "outputConfigTabPropValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
              }
            ],
            "description": "Property name value struct for input param configuration tab.",
            "name": "inputParamConfigTabPropValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
              }
            ],
            "description": "Property name value struct for atriibute configuration tab.",
            "name": "attributeConfigTabPropValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
              }
            ],
            "description": "Property name value struct for user feedback configuration tab.",
            "name": "userFeedbackConfigTabPropValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
              }
            ],
            "description": "Property name value struct for access control configuration tab.",
            "name": "accessControlConfigTabPropValue"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "This structure holds the properties name and value of tool object and associated nine tabs properties name value.",
        "isPublished": "false",
        "name": "CAEToolTabPropsValueInfo",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The business object type name.",
            "name": "boTypeName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0PropertyValuesMap"
              }
            ],
            "description": "Map (string/list of strings) of property name (key) and to property values (values) in string format, to be set on new object being created.",
            "name": "propertyNameValues"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0CreateObjectInputMap"
              }
            ],
            "description": "Map (string/list of <i>Cae0CreateObjectInput</i>) of reference or relation property name to secondary<i> Cae0CreateObjectInput</i> objects.",
            "name": "compoundCreateObjectInput"
          }
        ],
        "createRelease": "tc11000.6.0",
        "description": "This structure used to capture the inputs required for creation of a business object.",
        "isPublished": "false",
        "name": "Cae0CreateObjectInput",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement",
        "scope": "CAE0::Soa::SimProc::SimDataManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The business object type name.",
            "name": "boName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement::Cae0PropertyValuesMap2"
              }
            ],
            "description": "Map (string, list of strings) of property name (key) and to property values (values) in string format, to be set on new object being created.",
            "name": "propertyNameValues"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement::Cae0CreateObjectInputMap2"
              }
            ],
            "description": "Map (string, list of <i>Cae0CreateObjectInput2</i>) of reference or relation property name to secondary <i>Cae0CreateObjectInput2</i> objects. Here valid references or relation property names are: &ldquo;IMAN_master_form&rdquo;, &ldquo;revision&rdquo; and &ldquo;IMAN_master_form_rev&rdquo;.",
            "name": "compoundCreateInput"
          }
        ],
        "createRelease": "tc12000.4.0",
        "description": "This structure used to capture the inputs required for creation of a business object.",
        "isPublished": "false",
        "name": "Cae0CreateObjectInput2",
        "namespace": "CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement",
        "scope": "CAE0::Soa::SimProc::SimDataManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, the configured <b>BOMView</b> <b>Revision</b> is created; otherwise <b>BOMView</b> <b>Revision</b> configuration is ignored.",
            "name": "selected"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "User defined identifier specified in the configuration for the parent object.",
            "name": "parentDescriptor"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of identifiers for the children objects as specified by the configuration.",
            "name": "childDescriptorList"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The type of <b>BOMView Revision</b> to be created.",
            "name": "bvrType"
          }
        ],
        "createRelease": "tc11000.6.0",
        "description": "This structure contains information required for <b>BOMView Revision</b> creation.",
        "isPublished": "false",
        "name": "Cae0PackageBVRConfig",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement",
        "scope": "CAE0::Soa::SimProc::SimDataManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, the configured <b>Dataset</b> is created or referenced; otherwise the configuration for the <b>Dataset</b> is ignored.",
            "name": "selected"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "User defined string identifier specified in the configuration for the <b>Dataset</b>.",
            "name": "descriptor"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The type of the <b>Dataset</b>.",
            "name": "dsType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The source of the <b>Dataset</b>. <br />&ldquo;Copy&rdquo;A copy of the existing <b>Dataset</b> is created.<br /> &ldquo;Reference&rdquo; The existing <b>Dataset</b> is referenced. <br /> &ldquo;New&rdquo;  A new <b>Dataset</b> is created .",
            "name": "dsSource"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The name of the <b>Dataset</b>.",
            "name": "dsName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The relationship to be created between the <b>Dataset</b> and the input or the output object if the <i>dsSource</i> has the value &ldquo;<i>New</i>&rdquo;.",
            "name": "dsRelation"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Unique Identifier (UID) of the selected <b>Dataset</b> in case of if the value of the <i>dsSource</i> is &ldquo;Copy&rdquo; or &ldquo;Reference&rdquo;. This value will be empty if <i>dsSource</i> has a value &ldquo;New&rdquo;.",
            "name": "dsUID"
          }
        ],
        "createRelease": "tc11000.6.0",
        "description": "This structure contains information required to create or reference the <b>Dataset</b> objects.",
        "isPublished": "false",
        "name": "Cae0PackageDatasetConfig",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement",
        "scope": "CAE0::Soa::SimProc::SimDataManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The Unique Idendifier (UID) of the selected <b>Folder</b>.",
            "name": "uid"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, output object(s) are pasted in a <b>Folder</b> created under the selected <b>Folder</b>; otherwise output object(s) is pasted in the selected <b>Folder</b>.",
            "name": "useSubFolder"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The name of the <b>Folder</b>   to be created under the selected <b>Folder</b>. This is used if <i>useSubFolder</i> is true.",
            "name": "subFolderName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, input object(s) are pasted under selected <b>Folder</b>; otherwise, input object(s) are not pasted under selected <b>Folder</b>.",
            "name": "pasteInputObject"
          }
        ],
        "createRelease": "tc11000.6.0",
        "description": "This structure contains information required pasting the output or input objects in a <b>Folder</b>.",
        "isPublished": "false",
        "name": "Cae0PackageDestFolderConfig",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement",
        "scope": "CAE0::Soa::SimProc::SimDataManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, a detailed log is persisted in a <b>Dataset</b>; otherwise the detailed log is not persisted.",
            "name": "persistDetailsLog"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The name of the <b>Dataset</b> containing the detailed log.",
            "name": "detailsLogDSName"
          }
        ],
        "createRelease": "tc11000.6.0",
        "description": "This structure contains information required for the log to be created.",
        "isPublished": "false",
        "name": "Cae0PackageDetailsLogConfig",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement",
        "scope": "CAE0::Soa::SimProc::SimDataManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Identifier string specified by the configuration of the input.",
            "name": "inputDescriptor"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Unique Identifier (UID) of the selected input object.",
            "name": "uid"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, selected object is a <b>BOMLine</b> and the <i>inputBOMLine</i> is considered as an input; otherwise <i>uid</i> is considered as an input.",
            "name": "isBOMLine"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BOMLine"
              }
            ],
            "description": "The input <b>BOMLine</b> object.",
            "name": "inputBOMLine"
          }
        ],
        "createRelease": "tc11000.6.0",
        "description": "This structure contains input object information.",
        "isPublished": "false",
        "name": "Cae0PackageInputConfig",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement",
        "scope": "CAE0::Soa::SimProc::SimDataManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "User defined identifier specified in the CAE Package configuration for the input. If <i>inputDescriptor</i> is not matching with CAE Package configuration, then the error details are added to the alert message.",
            "name": "inputDescriptor"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Unique Identifier (UID) of the selected <b>ItemRevision</b> objects.",
            "name": "objUID"
          }
        ],
        "createRelease": "tc12000.4.0",
        "description": "This structure contains input object information.",
        "isPublished": "false",
        "name": "Cae0PackageInputConfig2",
        "namespace": "CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement",
        "scope": "CAE0::Soa::SimProc::SimDataManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, the configured output object is created; otherwise output object is not created.",
            "name": "selected"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The identifier string specified by the configuration for the output.",
            "name": "outputDescriptor"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The type of the configured output object.",
            "name": "outputType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0CreateObjectInput"
              }
            ],
            "description": "The data required for the create operation.",
            "name": "createData"
          }
        ],
        "createRelease": "tc11000.6.0",
        "description": "This structure contains the information required to create the output <b>CAEItem</b> objects and <b>CAEItemRevision</b> objects.",
        "isPublished": "false",
        "name": "Cae0PackageOutputConfig",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement",
        "scope": "CAE0::Soa::SimProc::SimDataManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Contains the partial errors if any.",
            "name": "serviceData"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement::CAEAnalysisDashboardFileStatus"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "Summary information.",
            "name": "progressHeadings"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement::CAEAnalysisDashboardPopulateInfo"
              }
            ],
            "description": "A map (<b>CAEAnalysisRevision</b>, list of CAEAnalysisDashboardColumnInfo)  representing the Analysis Dashboard information.",
            "name": "dashboardPopulateInfo"
          }
        ],
        "createRelease": "tc11000.2.3",
        "description": "This is the structure that will hold the response that needs to be passed back to the client. It contains query results as per the rules defined on <b>CAE0ConfigItem</b> object, needed to render the analysis dashboard view on the client.",
        "isPublished": "false",
        "name": "CAEAnalysisDashboardPopulateResp",
        "namespace": "CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, the configured output object is processed; otherwise, output object is ignored.",
            "name": "selected"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "User defined string identifier specified in the configuration for the output.",
            "name": "outputDescriptor"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The type of the configured output object. <b>ItemRevision</b>, <b>Folder</b> and their subtypes are valid output object types.",
            "name": "outputType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, existing object is used for output; otherwise, output object is created.",
            "name": "useExistingObject"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": " Unique Identifier (UID) of the existiing output object. <b>ItemRevision</b>, <b>Folder</b> and its subtypes are supported as output objects.",
            "name": "outputObjUID"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement::Cae0CreateObjectInput2"
              }
            ],
            "description": "The data required for the create operation.",
            "name": "createData"
          }
        ],
        "createRelease": "tc12000.4.0",
        "description": "This structure contains the information required to create the output <b>Item</b> objects and <b>ItemRevision</b> objects.",
        "isPublished": "false",
        "name": "Cae0PackageOutputConfig2",
        "namespace": "CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement",
        "scope": "CAE0::Soa::SimProc::SimDataManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, the configured output object is processed; otherwise, output object is ignored.",
            "name": "selected"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "User defined identifier specified in the CAE Package configuration for the output.  If <i>outputDescriptor</i> is not matching with CAE Package configuration then the error details are added to the alert message.",
            "name": "outputDescriptor"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, pattern keywords are already resolved by the user. If false, the pattern keywords are to be resolved. The pattern keywords are INPUTID, INPUTNAME, INPUTREV and N from the CAE Package configuration.<br />The keywords are resolved by replacing INPUTID with <i>inputItemId</i>, INPUTNAME with <i>inputItemName</i>, INPUTREV with <i>inputItemRev</i>,<br />N is replaced with the next available counter which is evaluated for output item ID when the input object is provided by user.",
            "name": "isPatternResolved"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The type (<b>ItemRevision</b> or  <b>Folder</b>) of the configured output object.",
            "name": "outputType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, existing object is used for output; otherwise, output object is created.",
            "name": "useExistingObject"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Unique Identifier (UID) of the existing output ItemRevision or Folder object.",
            "name": "outputObjUID"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement::Cae0CreateObjectInput2"
              }
            ],
            "description": "The data required for the create operation.",
            "name": "createData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The value of the pattern keyword N.  <br />N is the next available counter number evaluated upon selection of input <b>Item</b> by the user which is used to replace the pattern keyword N while creating output object.",
            "name": "valueForPatternN"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The ID of the input <b>Item</b>.",
            "name": "inputItemId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The item name of the input <b>Item</b>.",
            "name": "inputItemName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The revision of the input <b>Item</b>.",
            "name": "inputItemRev"
          }
        ],
        "createRelease": "tc13000.2.0",
        "description": "This structure contains the information required to create the output <b>Item</b> objects and <b>ItemRevision</b> objects.",
        "isPublished": "false",
        "name": "Cae0PackageOutputConfig3",
        "namespace": "CAE0::Soa::Internal::SimProc::_2021_06::SimDataManagement",
        "scope": "CAE0::Soa::SimProc::SimDataManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The name of the workflow template. This must be a valid template name.",
            "name": "processTemplateName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The name of the process assignment associated with the process template.",
            "name": "processAssignmentName"
          }
        ],
        "createRelease": "tc11000.6.0",
        "description": "This structure contains the information required for submitting the created objects to a workflow.",
        "isPublished": "false",
        "name": "Cae0PackageWorkFlowConfig",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement",
        "scope": "CAE0::Soa::SimProc::SimDataManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Composite View Service Data",
            "name": "compositeServiceData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::ParentToChildCompositeStructure"
              }
            ],
            "description": "Composite View Parent to Child Composite Data Structure.",
            "name": "compositeLineNodes"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "The response for CompositeViewResponse operation.  This data type contains the information about the queried item parent child structure as ParentToChildCompositeStructure data structure along with Service Data for detecting any errors from the server side.",
        "isPublished": "false",
        "name": "CompositeViewResponse",
        "namespace": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Composite View Service Data.",
            "name": "compositeServiceData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2016_03::SimStructureManagement::ParentToChildCompositeStructure2"
              }
            ],
            "description": "Composite View Parent to Child Composite Data Structure.",
            "name": "compositeLineNodes"
          }
        ],
        "createRelease": "tc10000.1.6",
        "description": "The response for CompositeViewResponse operation. This data type contains the information about the queried item parent child structure as ParentToChildCompositeStructure2 data structure along with Service Data for detecting any errors from the server side.",
        "isPublished": "false",
        "name": "CompositeViewResponse2",
        "namespace": "CAE0::Soa::Internal::SimProc::_2016_03::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Business object type name",
            "name": "boName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Represents the business object UID.",
            "name": "boUID"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::IntVectorMap"
              }
            ],
            "description": "Map of int array property names to values (<font face=\"courier\" height=\"10\">string, vector<int></font>)",
            "name": "intArrayProps"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::BoolMap"
              }
            ],
            "description": "Map of boolean property names to values (string, bool)",
            "name": "boolProps"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::BoolVectorMap"
              }
            ],
            "description": "Map of boolean array property names to values (<font face=\"courier\" height=\"10\">string, vector<bool></font>)",
            "name": "boolArrayProps"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::DateMap"
              }
            ],
            "description": "Map of DateTime property names to values (<font face=\"courier\" height=\"10\">string, DateTime</font>)",
            "name": "dateProps"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::DateVectorMap"
              }
            ],
            "description": "Map of DateTime array property names to values (<font face=\"courier\" height=\"10\">string, vector<DateTime></font>)",
            "name": "dateArrayProps"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::TagMap"
              }
            ],
            "description": "Map of BusinessObject property names to values (<font face=\"courier\" height=\"10\">string, BusinessObjec</font>t)",
            "name": "tagProps"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::TagVectorMap"
              }
            ],
            "description": "Map of <b>BusinessObject</b> array property names to values (<font face=\"courier\" height=\"10\">string, vector<BusinessObject></font>)",
            "name": "tagArrayProps"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CreateInputMap"
              }
            ],
            "description": "Map of reference or relation property name to secondary <font face=\"courier\" height=\"10\">CreateInput</font> objects <font face=\"courier\" height=\"10\">(string, vector<CreateInput></font>)",
            "name": "compoundCreateInput"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "To determine if this object is a delete object.",
            "name": "isDelete"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::StringMap"
              }
            ],
            "description": "Map of string property names to values (<font face=\"courier\" height=\"10\">string, string</font>)",
            "name": "stringProps"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::StringVectorMap"
              }
            ],
            "description": "Map of string array property names to values (<font face=\"courier\" height=\"10\">string, vector<string></font>)",
            "name": "stringArrayProps"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::DoubleMap"
              }
            ],
            "description": "Map of double property names to values (<font face=\"courier\" height=\"10\">string, double</font>)",
            "name": "doubleProps"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::DoubleVectorMap"
              }
            ],
            "description": "Map of double array property names to values (<font face=\"courier\" height=\"10\">string, vector<double></font>)",
            "name": "doubleArrayProps"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::FloatMap"
              }
            ],
            "description": "Map of float property names to values (<font face=\"courier\" height=\"10\">string, float</font>)",
            "name": "floatProps"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::FloatVectorMap"
              }
            ],
            "description": "Map of float array property names to values (<font face=\"courier\" height=\"10\">string, vector<float></font>)",
            "name": "floatArrayProps"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::IntMap"
              }
            ],
            "description": "Map of int property names to values (<font face=\"courier\" height=\"10\">string, int</font>)",
            "name": "intProps"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "This structure captures the inputs required for creation of a business object. This is a recursive structure containing the <font face=\"courier\" height=\"10\">CreateInput</font>(s) for any secondary(compounded) objects that might be created (e.g <b>Item</b> also creates <b>ItemRevision</b> and <b>ItemMaster</b> Form, etc.)",
        "isPublished": "false",
        "name": "CreateInput",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The text of activityLog contains the Item IDs and revisions of the roots of the created output structures. In case of failure of derive operation, the text will report failure. This text is used for reporting the outcome of derive operation to rich client. User is informed of the status of the operation by displaying this text in a string viewer.",
            "name": "activityLog"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "The details of failure in derive operation are stored in ServiceData.",
            "name": "serviceData"
          }
        ],
        "createRelease": "tc11000.3.0",
        "description": "DeriveResponse represents the output of the unpublished createDerivedStructures operation.<br /><br />A log is returned with the results of the derive operation. The item IDs and revisions of created items along with the description of additional items and relationships created in the process are part of the log.",
        "isPublished": "false",
        "name": "DeriveResponse",
        "namespace": "CAE0::Soa::Internal::SimProc::_2017_05::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Name of the PLMXML file to be exported. This is optional. If no value is provided, file name specified in the Simulation Tool configuration will be used.",
            "name": "plmxmlExportFileName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::vector<std::string>"
              }
            ],
            "description": "List of runtime arguments and their values. The argument and values are represented by a single string.  The values will be separated by two colons &quot;::&quot;  which is converted to the &quot;=&quot; equals sign.  Arguments that have no value are represented by blank or white space.  Argument will be prefixed by a single dash &quot;-&quot;.  Example: To pass the argument and value pairs of as an argument, the user should pass &quot;fem::3D dat::blk&quot; as a string list. This will result in the following argumets &quot;-fem=3D -dat=blk&quot;.  This is optional.",
            "name": "runtimeArguments"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "Structure holding runtime overrides for Simulation Tool export configuration.",
        "isPublished": "true",
        "name": "ExportConfigRuntimeOverrideInfo",
        "namespace": "CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch",
        "scope": "CAE0::Soa::SimProc::SimulationToolLaunch"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, auto process is selected for file export and <i>autoProcessOption</i> is used for export action; otherwise <i>promptUserOptions</i> is used for export action.",
            "name": "isAutoProcessSelected"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Action to be used while exporting the file to staging directory. Valid values are: &quot;Overwrite&quot;, &quot;Skip&quot;. This options are used only when file is already present in staging directory. If  &ldquo;Ovewrite&rdquo; action is selected, operation will replace the file and if &ldquo;Skip&rdquo; action is selected, operation will skip the export of file.",
            "name": "autoProcessOption"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::SimProc::_2020_01::SimulationToolLaunch::ExportFilePromptUserOption"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "List of export options for file object from prompt user action.",
            "name": "promptUserOptions"
          }
        ],
        "createRelease": "tc12000.3.0",
        "description": "This structure contains the information of export option for a file object which is to be exported in staging directory.",
        "isPublished": "true",
        "name": "ExportFileOptions",
        "namespace": "CAE0::Soa::SimProc::_2020_01::SimulationToolLaunch",
        "scope": "CAE0::Soa::SimProc::SimulationToolLaunch"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "File object which is to be exported in staging directory.",
            "name": "fileObject"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Action to be used while exporting the file to staging directory. Valid values are: &quot;Overwrite&quot;, &quot;Skip&quot;. This options are used only when file is already present in staging directory. If  &ldquo;Overwrite&rdquo; action is selected, operation will replace the file and if &ldquo;Skip&rdquo; action is selected, operation will skip the export of file.",
            "name": "exportOption"
          }
        ],
        "createRelease": "tc12000.3.0",
        "description": "This structure contains the information of export option for a file object from prompt user action which is to be exported in staging directory.",
        "isPublished": "true",
        "name": "ExportFilePromptUserOption",
        "namespace": "CAE0::Soa::SimProc::_2020_01::SimulationToolLaunch",
        "scope": "CAE0::Soa::SimProc::SimulationToolLaunch"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Contains the partial errors if any.",
            "name": "serviceData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::vector<std::string>"
              }
            ],
            "description": "List of xml string which represents the detail configuration of input configuration items.",
            "name": "xmlConfigList"
          }
        ],
        "createRelease": "tc11000.2.3",
        "description": "This is the structure that will hold the response that needs to be passed back to the client. It contains the information about the configurations needed to render the configuration view on the client.",
        "isPublished": "false",
        "name": "CAEConfigDetailResponse",
        "namespace": "CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ImanFile"
              }
            ],
            "description": "<b>ImanFile</b> object containing all the exported <b>Mat1MaterialRevision</b>.",
            "name": "materialExportFile"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ImanFile"
              }
            ],
            "description": "<b>ImanFile</b> object containing the log details for all the exported <b>Mat1MaterialRevision</b> objects. It will contatin the details about the what are the materials and its exported paramaters.",
            "name": "materialExportLogfile"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Service Data containing partial errors if any.",
            "name": "serviceData"
          }
        ],
        "createRelease": "tc12000.4.0",
        "description": "Returns ExportMaterialResponse containing exported <i>materialExportFile</i> and <i>materialExportLogFile</i> <b>ImanFile</b> object.",
        "isPublished": "false",
        "name": "ExportMaterialResponse",
        "namespace": "CAE0::Soa::Internal::SimProc::_2020_04::SimulationToolLaunch",
        "scope": "CAE0::Soa::SimProc::SimulationToolLaunch"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2017_05::SimulationToolLaunch::FileTicket"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of FMS file tickets for the generated PLMXML file and log files.",
            "name": "xmlAndLogFileTickets"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2017_05::SimulationToolLaunch::FileTicket"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of FMS file tickets. This list is used to get the dataset named reference files. On Teamcenter Services client, the files must be loaded into the directory along with the PLMXML file. And the directory must have the same name as the PLMXML file without the file extension name.",
            "name": "namedRefFileTickets"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Service data contains the list of created or modified objects and also the partial errors is used to report any partial failures.",
            "name": "serviceData"
          }
        ],
        "createRelease": "tc11000.3.0",
        "description": "The response for <i>exportObjectsToPLMXMLForToolLaunch</i> operation. It holds the list of FMS file tickets for the exported XML file and the log files, the list of file tickets for the dataset named reference files, and any partial failures.",
        "isPublished": "false",
        "name": "ExportObjectsToPLMXMLResponse",
        "namespace": "CAE0::Soa::Internal::SimProc::_2017_05::SimulationToolLaunch",
        "scope": "CAE0::Soa::SimProc::SimulationToolLaunch"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ImanFile"
              }
            ],
            "description": "The <b>ImanFile</b> object.",
            "name": "file"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Dataset"
              }
            ],
            "description": "The associated <b>Dataset</b> object. The <b>Dataset</b> object is related to the <b>ItemRevision</b> or <b>CAE0FileCollection</b> objects from the inputObjects.",
            "name": "dataset"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ItemRevision"
              }
            ],
            "description": "The associated <b>ItemRevision</b> object.",
            "name": "itemRevision"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The associated folder path of the <b>ImanFile</b> object.",
            "name": "folderPath"
          }
        ],
        "createRelease": "tc13000.1.0",
        "description": "The structure containing information to be shown in the file explorer view.",
        "isPublished": "false",
        "name": "FileDetails",
        "namespace": "CAE0::Soa::Internal::SimProc::_2020_12::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The FMS file ticket.",
            "name": "ticket"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The original file name.",
            "name": "fileName"
          }
        ],
        "createRelease": "tc11000.3.0",
        "description": "This structure represents a file ticket and its original file name.",
        "isPublished": "false",
        "name": "FileTicket",
        "namespace": "CAE0::Soa::Internal::SimProc::_2017_05::SimulationToolLaunch",
        "scope": "CAE0::Soa::SimProc::SimulationToolLaunch"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The NodeXML document consisting of the displayable attributes and its values for the <b>Item</b>, <b>ItemRevision</b>, <b>Form</b> and <b>BOMLine</b> for each business object provided in the input.",
            "name": "nodeXML"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "The Service Data containing the errors encountered during the operation.",
            "name": "serviceData"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "The response for the generateNodeXML operation. This data type contains the NodeXML document consisting the displayable attributes and its values for the <b>Item</b>, <b>ItemRevision</b>, <b>Form</b> and <b>BOMLine</b> for each business object provided in the input along with Service Data containing errors, if encountered.",
        "isPublished": "false",
        "name": "GenerateNodeXMLResponse",
        "namespace": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Contains the partial errors if any.",
            "name": "serviceData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2016_10::SimStructureManagement::FileToDatasetMap"
              }
            ],
            "description": "A map (<b>ImanFile</b>, <b>Dataset</b>) of <b>ImanFile</b> to its associated <b>Dataset</b> objects.",
            "name": "fileToDatasetMap"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2016_10::SimStructureManagement::FileToItemRevisionMap"
              }
            ],
            "description": "A map (<b>ImanFile</b>, <b>ItemRevision</b>) of  <b>ImanFile</b> to its associated <b>ItemRevision</b> objects.",
            "name": "fileToItemRevisionMap"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::ItemRevision"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "List Of <b>ItemRevision</b> objects.",
            "name": "itemRevisions"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::ImanFile"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "List of <b>ImanFile</b> objects.",
            "name": "files"
          }
        ],
        "createRelease": "tc11000.2.3",
        "description": "The response for getFileDetails operation.",
        "isPublished": "false",
        "name": "GetFileDetailsResponse",
        "namespace": "CAE0::Soa::Internal::SimProc::_2016_10::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Contains the partial errors if any.",
            "name": "serviceData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2018_06::SimStructureManagement::FileToDatasetMap2"
              }
            ],
            "description": "A map (<b>ImanFile</b>, <b>Dataset</b>) of <b>ImanFile</b> to its associated <b>Dataset</b> objects. The <b>Dataset</b> objects in this map are related to the <b>ItemRevision</b> or <b>CAE0FileCollection</b> objects from the <i>inputObjects</i>.",
            "name": "fileToDatasetMap2"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2018_06::SimStructureManagement::FileToItemRevisionMap2"
              }
            ],
            "description": "A map (<b>ImanFile</b>, <b>ItemRevision</b>) of  <b>ImanFile</b> to its associated <b>ItemRevision</b> objects found by traversing the <i>inputObjects</i>.",
            "name": "fileToItemRevisionMap2"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2018_06::SimStructureManagement::FileToFolderPathMap"
              }
            ],
            "description": "A map (<b>ImanFile</b>, <b>String</b>) of <b>ImanFile</b> to its associated folder path.",
            "name": "fileToFolderPathMap"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::ItemRevision"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "List Of <b>ItemRevision</b> objects.",
            "name": "itemRevisions"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::ImanFile"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "List of <b>ImanFile</b> objects.",
            "name": "files"
          }
        ],
        "createRelease": "tc11000.5.0",
        "description": "The response for getFileDetails2 operation.",
        "isPublished": "false",
        "name": "GetFileDetailsResponse2",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_06::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Contains the partial errors if any.",
            "name": "serviceData"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2020_12::SimStructureManagement::FileDetails"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of file information to be shown in the file explorer view.",
            "name": "fileDetails"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::ItemRevision"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of <b>ItemRevision</b> objects.",
            "name": "itemRevisions"
          }
        ],
        "createRelease": "tc13000.1.0",
        "description": "The response for <i>getFileDetails3</i> operation",
        "isPublished": "false",
        "name": "GetFileDetailsResponse3",
        "namespace": "CAE0::Soa::Internal::SimProc::_2020_12::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2017_05::SimStructureManagement::HighlightModelMap"
              }
            ],
            "description": "Map contains a list of pairs (<b>String, List&lt;BOMLine&gt;</b>).",
            "name": "highlightModelMap"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "ServiceData",
            "name": "serviceData"
          }
        ],
        "createRelease": "tc11000.3.0",
        "description": "This structure is the response that is returned back to the client. It contains the information needed to color code the <b>BOMLine</b> objects.",
        "isPublished": "false",
        "name": "HighlightModelResponse",
        "namespace": "CAE0::Soa::Internal::SimProc::_2017_05::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Item creation flag, which can be take one of the following values - \"As_Needed\", \"Always\" or \"Never\". This parameter is optional. If no value is provided, default value configured in the Simulation Tool will be used.",
            "name": "itemCreationSetting"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Dataset creation flag, which can be take one of the following values - \"As_Needed\", \"Always\" or \"Never\". This parameter is optional. If no value is provided, default value configured in the Simulation Tool will be used.",
            "name": "datasetCreationSetting"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "Specifies the naming pattern for the created Items. The argument and values are represented by a single string separated by token \"::\" Example: To pass AnalysisObject naming patterns for objects of type CAEAnalysis as an argument, the user should pass [CAEAnalysis::AnalysisObject] as a string vector. This is an optional argument.",
            "name": "outputNamePatterns"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "Structure holding runtime overrides for Simulation Tool ouput configuration.",
        "isPublished": "true",
        "name": "ImportConfigRuntimeOverrideInfo",
        "namespace": "CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch",
        "scope": "CAE0::Soa::SimProc::SimulationToolLaunch"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "The service data containing errors and partial errors,if any.",
            "name": "serviceData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolItemPropStruct"
              }
            ],
            "description": "The structure that contains the tool information as well as the properties of the tabs.",
            "name": "itemsPropValueStruct"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "This structure is the response that is returned to the client. It contains the information about the tool, its child tools and the properties needed to render the menu on the client.",
        "isPublished": "false",
        "name": "CAEToolBOMPropStructResponse",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Item creation flag. Supported values are: &quot;As_Needed&quot;, &quot;Always&quot; or &quot;Never&quot;. This parameter is optional. If no value is provided, default value configured in the Simulation Tool will be used.",
            "name": "itemCreationSetting"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Dataset creation flag. Supported values are: &quot;As_Needed&quot;, &quot;Always&quot; or &quot;Never&quot;. This parameter is optional. If no value is provided, default value configured in the Simulation Tool will be used.",
            "name": "datasetCreationSetting"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Specifies file upload option, which can take one of the following values - &quot;Upload&quot;, &quot;Rename And Upload&quot;, &quot;Skip&quot;. This value is optional and if no value is provided, default value configured in the Simulation Tool will be used. While importing the simulation results, if the file type and the name of the file being imported matches with the type and the name of the file already present in the <b>Dataset</b>, then the system will overwrite the file in the <b>Dataset</b> if the option chosen is &ldquo;Upload&rdquo;. In case of &ldquo;Rename And Upload&rdquo;, system will assign a new name to the file to be imported and upload it in the <b>Dataset</b>. If the option is &ldquo;Skip&rdquo;, system will not import the file into the <b>Dataset</b>. In case of <b>Web Link</b>, if the file type and the name of the <b>Web Link</b> being created matches with the any of the existing <b>Web Link</b> attached with the <b>ItemRevision</b>, then the system will overwrite the file URL value with the new value if the option chosen is &ldquo;Upload&rdquo;. In case of &ldquo;Rename And Upload&rdquo;, system will assign a new name to the <b>Web Link</b>, add the file URL value and attach to the <b>ItemRevision</b>. If the option is &ldquo;Skip&rdquo;, system will not create any <b>Web Link</b>.",
            "name": "autoProcessOptions"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::vector<std::string>"
              }
            ],
            "description": "A list of naming pattern for the created Items. The argument and values are represented by a single string separated by token &quot;::&quot; For example: To pass AnalysisObject naming pattern for objects of type CAEAnalysis the user should string pattern of:  &ldquo;CAEAnalysis::AnalysisObject&rdquo;. This is an optional argument.",
            "name": "outputNamePatterns"
          }
        ],
        "createRelease": "tc11000.2.2",
        "description": "Structure holding runtime overrides for Simulation Tool ouput configuration.",
        "isPublished": "true",
        "name": "ImportConfigRuntimeOverrideInfo2",
        "namespace": "CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch",
        "scope": "CAE0::Soa::SimProc::SimulationToolLaunch"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2017_05::SimulationToolLaunch::FileTicket"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The FMS tickets for the log files.",
            "name": "logFileTickets"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Service data contains the list of created or modified objects and also the partial errors is used to report any partial failures.",
            "name": "serviceData"
          }
        ],
        "createRelease": "tc11000.3.0",
        "description": "The response for <i>importObjsFromPLMXMLForToolLaunch</i> operation. It holds the FMS file tickets for the log files, and any partial failures.",
        "isPublished": "false",
        "name": "ImportObjectsFromPLMXMLResponse",
        "namespace": "CAE0::Soa::Internal::SimProc::_2017_05::SimulationToolLaunch",
        "scope": "CAE0::Soa::SimProc::SimulationToolLaunch"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2017_05::SimulationToolLaunch::FileTicket"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The FMS tickets for the log files.",
            "name": "logFileTickets"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2020_04::SimulationToolLaunch::PLMXMLNamedReferencePlmdTicketInfo"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of *.plmd file tickets for the dataset named refernce files.",
            "name": "plmxmlNamedRefPlmdTicketInfoList"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Service data contains the list of created or modified objects and also the partial errors is used to report any partial failures.",
            "name": "serviceData"
          }
        ],
        "createRelease": "tc12000.4.0",
        "description": "The response for <i>plmxmlImportForToolLaunchUsingDSM</i> operation. It holds the FMS file tickets for the log files, the list of *.plmd file tickets for the dataset named refernce files, and any partial failures.",
        "isPublished": "false",
        "name": "ImportObjectsFromPLMXMLResponse2",
        "namespace": "CAE0::Soa::Internal::SimProc::_2020_04::SimulationToolLaunch",
        "scope": "CAE0::Soa::SimProc::SimulationToolLaunch"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "Input object on which Simulation Tool is to be launched.",
            "name": "inputObject"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ConfigurationContext"
              }
            ],
            "description": "Configuration Context object holding the configuration details for the Input object in case it is of type ItemRevision. NULL otherwise.",
            "name": "configurationContext"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "Structure containing the input object on which tool needs to be launched and the configuration information which needs to be applied in case the input object is of type ItemRevision.",
        "isPublished": "true",
        "name": "LaunchInputInfo",
        "namespace": "CAE0::Soa::SimProc::_2014_12::SimulationToolLaunch",
        "scope": "CAE0::Soa::SimProc::SimulationToolLaunch"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "Input object on which Simulation Tool is to be launched.",
            "name": "inputObject"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "Interactively selected dataset on which Simulation Tool is to be launched.",
            "name": "inputDataset"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "Interactively selected file on which Simulation Tool is to be launched.",
            "name": "inputFile"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ConfigurationContext"
              }
            ],
            "description": "Configuration Context object holding the configuration details for the Input object in case it is of type <b>ItemRevision</b>. NULL otherwise.",
            "name": "configurationContext"
          }
        ],
        "createRelease": "tc11000.2.2",
        "description": "Structure containing the input object on which tool needs to be launched and the configuration information which needs to be applied in case the input object is of type <b>ItemRevision</b>.",
        "isPublished": "true",
        "name": "LaunchInputInfo2",
        "namespace": "CAE0::Soa::SimProc::_2016_05::SimulationToolLaunch",
        "scope": "CAE0::Soa::SimProc::SimulationToolLaunch"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "Input object on which Simulation Tool is to be launched.",
            "name": "inputObject"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Dataset"
              }
            ],
            "description": "<b>Dataset</b> on which Simulation Tool is to be launched. To launch a Simulation Tool, the user selects the <b>ItemRevision</b> on which the Simulation Tool is to be launched. This <i>inputDataset</i> is the <b>Dataset</b> attached to this selected <b>ItemRevision</b>. If the selected <b>ItemRevision</b> is has multiple datasets of the same type, then a conflict resolution dialog is presented to the user to pick the appropriate <b>Dataset</b> and proceed with the Simulation Tool Launch.",
            "name": "inputDataset"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ImanFile"
              }
            ],
            "description": "Interactively selected file on which Simulation Tool is to be launched.",
            "name": "inputFile"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Form"
              }
            ],
            "description": "<b>Web Link</b> on which Simulation Tool is to be launched. To launch a Simulation Tool, the user selects the <b>ItemRevision</b> on which the Simulation Tool is to be launched. This <i>inputWebLink</i> is the <b>Web Link</b> attached to this selected <b>ItemRevision</b>. If the selected <b>ItemRevision</b> has mutiple web links, then a conflict resolution dialog is presented to the user to pick appropriate <b>Web Link</b> and proceed with the Simulation Tool Launch.",
            "name": "inputWebLink"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ConfigurationContext"
              }
            ],
            "description": "Configuration Context object holding the configuration details for the Input object in case it is of type <b>ItemRevision</b>. NULL otherwise.",
            "name": "configurationContext"
          }
        ],
        "createRelease": "tc12000.3.0",
        "description": "Structure containing the input object on which tool needs to be launched and the configuration information which needs to be applied in case the input object is of type <b>ItemRevision</b>.",
        "isPublished": "true",
        "name": "LaunchInputInfo3",
        "namespace": "CAE0::Soa::SimProc::_2020_01::SimulationToolLaunch",
        "scope": "CAE0::Soa::SimProc::SimulationToolLaunch"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The option name of the name-value pair.",
            "name": "optionName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The option value of the name-value pair.",
            "name": "optionValue"
          }
        ],
        "createRelease": "tc12000.4.0",
        "description": "NameAndValue structure represents a generic name-value pair.",
        "isPublished": "false",
        "name": "NameAndValue",
        "namespace": "CAE0::Soa::Internal::SimProc::_2020_04::SimulationToolLaunch",
        "scope": "CAE0::Soa::SimProc::SimulationToolLaunch"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ItemRevision"
              }
            ],
            "description": "<b>ItemRevision</b> object whose named references are to be exported during Simulation tool launch operation.",
            "name": "inputObject"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Name of directory where the named references from Optional Input will be exported.",
            "name": "exportDirectory"
          }
        ],
        "createRelease": "tc11000.4.0",
        "description": "Structure containing the <b>ItemRevision</b> object and directory name where the named references from the <b>ItemRevision</b> object will be exported.",
        "isPublished": "true",
        "name": "OptionalInputInfo",
        "namespace": "CAE0::Soa::SimProc::_2017_11::SimulationToolLaunch",
        "scope": "CAE0::Soa::SimProc::SimulationToolLaunch"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Dataset"
              }
            ],
            "description": "The <b>Dataset</b> object from which the <b>ImanFile</b> object representing the data file that need to be uploaded to the Teamcenter volume.",
            "name": "dataset"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The absolute file path of the file being uploaded on the client host.",
            "name": "absoluteFilePath"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The named reference relation to the ImanFile object file.",
            "name": "refName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The plmd file ticket for dataset named reference file.",
            "name": "plmdTicket"
          }
        ],
        "createRelease": "tc12000.4.0",
        "description": "This structure holds the information about a file to be uploaded using Datashare Manager.",
        "isPublished": "false",
        "name": "PLMXMLNamedReferencePlmdTicketInfo",
        "namespace": "CAE0::Soa::Internal::SimProc::_2020_04::SimulationToolLaunch",
        "scope": "CAE0::Soa::SimProc::SimulationToolLaunch"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The <b>ItemRevision</b> business object that is fetched from the Server using Persistant Object Model Queries.",
            "name": "itemRevision"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::ParentToChildCompositeStructure"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of all Composite Lines that are fetched from the Server using Persistant Object Model Queries.",
            "name": "childLines"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ImanRelation"
              }
            ],
            "description": "<b>ImanRelation</b> business object",
            "name": "attachmentRelation"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "Boolean value to indicate whether the Composite relation is present or not. If true, relation exists.",
            "name": "isRelation"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "The data type represents the Parent Children structure which are CAE composite related.  The data type represents a recursive tree structure containing parent and the list of its children.",
        "isPublished": "false",
        "name": "ParentToChildCompositeStructure",
        "namespace": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BOMLine"
              }
            ],
            "description": "This represents the BOMLine for the tool",
            "name": "toolBOMLine"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BOMLine"
              }
            ],
            "description": "Holds the parent tool BOMLine",
            "name": "parentToolBOMLine"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Represents the name of the tool.",
            "name": "toolName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "This helps us differentiate if the tool is a seperator or an actual tool",
            "name": "toolType"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabConfigInfo"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "Represents the array of tab objects associated with the tool",
            "name": "tabObjects"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "The structure represents the tool object.",
        "isPublished": "false",
        "name": "CAEToolConfigInfo",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The <b>ItemRevision</b> object.",
            "name": "itemRevision"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2016_03::SimStructureManagement::ParentToChildCompositeStructure2"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of all composite lines that are fetched from the server using using TcXML Import Export queries.",
            "name": "childLines"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ImanRelation"
              }
            ],
            "description": "<b>ImanRelation</b> business object.",
            "name": "attachmentRelation"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "Whether the Composite relation is present or not. If true, the relation exists.",
            "name": "isRelation"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2016_03::SimStructureManagement::PropNameValueInfo"
              }
            ],
            "description": "Map(String, String) of <b>ItemRevision</b> internal name property and value.For example user configured two column names \"owning_user\" and \"object_name\". Map will have value for both these properties names.",
            "name": "propValueInfo"
          }
        ],
        "createRelease": "tc10000.1.6",
        "description": "The data type represents the Parent Children structure which are CAE composite related. The data type represents a recursive tree structure containing parent and the list of its children.",
        "isPublished": "false",
        "name": "ParentToChildCompositeStructure2",
        "namespace": "CAE0::Soa::Internal::SimProc::_2016_03::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The input product structure target reference line. The input root and its lines from input structure are built into a tree structure along with a list of children representing a CAE Target Relationship.",
            "name": "targetReferenceLine"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::ParentToChildTargetReferenceStructure"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of all Target Reference Lines that are fetched from the Server using Persistant Object Model Queries for one level operation or TCXML Import Export queries for Expand below operation.",
            "name": "childLines"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The underlying target element to the product structure.",
            "name": "underlyingComponent"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, the current target reference line represents that it has a CAE Target Relationship with its Parent.",
            "name": "isRelation"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, the line representing the product line has multiple relations. Always false for lines representing targets.",
            "name": "hasMultipleRelations"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "The data type represents the Parent Children structure which are CAE Target related. The data type represents a recursive tree structure containing parent and the list of its children. A parent line is the underlying item revision of the line from the input root structure i.e. a product or item type and has additionally a list of children. The children list contains a CAE Target Relation line which is a CAE Model type and several product/item type children lines as per input structure.",
        "isPublished": "false",
        "name": "ParentToChildTargetReferenceStructure",
        "namespace": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The input product structure target reference line. The input root and its lines from input structure are built into a tree structure along with a list of children representing a CAE Target Relationship.",
            "name": "targetReferenceLine"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2016_03::SimStructureManagement::ParentToChildTargetReferenceStructure2"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of all Target Reference Lines that are fetched from the Server using Persistant Object Model Queries for one level operation or TCXML Import Export queries for Expand below operation.",
            "name": "childLines"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The underlying target element to the product structure.",
            "name": "underlyingComponent"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, the current target reference line represents that it has a CAE Target Relationship with its Parent.",
            "name": "isRelation"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, the line representing the product line has multiple relations. Always false for lines representing targets.",
            "name": "hasMultipleRelations"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2016_03::SimStructureManagement::PropNameValueInfo"
              }
            ],
            "description": "Map(String,String) of  <b>ItemRevision</b> property internal name and value. For example user configured two column names \"owning_user\" and \"object_name\". Map will have value for both these properties names.",
            "name": "propValueInfo"
          }
        ],
        "createRelease": "tc10000.1.6",
        "description": "The data type represents the Parent Children structure which are CAE Target related. The data type represents a recursive tree structure containing parent and the list of its children. A parent line is the underlying <b>ItemRevision</b> of the line from the input root structure i.e. a product or item type and has additionally a list of children. The children list contains a CAE Target Relation line which is a CAE Model type and several product/item type children lines as per input structure.",
        "isPublished": "false",
        "name": "ParentToChildTargetReferenceStructure2",
        "namespace": "CAE0::Soa::Internal::SimProc::_2016_03::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "The number of <b>CAEModelRevision</b> objects processed.",
            "name": "noOfObjectsProcessed"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "The number of objects which are not of the type <b>CAEModelRevision</b>.",
            "name": "noOfObjectsSkipped"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "The number of <b>DirectModel</b> <b>Dataset</b> objects deleted.",
            "name": "noOfDatasetsDeleted"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "The number of <b>DirectModel</b> <b>Dataset</b> objects for which the <b>IMAN_Rendering</b> relationship with the <b>CAEModelRevision</b> was removed.",
            "name": "noOfDatasetsCut"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "The Service Data containing the errors encountered during the operation.",
            "name": "serviceData"
          }
        ],
        "createRelease": "tc11000.5.0",
        "description": "The response for <i>removeDuplicateCadJt</i> operation.",
        "isPublished": "false",
        "name": "RemoveDuplicateCadJtResponse",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_06::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "This field contains value of the property <i>&ldquo;Clone Stable Occ Id&rdquo; </i>of the selected <b>BOMLine</b> object.",
            "name": "cloneStableId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "This field contains value of the property <i>&ldquo;Level&rdquo;</i> of the selected <b>BOMLine</b> object.",
            "name": "blLevel"
          }
        ],
        "createRelease": "tc11000.6.0",
        "description": "A structure containing information about the selected <b>BOMLine</b> objects.",
        "isPublished": "false",
        "name": "SelectedBOMLineInfo",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_11::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Name of the column configured in the simulation dashboard configuration from the <b>CAE0ConfigRevision</b> object for column cell in the simulation dashboard table.",
            "name": "columnName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Type of the column configured in the simulation dashboard configuration from the <b>CAE0ConfigRevision</b> object for the column cell in the simulation dashboard table.",
            "name": "columnType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Value in the column cell to be shown in the simulation dashboard table.",
            "name": "columnCellValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Value type of the column cell value in the simulation dashboard table.",
            "name": "columnCellValueType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Status value of the column cell in the simulation dashboard table.",
            "name": "statusValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Original name of the <b>ItemRevision</b> property that is configured in the simulation dashboard configuration from the <b>CAE0ConfigRevision</b> object for the column cell in the simulation dashboard table.",
            "name": "attributeName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "<b>ItemRevision</b> business object for the attribute that is configured in the simulation dashboard configuration from the <b>CAE0ConfigRevision</b> object for the column cell in the simulation dashboard table.",
            "name": "attributeComponent"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::StructureContext"
              }
            ],
            "description": "<b>StructureContext</b> object to be shown in the column cell in the simulation dashboard table.",
            "name": "pedigreeObject"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, the user has write access to modify the <b>ItemRevision</b> property in the column cell in the simulation dashboard table, false otherwise.",
            "name": "isModifiable"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2019_06::SimProcessConfigurationManagement::SimulationDashboardFileDetails"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "File details information list to be shown in the column cell in the simulation dashboard table.",
            "name": "fileDetails"
          }
        ],
        "createRelease": "tc12000.2.0",
        "description": "This structure represents the column cell details in simulation dashboard table.",
        "isPublished": "false",
        "name": "SimulationDashboardColumnCellInfo",
        "namespace": "CAE0::Soa::Internal::SimProc::_2019_06::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Name of the column configured.",
            "name": "columnName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Value of the column.",
            "name": "columnValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Type of the column configured.",
            "name": "columnType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Value type of the column.",
            "name": "columnValueType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Image value to be shown in the column.",
            "name": "imageValue"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Original name of the attribute to be shown in the column.",
            "name": "attributeName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Dataset"
              }
            ],
            "description": "Dataset component to be shown in the column.",
            "name": "datasetComp"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::StructureContext"
              }
            ],
            "description": "<b>StructureContext</b> object to be shown in the column.",
            "name": "pedigreeObject"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "Attribute component to be shown in the column.",
            "name": "attributeComp"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "True, if the user has write access to the business object in the column else false.",
            "name": "isModifiable"
          }
        ],
        "createRelease": "tc11000.4.0",
        "description": "This structure holds the query result for a single column.",
        "isPublished": "false",
        "name": "SimulationDashboardColumnInfo",
        "namespace": "CAE0::Soa::Internal::SimProc::_2017_11::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Contains the partial errors if any.",
            "name": "serviceData"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2019_06::SimProcessConfigurationManagement::SimulationDashboardFileSummaryInfo"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "List of file summary information to be shown in the summary section of the simulation dashboard view.",
            "name": "fileSummaryInfo"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2019_06::SimProcessConfigurationManagement::SimulationDashboardTableInfoDetails"
              }
            ],
            "description": "A map (<b>ItemRevision</b>, list of <i>SimulationDashboardColumnCellInfo</i>) representing the simulation dashboard table information. One entry in the map represents a row in the simulation dashboard table.",
            "name": "dashboardTableInfoDetails"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": " Number of objects to be monitored in the simulation dashboard.",
            "name": "objectsToMonitor"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "Number of objects filtered out. The objects are filtered out if the simulation dashboard configuration from the <b>CAE0ConfigRevision</b> business object contains a specific type but the objects selected for monitoring are not of the specific type.",
            "name": "objectsFiltered"
          }
        ],
        "createRelease": "tc12000.2.0",
        "description": "This is the structure that will hold the response that needs to be returned to the client. It contains results as per the simulation dashboard configuration defined on <b>CAE0ConfigRevision</b> object, needed to render the simulation dashboard table of the simulation dashboard view on the client.",
        "isPublished": "false",
        "name": "SimulationDashboardDetailsResponse",
        "namespace": "CAE0::Soa::Internal::SimProc::_2019_06::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "<b>Item Revision</b> name.",
            "name": "itemRevName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "<b>Dataset</b> name.",
            "name": "datasetName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "File name.",
            "name": "fileName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Owning user of the file.",
            "name": "fileOwningUser"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Last modified date of the file.",
            "name": "lastModifiedDate"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "<b>Item Revision</b> business object.",
            "name": "itemRevComp"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Dataset"
              }
            ],
            "description": "<b>Dataset</b> business object.",
            "name": "datasetComponent"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ImanFile"
              }
            ],
            "description": "<b>ImanFile</b> business object.",
            "name": "fileComponent"
          }
        ],
        "createRelease": "tc12000.2.0",
        "description": "This structure holds file details information to be monitored in the simulation dashboard.",
        "isPublished": "false",
        "name": "SimulationDashboardFileDetails",
        "namespace": "CAE0::Soa::Internal::SimProc::_2019_06::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Column name heading to be shown in the summary section of the simulation dashboard view.",
            "name": "columnNameHeading"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Dataset type for column heading to be shown in the summary section of simulation dashboard view.",
            "name": "datasetType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "Number of file found statuses in the file type column from the simulation dashboard table for the column heading to be shown in the summary section of the simulation dashboard view.",
            "name": "foundCount"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "Number of file ambiguous statuses for the file type column from the simulation dashbord table for the column heading to be shown in the summary section of the simulation dashboard view.",
            "name": "ambiguousCount"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "Number of file not found statuses for the file type column from the simulation dashboard table for the column heading to be shown in the summary section of the simulation dashboard view.",
            "name": "notFoundCount"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "Number of not applicable statuses for file type column in the simulation dashboard table for the column heading to be shown in the summary section of the simulation dashboard view.",
            "name": "notApplicableCount"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "Number of all the statuses for the file type column in the simulation dashboard table for the column heading to be shown in the summary section of the simulation dashboard view.",
            "name": "totalCount"
          }
        ],
        "createRelease": "tc12000.2.0",
        "description": "This structure holds the file summary information to be shown in summary section of the simulation dashboard view.",
        "isPublished": "false",
        "name": "SimulationDashboardFileSummaryInfo",
        "namespace": "CAE0::Soa::Internal::SimProc::_2019_06::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BOMLine"
              }
            ],
            "description": "The selected tool <b>BOMLine</b> to be  updated. User can perform any of the update operations specified in the Use case 3.",
            "name": "toolBOMLine"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BOMLine"
              }
            ],
            "description": "The parent tool <b>BOMLine</b> of the passed tool. In the figure above, if the user creates a tool under SimTool2, the parent of the to-be created new tool will be SimTool2. So, the <b>BOMLine</b> for SimTool2 will be passed.",
            "name": "parentToolBOMLine"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Name of the tool",
            "name": "toolName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Item ID of the tool. If no value is provided, the value is auto-generated as per the <i>Naming Rule</i> attached to the                             <i>item_id</i> property of the <b>CAE0Tool</b> business object.",
            "name": "toolItemId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Item Revision ID of the tool. If no value is provided, the value is auto-generated as per the <i>Revision Naming Rule</i>                                  attached to the <i>item_revision_id</i> property of the <b>CAE0ToolRevision</b> business object",
            "name": "toolItemRevId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Variable to differentiate between normal tool and the separator. Supported values are: &ldquo;separator&rdquo; and  &ldquo;tool&rdquo;.",
            "name": "toolType"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabConfigInfo"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "List of tabObjects to be created or updated",
            "name": "tabObjects"
          }
        ],
        "createRelease": "tc11000.2.2",
        "description": "This structure holds the information passed from the UI to create/update the tool objects and the tab objects associated with them. It will have the toolName, the tool ID, the tool revision, the type of tool ( to differentiate if the tool is a separator ), the parentToolBOMLine in case it&rsquo;s a child tool ( a tool created under an existing tool/category ) and the toolBOMLine in case it&rsquo;s an update of an already existing tool.",
        "isPublished": "false",
        "name": "CAEToolConfigInfo2",
        "namespace": "CAE0::Soa::Internal::SimProc::_2016_05::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Contains the partial errors if any.",
            "name": "serviceData"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement::CAEAnalysisDashboardFileStatus"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "List of summary information.",
            "name": "progressHeadings"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2017_11::SimProcessConfigurationManagement::SimulationDashboardPopulateInfo"
              }
            ],
            "description": "A map (<b>ItemRevision</b>, list of <i>SimulationDashboardColumnInfo</i>) representing the Simulation Dashboard information.",
            "name": "dashboardPopulateInfo"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "Number of objects to be monitored on the simulation dashboard.",
            "name": "objectsToMonitor"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "Number of objects filtered out. The objects are filtered out if the simulation dashboard configuration contained in the CAE0Config business object contains a specific type but the objects selected for monitoring are not of the specific type.",
            "name": "objectsFiltered"
          }
        ],
        "createRelease": "tc11000.4.0",
        "description": "This is the structure that will hold the response that needs to be passed back to the client. It contains query results as per the rules defined on <b>CAE0ConfigItem</b> object, needed to render the simulation dashboard view on the client.",
        "isPublished": "false",
        "name": "SimulationDashboardPopulateResp",
        "namespace": "CAE0::Soa::Internal::SimProc::_2017_11::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "The root <b>ItemRevision</b> of the output structure is returned as a part of the Created Object in the Service Data.",
            "name": "serviceData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "A summary log having a fixed format containing the results of the <i>DataMap</i> and <i>StructureMap</i> <i>rules</i> applied to the input structure and the output items created. The details include what <i>DataMap</i> and <i>StructureMap</i> <i>rules</i> were applied, type of the output item created, the Item ID of the output item, the relationships created between the input and the output <b>ItemRevision</b>. Any failures in creation of the output item or relationships are also returned as a part of the activity log. The log does not exceed 20 lines of text.",
            "name": "activityLog"
          }
        ],
        "createRelease": "tc11000.3.0",
        "description": "StructureMapExecutionResponse represents the outputs of the internal execute <i>StructureMap</i> and execute <i>Datamap</i> operations.",
        "isPublished": "true",
        "name": "StructureMapExecutionResponse",
        "namespace": "CAE0::Soa::SimProc::_2017_05::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The file ticket for the PLMXML file generated by the Lifecycle Viewer application in Teamcenter.",
            "name": "inclusionRuleFileTicket"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The name of the <b>ItemRevision</b> to be created for the inclusion rule.",
            "name": "inclusionRuleFileItemRevName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The description of the <b>ItemRevision</b> to be created for the inclusion rule.",
            "name": "inclusionRuleFileItemRevDesc"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The selected inclusion rule <b>ItemRevision</b>.",
            "name": "selectedInclusionRuleItemRev"
          }
        ],
        "createRelease": "tc11000.6.0",
        "description": "The input structure to hold all the information for inclusion rule for StructureMap execution service operation.",
        "isPublished": "false",
        "name": "StructureMapFilterInclusionRuleInfo",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_11::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ItemRevision"
              }
            ],
            "description": "<b>ItemRevision</b> of the root item of the input structure. This can be null if the <i>snapshotFolder</i> is provided as input to the operation. If the <i>rootIR</i> is not null and <i>snapshotFolder</i> is also provided as an input, then <i>rootIR</i> input will be ignored and <i>snapshotFolder</i> will take precedence.",
            "name": "rootIR"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Snapshot"
              }
            ],
            "description": "The <b>Snapshot</b> folder of the input structure. The <i>snapshotFolder</i> can be null if the root <i>rootIR</i> is used as an input to the operation. The <i>snapshotFolder</i> takes precedence over the <i>rootIR</i>.",
            "name": "snapshotFolder"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::RevisionRule"
              }
            ],
            "description": "The <b>RevisionRule</b> of the input structure. This is an optional parameter and can be provided if the root <b>ItemRevision</b> is used as an input to the operation. This parameter will be ignored if <i>snapshotFolder</i> is used as an input.",
            "name": "revRule"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::VariantRule"
              }
            ],
            "description": "The <b>VariantRule</b> for the input structure. This can be provided for both, the <i>rootIR</i> or <i>snapshotFolder</i> as input. This is an optional parameter and can be null.",
            "name": "variantRule"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The domain for the <i>Data Map rules</i> to be applied. The <i>datamapping.xml</i> file can be configured for various domains defined as LOV objects under StructureMap Domains in <i>BMIDE</i>. This argument is used to specify which domain to be used from the <i>datamapping.xml</i> file. If the value is not provided, the default is assumed to be CAE. If <b>StructureMapRevision</b> is null, then domain value will be considered and Datamapping will be executed.",
            "name": "domain"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::StructureMapRevision"
              }
            ],
            "description": "The <b>StructureMapRevision</b> containing a <b>CAEStructureMap</b> <i>Dataset</i> with an XML <i>named reference</i> containing valid <i>StructureMap rules</i>. If <b>StructureMapRevision</b> is not null, then domain value will be ignored.",
            "name": "structureMapIR"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::SimProc::_2017_05::SimStructureManagement::InputOptions"
              }
            ],
            "description": "A map (string,string) for options to be provided for StructureMap execution (e.g. (&ldquo;AsyncMode&rdquo;, &ldquo;true&rdquo;)).",
            "name": "inputOptions"
          }
        ],
        "createRelease": "tc11000.3.0",
        "description": "A structure for input parameters of executeStructureMap service operation.",
        "isPublished": "true",
        "name": "StructureMapInputsInfo",
        "namespace": "CAE0::Soa::SimProc::_2017_05::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BOMLine"
              }
            ],
            "description": "The Root <b>BOMLine</b> of the input structure loaded in a <b>BOMWindow</b>.",
            "name": "rootBOMLine"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BOMLine"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of selected <b>BOMLine</b> objects of the input structure loaded in a <b>BOMWindow</b>.",
            "name": "selectedBOMLines"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The domain for the<i> Data Map rules</i> to be applied. The <i>datamapping.xml</i> file located in <i>TC_DATA</i> can be configured for various domains defined as LOV objects under StructureMap Domains in <i>BMIDE</i>. This argument is used to specify which domain to be used from the <i>datamapping.xml</i> file. If the value is not provided, the default is assumed to be CAE. If <b>StructureMapRevision</b> is null, then domain value will be considered and Datamapping will be executed.",
            "name": "domain"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::StructureMapRevision"
              }
            ],
            "description": "The <b>StructureMapRevision</b> containing a <b>CAEStructureMap</b> Dataset with an XML <i>named reference</i> containing valid <i>StructureMap rules</i>. If <b>StructureMapRevision</b> is not null, then domain value will be ignored.",
            "name": "structureMapIR"
          }
        ],
        "createRelease": "tc11000.4.0",
        "description": "The input structure to hold all the inputs for StructureMap execution service operation.",
        "isPublished": "false",
        "name": "StructureMapInputsInfo2",
        "namespace": "CAE0::Soa::Internal::SimProc::_2017_11::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ItemRevision"
              }
            ],
            "description": "<b>ItemRevision</b> of the root item of the input structure. This can be null if the <i>snapshotFolder</i> is provided as input to the operation. If the rootIR is not null and snapshotFolder is also provided as an input, then <i>rootIR</i> input is ignored and <i>snapshotFolder</i> takes precedence.",
            "name": "rootIR"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Snapshot"
              }
            ],
            "description": "The <b>Snapshot</b> folder of the input structure. The <i>snapshotFolder</i> can be null if the root <i>rootIR</i> is used as an input to the operation. The <i>snapshotFolder</i> takes precedence over the <i>rootIR</i>.",
            "name": "snapshotFolder"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::RevisionRule"
              }
            ],
            "description": "The <b>RevisionRule</b> of the input structure. This is an optional parameter and can be provided if the root <b>ItemRevision</b> is used as an input to the operation. This parameter is ignored if <i>snapshotFolder</i> is used as an input.",
            "name": "revRule"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of <b>VariantRule</b> names for the input structure. This can be provided for both, the <i>rootIR</i> or <i>snapshotFolder</i> as input. This is an optional parameter and can be empty.",
            "name": "variantRules"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The domain for the <i>Data Map rules</i> to be applied. The <i>datamapping.xml</i> file can be configured for various domains defined as LOV objects under StructureMap Domains in <i>BMIDE</i>. This argument is used to specify which domain to be used from the <i>datamapping.xml</i> file. If the value is not provided, the default is assumed to be CAE. If <b>StructureMapRevision</b> is null, then domain value is considered and Datamapping is executed.",
            "name": "domain"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::StructureMapRevision"
              }
            ],
            "description": "The <b>StructureMapRevision</b> containing a <b>CAEStructureMap</b> <i>Dataset</i> with an XML <i>named reference</i> containing valid <i>StructureMap rules</i>. If <b>StructureMapRevision</b> is not null, then domain value is ignored.",
            "name": "structureMapIR"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimStructureManagement::SelectedBOMLineInfo"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of <i>SelectedBOMLineInfo</i> structure containing attribute values of selected <b>BOMLine</b> objects. Attributes of <b>BOMLine</b> include &ldquo;<i>Clone Stable Occ Id</i>&rdquo; and Level.",
            "name": "selectedBOMLineInfo"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The owning <b>User</b> to be set for the output objects.",
            "name": "targetOwningUser"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The owning <b>Group</b> of the <b>User</b> to be set for the output objects.",
            "name": "targetOwningGroup"
          }
        ],
        "createRelease": "tc11000.6.0",
        "description": "A structure for input parameters of generateCAEStructOnSelectionAsync service operation.",
        "isPublished": "false",
        "name": "StructureMapInputsInfo3",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_11::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Target References Service Data.",
            "name": "targetReferencesServiceData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement::ParentToChildTargetReferenceStructure"
              }
            ],
            "description": "Target References  parent to childlines structure.",
            "name": "targetReferencesLineNodes"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "The response for TargetReferencesViewDataResponseoperation. Target References View Data Response returns us the Data Structure needed for building the View and service data with<br />appropriate error messages, if encountered.",
        "isPublished": "false",
        "name": "TargetReferencesViewDataResponse",
        "namespace": "CAE0::Soa::Internal::SimProc::_2015_03::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Target References Service Data.",
            "name": "targetReferencesServiceData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2016_03::SimStructureManagement::ParentToChildTargetReferenceStructure2"
              }
            ],
            "description": "Target References parent to childlines structure.",
            "name": "targetReferencesLineNodes"
          }
        ],
        "createRelease": "tc10000.1.6",
        "description": "The response for TargetReferencesViewDataResponse operation. Target References View Data Response returns us the Data Structure needed for building the View and service data with<br />appropriate error messages, if encountered.",
        "isPublished": "false",
        "name": "TargetReferencesViewDataResponse2",
        "namespace": "CAE0::Soa::Internal::SimProc::_2016_03::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Item"
              }
            ],
            "description": "A <b>CAE0Tool</b> which has at least a released <b>CAE0ToolRevision</b> containing the configuration of a CAE tool that can be executed on the output structure generated by StructureMap operation.",
            "name": "tool"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of supported launch types that CAE tool configured by the latest released<b> </b>revision of <b>CAE0Tool</b>. The launch types can be &ldquo;Local&rdquo;, &ldquo;Remote&rdquo;, or &ldquo;Server&rdquo;.",
            "name": "supportedLaunchTypes"
          }
        ],
        "createRelease": "tc11000.6.0",
        "description": "The structure contains the Simulation tools and their supported launch types.",
        "isPublished": "false",
        "name": "ToolAndSupportedLaunchTypeInfo",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_11::SimulationToolLaunch",
        "scope": "CAE0::Soa::SimProc::SimulationToolLaunch"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Identifier of the tab",
            "name": "tabIdentifier"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::SimProc::_2015_10::SimProcessConfigurationManagement::TabPropVals"
              }
            ],
            "description": "Property name value map (string, string) of tab object.",
            "name": "toolTabMap"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::SimProc::_2015_10::SimProcessConfigurationManagement::ToolTabValue"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "List of referenced property names with values for the  tab.",
            "name": "internalProps"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "This structure contains the information of tab object along with its name, properties and associated referenced properties if any.<br />For example, the InputConfiguration tab, the tabIdentifier will be CAEToolInputConfigTab,the toolTabMap will hold the information of the properties of the tab and the internamePropsVector will hold the information about the properties of the referenced object like Rules.",
        "isPublished": "true",
        "name": "ToolTabValue",
        "namespace": "CAE0::Soa::SimProc::_2015_10::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ItemRevision"
              }
            ],
            "description": "The tool object to be returned.",
            "name": "toolObject"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabPropsValueInfo"
              }
            ],
            "description": "The structure containing all the properties of the tab.",
            "name": "toolTabPropValue"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolItemPropStruct"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The array of the child tools of this tool.",
            "name": "childTools"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "This structure contains the information about the tool object, its properties and the associated tabs as well as the child tools and corresponding properties.",
        "isPublished": "false",
        "name": "CAEToolItemPropStruct",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "The Service Data containing partial errors.",
            "name": "serviceData"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::SimProc::_2015_10::SimProcessConfigurationManagement::ToolTabsMaster"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The structure that contains the tool information as well as the properties of the tabs.",
            "name": "toolTabsMaster"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "The response contains information about the Simulation Tools along with Service Data.",
        "isPublished": "true",
        "name": "ToolTabsInfo",
        "namespace": "CAE0::Soa::SimProc::_2015_10::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "UID of the tool.",
            "name": "toolUID"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::SimProc::_2015_10::SimProcessConfigurationManagement::ToolTabValue"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The properties of the tabs.",
            "name": "toolTabValue"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "This structure contains UID of the tool object, its properties and the associated tabs information.",
        "isPublished": "true",
        "name": "ToolTabsMaster",
        "namespace": "CAE0::Soa::SimProc::_2015_10::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Partial errors if any are returned as a part of the serviceData.",
            "name": "serviceData"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimulationToolLaunch::ToolAndSupportedLaunchTypeInfo"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of ToolAndSupportedLaunchTypeInfo containing the configuration of a CAE tool that can be executed on output structure generated by the StructureMap operation and list of launch types it supports.",
            "name": "validSimulationTools"
          }
        ],
        "createRelease": "tc11000.6.0",
        "description": "The response structure contains the list of valid Simulation tools.",
        "isPublished": "false",
        "name": "ToolsForStructureMapResponse",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_11::SimulationToolLaunch",
        "scope": "CAE0::Soa::SimProc::SimulationToolLaunch"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Represents the name of the tab",
            "name": "tabIdentifier"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "Determines whether the tab is inherited or not.",
            "name": "isInherited"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CreateInput"
              }
            ],
            "description": "Represents the input attributes for the tab",
            "name": "tabAttributes"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "This structure represents the tab object associated with a tool",
        "isPublished": "false",
        "name": "CAEToolTabConfigInfo",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Business Object name of tab.",
            "name": "boName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::StringMap"
              }
            ],
            "description": "Property name value map (string, string) of tab objects.",
            "name": "propNameValueMap"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::ReferencePropMap"
              }
            ],
            "description": "Property name value map(string, vector<CAEToolTabProps>) of referenced objects of tab.",
            "name": "refObjNameValueMap"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "This structure contains the information property name value of referenced objects to the associated tab object. For example, the InputConfiguration tab, the boName object will be CAEToolInputConfigTab, the propNameValueMap will hold the information of the properties of the tab and the refObjNameValueMap will hold the information about the properties of the reference object like Rules.",
        "isPublished": "false",
        "name": "CAEToolTabProps",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      }
    ],
    "TcVersion": "tc13000.0.0",
    "Typedef": [
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "bool"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "Map of bool property names to values",
        "isPublished": "false",
        "name": "BoolMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "bool"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "Map of bool array property names to values",
        "isPublished": "false",
        "name": "BoolVectorMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::DateTime"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "Map of DateTime array property names to values (<font face=\"courier\" height=\"10\">string, vector<DateTime></font>).",
        "isPublished": "false",
        "name": "DateVectorMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "double"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "Map contains a list of <name, value> pairs (<font face=\"courier\" height=\"10\">string, double</font>).  Each pair stores information for a double property. In each pair, name is the property name and value is a double for the property.",
        "isPublished": "false",
        "name": "DoubleMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "double"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "Map contains a list of <name, valueList> pairs (<font face=\"courier\" height=\"10\">string, vector< double></font>).  Each pair stores information for a double array property. In each pair, name is the property name and value is a list of doubles for the property.",
        "isPublished": "false",
        "name": "DoubleVectorMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ImanFile"
              },
              {
                "dataType": "Teamcenter::Dataset"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc11000.2.3",
        "description": "Map contains a list of pairs (<b>ImanFile</b>, <b>Dataset</b>).",
        "isPublished": "false",
        "name": "FileToDatasetMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2016_10::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ImanFile"
              },
              {
                "dataType": "Teamcenter::Dataset"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc11000.5.0",
        "description": "Map contains a list of pairs (<b>ImanFile</b>, <b>Dataset</b>).",
        "isPublished": "false",
        "name": "FileToDatasetMap2",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_06::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ImanFile"
              },
              {
                "dataType": "std::string"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc11000.5.0",
        "description": "Map contains a list of pairs (<b>ImanFile</b>, <b>String</b>).",
        "isPublished": "false",
        "name": "FileToFolderPathMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_06::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ImanFile"
              },
              {
                "dataType": "Teamcenter::ItemRevision"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc11000.2.3",
        "description": "Map contains a list of pairs (<b>ImanFile</b>, <b>ItemRevision</b>).",
        "isPublished": "false",
        "name": "FileToItemRevisionMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2016_10::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ImanFile"
              },
              {
                "dataType": "Teamcenter::ItemRevision"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc11000.5.0",
        "description": "Map contains a list of pairs (<b>ImanFile</b>, <b>ItemRevision</b>).",
        "isPublished": "false",
        "name": "FileToItemRevisionMap2",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_06::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "float"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "Map contains a list of <name, value> pairs (<font face=\"courier\" height=\"10\">string, float</font>).  Each pair stores information for a float property. In each pair,  name is the property name and value is a float for the property.",
        "isPublished": "false",
        "name": "FloatMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "float"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "Map contains a list of <name, valueList> pairs (<font face=\"courier\" height=\"10\">string, vector< float></font>).  Each pair stores information for a float array property. In each pair, name is the property name and  value is a list of floats for the property.",
        "isPublished": "false",
        "name": "FloatVectorMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::CAEAnalysisRevision"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement::CAEAnalysisDashboardColumnInfo"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc11000.2.3",
        "description": "A map of <b>CAEAnalysisRevision</b> objects and <i>CAEDashBoardColumnInfo</i> representing the related column information.",
        "isPublished": "false",
        "name": "CAEAnalysisDashboardPopulateInfo",
        "namespace": "CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BOMLine"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc11000.3.0",
        "description": "Map contains a list of pairs (<b>String, List&lt;BOMLine&gt;</b>).<br /><ul><ul><li type=\"disc\">Valid keys returned are &ldquo;recycled&rdquo;, &ldquo;reused&rdquo; and &ldquo;unique&rdquo;.</li><li type=\"disc\">The value is a list of BOMLine objects belonging to a particular key.</li></ul></ul>",
        "isPublished": "false",
        "name": "HighlightModelMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2017_05::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "std::string"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc11000.3.0",
        "description": "A map (string,string) for options to be provided for StructureMap execution (e.g. (&ldquo;AsyncMode&rdquo;, &ldquo;true&rdquo;)).",
        "isPublished": "true",
        "name": "InputOptions",
        "namespace": "CAE0::Soa::SimProc::_2017_05::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "int"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "Map contains a list of <name, value> pairs <font face=\"courier\" height=\"10\">(string, vector< int></font>).  Each pair stores information for an int property. In each pair,  name is the property name and value is an int value for the property.",
        "isPublished": "false",
        "name": "IntMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "int"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "Map contains a list of <name, valueList> pairs (<font face=\"courier\" height=\"10\">string, int</font>).  Each pair stores information for an int array property. In each pair, name is the property name and  value is the list of ints for the property.",
        "isPublished": "false",
        "name": "IntVectorMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "std::string"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.6",
        "description": "Map of item revision property internal name and value.",
        "isPublished": "false",
        "name": "PropNameValueInfo",
        "namespace": "CAE0::Soa::Internal::SimProc::_2016_03::SimStructureManagement",
        "scope": "CAE0::Soa::SimProc::SimStructureManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CAEToolTabProps"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "This map contains the information of the reference object(s) of the tab object and list of its reference object's property values. For example input configuration tab has one of the reference object as Primary Input List, so this map will contains the list of property values for Primary Input List.<br /><ul><ul><li type=\"disc\">std::string&nbsp;&nbsp;&nbsp;&nbsp;     Key in the Map, representing reference object of Tool</li><li type=\"disc\">std::vector <CAEToolTabProps> Value in the Map, representing the list of property values for reference objects.</li></ul></ul>",
        "isPublished": "false",
        "name": "ReferencePropMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ItemRevision"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2017_11::SimProcessConfigurationManagement::SimulationDashboardColumnInfo"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc11000.4.0",
        "description": "A map (<b>ItemRevision</b>, list of <i>SimulationDashboardColumnInfo</i>) representing the simulation dashboard information.",
        "isPublished": "false",
        "name": "SimulationDashboardPopulateInfo",
        "namespace": "CAE0::Soa::Internal::SimProc::_2017_11::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::ItemRevision"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2019_06::SimProcessConfigurationManagement::SimulationDashboardColumnCellInfo"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc12000.2.0",
        "description": "A map (<b>ItemRevision</b>, list of <i>SimulationDashboardColumnCellInfo</i>) representing the simulation dashboard table information. One entry in the map represents a row in the simulation dashboard table.",
        "isPublished": "false",
        "name": "SimulationDashboardTableInfoDetails",
        "namespace": "CAE0::Soa::Internal::SimProc::_2019_06::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "std::string"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "Map of string property names to values (<font face=\"courier\" height=\"10\">string, string</font>).",
        "isPublished": "false",
        "name": "StringMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "Map of string array property names to values (<font face=\"courier\" height=\"10\">string, vector<string></font>).",
        "isPublished": "false",
        "name": "StringVectorMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement::Cae0CreateObjectInput"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc11000.6.0",
        "description": "Map (string/list of <i>Cae0CreateObjectInput</i>) of reference or relation property name to secondary <i>Cae0CreateObjectInput</i> objects.",
        "isPublished": "false",
        "name": "Cae0CreateObjectInputMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement",
        "scope": "CAE0::Soa::SimProc::SimDataManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "std::vector<std::string>"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc11000.2.3",
        "description": "Map (string, list of strings) of attribute and value(s) which will be used to query all the configuration items.",
        "isPublished": "false",
        "name": "StringVectorMap2",
        "namespace": "CAE0::Soa::Internal::SimProc::_2016_10::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "std::string"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "Map of string property names to values (string, string).",
        "isPublished": "true",
        "name": "TabPropVals",
        "namespace": "CAE0::Soa::SimProc::_2015_10::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "Map of <b>BusinessObject</b> property names to values (<font face=\"courier\" height=\"10\">string, BusinessObject</font>).",
        "isPublished": "false",
        "name": "TagMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "Map of <b>BusinessObject</b> array property names to values (<font face=\"courier\" height=\"10\">string, vector<BusinessObject></font>).",
        "isPublished": "false",
        "name": "TagVectorMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement::Cae0CreateObjectInput2"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc12000.4.0",
        "description": "Map (string, list of <i>Cae0CreateObjectInput2</i>) of reference or relation property name to secondary <i>Cae0CreateObjectInput2</i> objects.",
        "isPublished": "false",
        "name": "Cae0CreateObjectInputMap2",
        "namespace": "CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement",
        "scope": "CAE0::Soa::SimProc::SimDataManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc11000.6.0",
        "description": "Map (string/list of strings) of property name to property values in string format, to be set on new object being created.",
        "isPublished": "false",
        "name": "Cae0PropertyValuesMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2018_11::SimDataManagement",
        "scope": "CAE0::Soa::SimProc::SimDataManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc12000.4.0",
        "description": "Map (string/list of strings) of property name to property values in string format, to be set on new object being created.",
        "isPublished": "false",
        "name": "Cae0PropertyValuesMap2",
        "namespace": "CAE0::Soa::Internal::SimProc::_2020_04::SimDataManagement",
        "scope": "CAE0::Soa::SimProc::SimDataManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "int"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc13000.2.0",
        "description": "Map (string/list of int) of item id pattern to allocated counters for pattern keyword N.",
        "isPublished": "false",
        "name": "Cae0StringToIntListMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2021_06::SimDataManagement",
        "scope": "CAE0::Soa::SimProc::SimDataManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement::CreateInput"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "Map of reference or relation property name to secondary <font face=\"courier\" height=\"10\">CreateInput</font> objects (<font face=\"courier\" height=\"10\">string, vector<CreateInput></font>).",
        "isPublished": "false",
        "name": "CreateInputMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "Teamcenter::DateTime"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.3",
        "description": "Map of date property names to values (<font face=\"courier\" height=\"10\">string, date</font>).",
        "isPublished": "false",
        "name": "DateMap",
        "namespace": "CAE0::Soa::Internal::SimProc::_2014_12::SimProcessConfigurationManagement",
        "scope": "CAE0::Soa::SimProc::SimProcessConfigurationManagement"
      }
    ],
    "xmlns": "http://teamcenter.com/BusinessModel/TcBusinessData"
  }
