{
    "BusinessObjectInterface": [
      {
        "createRelease": "tc10000.1.5",
        "description": "Interface Name for Business Object Att1AROutputAttrsProvider",
        "libraryName": "Att1AttrTargetMgmtAW",
        "name": "Att1AROutputAttrsProvider",
        "namespace": "att1attrtargetmgmtaw",
        "primaryInterface": "true",
        "typeName": "Att1AROutputAttrsProvider"
      },
      {
        "createRelease": "Awp03.4.0",
        "description": "Interface Name for Business Object Att1AttributeAlignmentProxy",
        "libraryName": "Att1AttrTargetMgmtAW",
        "name": "Att1AttributeAlignmentProxy",
        "namespace": "att1attrtargetmgmtaw",
        "primaryInterface": "true",
        "typeName": "Att1AttributeAlignmentProxy"
      },
      {
        "createRelease": "Awp04.1.0",
        "description": "Interface Name for Business Object Att1ParametersProvider",
        "libraryName": "Att1AttrTargetMgmtAW",
        "name": "Att1ParametersProvider",
        "namespace": "att1attrtargetmgmtaw",
        "primaryInterface": "true",
        "typeName": "Att1ParametersProvider"
      },
      {
        "createRelease": "tc10000.1.5",
        "description": "Interface Name for Business Object Att1PrimaryObjectsProvider",
        "libraryName": "Att1AttrTargetMgmtAW",
        "name": "Att1PrimaryObjectsProvider",
        "namespace": "att1attrtargetmgmtaw",
        "primaryInterface": "true",
        "typeName": "Att1PrimaryObjectsProvider"
      },
      {
        "createRelease": "Awp04.2.0",
        "description": "Interface Name for Business Object Att1ProjectConfRuleProvider",
        "libraryName": "Att1AttrTargetMgmtAW",
        "name": "Att1ProjectConfRuleProvider",
        "namespace": "att1attrtargetmgmtaw",
        "primaryInterface": "true",
        "typeName": "Att1ProjectConfRuleProvider"
      },
      {
        "createRelease": "Awp03.4.0",
        "description": "Interface Name for Business Object Att1AttributeMapProvider",
        "libraryName": "Att1AttrTargetMgmtAW",
        "name": "Att1AttributeMapProvider",
        "namespace": "att1attrtargetmgmtaw",
        "primaryInterface": "true",
        "typeName": "Att1AttributeMapProvider"
      },
      {
        "createRelease": "tc10000.1.5",
        "description": "Interface Name for Business Object Att1EnabledDefinitionProvider",
        "libraryName": "Att1AttrTargetMgmtAW",
        "name": "Att1EnabledDefinitionProvider",
        "namespace": "att1attrtargetmgmtaw",
        "primaryInterface": "true",
        "typeName": "Att1EnabledDefinitionProvider"
      },
      {
        "createRelease": "Awp04.2.0",
        "description": "Interface Name for Business Object Att1GetRecipesProvider",
        "libraryName": "Att1AttrTargetMgmtAW",
        "name": "Att1GetRecipesProvider",
        "namespace": "att1attrtargetmgmtaw",
        "primaryInterface": "true",
        "typeName": "Att1GetRecipesProvider"
      },
      {
        "createRelease": "Awp04.0.0",
        "description": "Interface Name for Business Object Att1ListOfValuesLOV",
        "libraryName": "Att1AttrTargetMgmtAW",
        "name": "Att1ListOfValuesLOV",
        "namespace": "att1attrtargetmgmtaw",
        "primaryInterface": "true",
        "typeName": "Att1ListOfValuesLOV"
      },
      {
        "createRelease": "tc10000.1.5",
        "description": "Interface Name for Business Object Att1MeasurableAttributesProvider",
        "libraryName": "Att1AttrTargetMgmtAW",
        "name": "Att1MeasurableAttributesProvider",
        "namespace": "att1attrtargetmgmtaw",
        "primaryInterface": "true",
        "typeName": "Att1MeasurableAttributesProvider"
      },
      {
        "createRelease": "tc10000.1.5",
        "description": "Interface Name for Business Object Att1MeasuredValuesProvider",
        "libraryName": "Att1AttrTargetMgmtAW",
        "name": "Att1MeasuredValuesProvider",
        "namespace": "att1attrtargetmgmtaw",
        "primaryInterface": "true",
        "typeName": "Att1MeasuredValuesProvider"
      },
      {
        "createRelease": "Awp04.0.0",
        "description": "Interface Name for Business Object Att1MeasurementFileProvider",
        "libraryName": "Att1AttrTargetMgmtAW",
        "name": "Att1MeasurementFileProvider",
        "namespace": "att1attrtargetmgmtaw",
        "primaryInterface": "true",
        "typeName": "Att1MeasurementFileProvider"
      },
      {
        "createRelease": "Awp04.2.0",
        "description": "Interface Name for Business Object Att1ParamCompareProvider",
        "libraryName": "Att1AttrTargetMgmtAW",
        "name": "Att1ParamCompareProvider",
        "namespace": "att1attrtargetmgmtaw",
        "primaryInterface": "true",
        "typeName": "Att1ParamCompareProvider"
      }
    ],
    "Date": "Fri Aug 30 10:26:01 AM 2019",
    "Library": [
      {
        "DependentOn": [
          {
            "name": "metaframework"
          },
          {
            "name": "tccore"
          },
          {
            "name": "tc"
          },
          {
            "name": "cxpom"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "Measurable Attributes and Targets Library for Active Workspace",
        "isThirdParty": "false",
        "name": "Att1AttrTargetMgmtAW",
        "namespace": "",
        "serviceLibrary": "false"
      },
      {
        "createRelease": "tc10000.1.4",
        "description": "Measurable Attribute and Target Management SOA for Active Workspace",
        "isThirdParty": "false",
        "name": "Att1SoaAttrTargetMgmtAW",
        "namespace": "Att1::Soa::AttrTargetMgmtAW",
        "serviceLibrary": "true"
      }
    ],
    "MetaEnum": [
      {
        "MetaEnumLiteral": [
          {
            "description": "",
            "name": "SetInput"
          },
          {
            "description": "",
            "name": "SetOutput"
          },
          {
            "description": "",
            "name": "UnsetInput"
          },
          {
            "description": "",
            "name": "UnsetOutput"
          },
          {
            "description": "",
            "name": "SetInputAsOutput"
          },
          {
            "description": "",
            "name": "SetOutputAsInput"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "The action to peform on given Measurable Attribute.",
        "isPublished": "true",
        "name": "AssignAction",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "MetaEnumLiteral": [
          {
            "description": "",
            "name": "SOURCEATTR"
          },
          {
            "description": "",
            "name": "OVERRIDDENATTR"
          },
          {
            "description": "",
            "name": "INPUTATTR"
          },
          {
            "description": "",
            "name": "SYNCCANDIDATE"
          },
          {
            "description": "",
            "name": "OUTPUTATTR_NOTUPDATE"
          },
          {
            "description": "",
            "name": "OUTPUTATTR_PUBLISHCANDIDATE"
          },
          {
            "description": "",
            "name": "OUTPUTATTR_PUBLISHED"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "The AttributeType represents runtime role of a MeasurableAttribue. Runtime actions are performed based on this type.",
        "isPublished": "true",
        "name": "AttributeType",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "MetaEnumLiteral": [
          {
            "description": "",
            "name": "SyncFromSource"
          },
          {
            "description": "",
            "name": "PublishToSource"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "<b>SyncFromSource</b> - Synchonization happens from source <i>Att0MeasurableAttribute</i> objects to input <i>Att0MeasurableAttribute</i> objects.<br /><b>PublishToSource</b> - Synchonization happens from output <i>Att0MeasurableAttribute</i> objects to source <i>Att0MeasurableAttribute</i> objects.",
        "isPublished": "true",
        "name": "SyncDirection",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      }
    ],
    "Operation": [
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "this operation does not support setting Input/Output Attributes on Analysis Request, please use operation VCManagement::setMeasurableAttributeDirection.",
            "deprecatedRelease": "Awp04.1.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "The measurable attribute assignment inputs.",
            "parameterName": "inputs"
          },
          {
            "description": "The measurable attribute assignment configuration.",
            "parameterName": "pref"
          }
        ],
        "canOverride": "false",
        "component": "Att1AttTargetMgmtAW",
        "createRelease": "tc10000.1.4",
        "dependencies": "",
        "description": "This operation is used to assign measurable attributes (Att0MeasurableAttribute) objects to given WorkspaceObject as input or output attributes for product validation or measurement. <br />When an Att0MeasurableAttribute is assigned as input or output attribute, a save-as operation is performed against the source attribute object and new relations will be created to link the new Att0MeasurableAttribute with parent WorkspaceObject. Any update on source attribute will not impact input or output attribute object, and on the contrary.<br />",
        "exceptionCondition": "",
        "id": "assignMeasurableAttributes#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::AssignMeasurableAttributeInput>,&$const,Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::AssignMeasurableAttributePref,&",
        "interface": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "assignMeasurableAttributes",
        "opTemplate": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::AssignMeasurableAttributesResponse#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::assignMeasurableAttributes#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::AssignMeasurableAttributeInput>,&$const,Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::AssignMeasurableAttributePref,&",
        "returnDescription": "A map of client identifier to the Att0MeasurableAttribute objects. The following partial errors may be returned:<br />185401 - Invalid input or output parent object.<br />185405 - Input/output parent object is null.<br />185406 - The measurable attribute parameter is null.<br />185407 - The parent line must provide to set input/output measurable attribute.<br />185408 - The context line must provide to set input/output measurable attribute.<br />185409 - System does not support the given assign action.<br />185410 - The system does not support the \"Assign\" action on top lines.",
        "useCase": "1. A system architect creates a product structure of logical blocks (Fnd0LogicalBlock), and defines for each block its measurable attributes (Att0MeasurableAttribute). As the design of the product architecture evolves, the system architect sets a logical block attribute (Att0MeasurableAttribute) as an input of the validation context(WorkspaceObject), the system builds a copy of the attribute for the validation context, and create related links from input attribute to validation context. <br />2. A system architect creates a product structure of logical blocks (Fnd0LogicalBlock), and defines for each block its measurable attributes (Att0MeasurableAttribute), then sets a logical block attribute (Att0MeasurableAttribute) as an output of the validation context(WorkspaceObject).<br />However design changes and system architect needs to un-set the output attribute for the validation context, the system deletes the output attributes as well as its related output relations with validation context.<br />3. A system architect creates a product structure of logical blocks (Fnd0LogicalBlock), and defines for each block its measurable attributes (Att0MeasurableAttribute), then sets a logical block attribute (Att0MeasurableAttribute) as an input of the validation context(WorkspaceObject). However design changes and system architect needs to re-set an input attribute as the output attribute of the validation context, the system deletes the input attributes as well as its related input relations, then builds a new copy of the source input attribute as an output attribute for the validation context and creates related links from output attribute to validation context."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "this operation does not support setting Input/Output Attributes on Analysis Request, please use operation VCManagement::setMeasurableAttributeDirection.",
            "deprecatedRelease": "Awp04.1.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "The measurable attribute assignment inputs.",
            "parameterName": "inputs"
          },
          {
            "description": "The measurable attribute assignment configuration.",
            "parameterName": "pref"
          }
        ],
        "canOverride": "false",
        "component": "Att1AttTargetMgmtAW",
        "createRelease": "tc10000.1.5",
        "dependencies": "",
        "description": "This operation assigns measurable attribute (Att0MeasurableAttribute) objects to given WorkspaceObject as input or output attributes for product validation or measurement.<br /><br />When an Att0MeasurableAttribute is assigned as input or output attribute, a save-as operation is performed against the source attribute object and new relations will be created to link the new Att0MeasurableAttribute with parent WorkspaceObject. Parent Validaiton context (WorkspaceObject ) attribute can be set as Input or attribute in associated Study(WorkspaceObject). Any update on source attribute will not impact input or output attribute object, and on the contrary.",
        "exceptionCondition": "",
        "id": "assignMeasurableAttributes2#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::AssignMeasurableAttributeInput2>,&$const,Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::AssignMeasurableAttributePref2,&",
        "interface": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "assignMeasurableAttributes2",
        "opTemplate": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::AssignMeasurableAttributesResponse2#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::assignMeasurableAttributes2#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::AssignMeasurableAttributeInput2>,&$const,Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::AssignMeasurableAttributePref2,&",
        "returnDescription": "Returns: <br />A map of client identifier to the Att0MeasurableAttribute objects. The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">185401 - Invalid input or output parent object.</li><li type=\"disc\">185405 - Input/output parent object is null.</li><li type=\"disc\">185406 - The measurable attribute parameter is null.</li><li type=\"disc\">185407 - The parent line must provide to set input/output measurable attribute.</li><li type=\"disc\">185408 - The context line must provide to set input/output measurable attribute.</li><li type=\"disc\">185409 - System does not support the given assign action.</li></ul></ul>",
        "useCase": "1. A system architect creates a product structure of logical blocks (Fnd0LogicalBlock), and defines for each block its measurable attributes (Att0MeasurableAttribute). As the design of the product architecture evolves, the system architect sets a logical block attribute (Att0MeasurableAttribute) as an input of the validation context(WorkspaceObject), the system builds a copy of the attribute for the validation context(WorkspaceObject), and create related links from input attribute to validation context(WorkspaceObject). System architect can set available Attribute from Validation Context (WorkspaceObject) in Study(WorkspaceObject) as Input or Output for further specific analysis.<br />2. A system architect creates a product structure of logical blocks (Fnd0LogicalBlock), and defines for each block its measurable attributes (Att0MeasurableAttribute), then sets a logical block attribute (Att0MeasurableAttribute) as an input or output of the validation context(WorkspaceObject). System architect sets Validation Context(WorkspaceObject) attribute as Input or Output on Study(WorkspaceObject). However design changes and system architect needs to un-set the output attribute for the validation context(WorkspaceObject), the system deletes the output attributes as well as its related output relations with validation context(WorkspaceObject). If Validation Context(WorkspaceObject) attribute is used in Study(WorkspaceObject) system will warn user to proceed or not about attribute reference in Study(WorkspaceObject), before deleting its reference from Study(WorkspaceObject). User can ignore or proceed.<br />3. A system architect creates a product structure of logical blocks (Fnd0LogicalBlock), and defines for each block its measurable attributes (Att0MeasurableAttribute), then sets a logical block attribute (Att0MeasurableAttribute) as an input of the validation context(WorkspaceObject). System architect sets Validation Context(WorkspaceObject) attribute as Input or Output on Study(WorkspaceObject). However design changes and system architect needs to re-set an input attribute as the output attribute of the validation context(WorkspaceObject), the system deletes the input attributes as well as its related input relations, then builds a new copy of the source input attribute as an output attribute for the validation context(WorkspaceObject) and creates related links from output attribute to validation context(WorkspaceObject). If Validation Context(WorkspaceObject) attribute is referenced in Study(WorkspaceObject) and user changes the direction of Validation Context(WorkspaceObject) attribute from input to output or vice-versa, system will automatically change the direction of referenced attribute in Study(WorkspaceObject). Before direction change, system will warn user to proceed or not. User can ignore operation or proceed.<br />4. A system architect creates a product structure of logical blocks (Fnd0LogicalBlock), and defines for each block its measurable attributes (Att0MeasurableAttribute), then sets a logical block attribute (Att0MeasurableAttribute) as an input of the validation context(WorkspaceObject). System architect may set Validation Context(WorkspaceObject) attribute as Input or Output on Study(WorkspaceObject). However in case of re-set or change direction of Validation Context(WorkspaceObject) attribute, system will not warn, if there is no impact on Studies. System will delete or change direction  of attribute in Validation Context(WorkspaceObject) only."
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of structures containing the details to create the measurable attribute mapping for the given elements or attributes.",
            "parameterName": "inputs"
          },
          {
            "description": "A structure to define the preferences for mapping measurable attributes.",
            "parameterName": "pref"
          }
        ],
        "canOverride": "false",
        "component": "Att1AttTargetMgmtAW",
        "createRelease": "Awp03.4.0",
        "dependencies": "",
        "description": "Create the measurable attribute mappings for the given attributes and or elements.<br />For one given attribute, this SOA retrieves the connected elements via the trace link to the source element. And create the measurable attribute mappings between the given attribute and attributes under the connected elements.<br />For one given element, this SOA retrieves the connected elements via the trace link. And create the measurable attribute mappings between the attributes under the given element and attributes under the connected elements.",
        "exceptionCondition": "",
        "id": "mapMeasurableAttributes2#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrInput2>,&$const,Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrPref2,&",
        "interface": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "mapMeasurableAttributes2",
        "opTemplate": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrResp2#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::mapMeasurableAttributes2#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrInput2>,&$const,Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrPref2,&",
        "returnDescription": "Contains a list of MapMeasurableAttrOutput2 structures (which contain the created <b>Att0AttributeAlignment</b> objects). Any created objects will be sent back in the standard ServiceData lists of created objects. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors.<br /><ul><ul><li type=\"disc\">185418:    The map object type should be type of <b>Att0AbstractMapping</b>.</li><li type=\"disc\">185419:    The alignment object type should be type of <b>Att0AttributeAlignment</b>.</li></ul></ul>",
        "useCase": ""
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of structures containing the details to remove parameters.",
            "parameterName": "inputs"
          },
          {
            "description": "If true, delete the given parameter permanently from the database; otherwise, remove the given parameter from the parent object but the parameter still exists in the database.",
            "parameterName": "toDelete"
          }
        ],
        "canOverride": "false",
        "component": "Att1AttTargetMgmtAW",
        "createRelease": "Awp04.3.0",
        "dependencies": "",
        "description": "Remove given Parameters from the parent object. If the flag toDelete is true, this operation deletes the given parameters permanently from the database. Note, users MUST have the WRITE access on the parent object to perform this operation. To delete the parameters, users MUST have the WRITE access on the parameters. This operation doesn&rsquo;t support the parent Crt0VldnContractRevision and or Crt0StudyRevision.",
        "exceptionCondition": "",
        "id": "removeParameters#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement::RemoveParametersInput>,&$bool",
        "interface": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "removeParameters",
        "opTemplate": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement::RemoveParametersResp#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::removeParameters#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement::RemoveParametersInput>,&$bool",
        "returnDescription": "The removed/deleted parameters. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors. This operation doesn&rsquo;t support the parent Crt0VldnContractRevision and or Crt0StudyRevision.<br /><br />* 185450: You don&rsquo;t have the WRITE access for the given parent.<br /><br />* 185453: The system cannot remove the parameter from the parent because it is used in one or multiple Occurrences and or Verification Requests.<br /><br />* 185454: The system cannot delete the parameter because it is used in orne or multiple Parameter Projects, Occurrences and or Verification Requests.<br /><br />* 185455: The system cannot delete the parameter because you don&rsquo;t have the WRITE access for it.",
        "useCase": ""
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of structures containing the details to replace given Parameters.",
            "parameterName": "inputs"
          }
        ],
        "canOverride": "false",
        "component": "Att1AttTargetMgmtAW",
        "createRelease": "Awp04.3.0",
        "dependencies": "",
        "description": "Replaces given Parameters with related target Parameters under the parent object. Alternatively, revise given Parameters and replace them with newly revised Parameters under the parent object. Note, users MUST have the WRITE access on the parent object to perform this operation. Replacing Parameters is not supported for the parent object, such as Att0ParamProject, Att0ParamGroup, Crt0VldnContractRevision and Crt0StudyRevision.",
        "exceptionCondition": "",
        "id": "replaceParameters#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement::ReplaceParametersInput>,&",
        "interface": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "replaceParameters",
        "opTemplate": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement::ReplaceParametersResp#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::replaceParameters#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement::ReplaceParametersInput>,&",
        "returnDescription": "Contains a list of ReplaceParametersOutput structures (which contain the replaced/target Parameters). Any created objects will be sent back in the standard ServiceData lists of created objects. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors. Replacing Parameters is not supported for the parent object, such as Att0ParamProject, Att0ParamGroup, Crt0VldnContractRevision and Crt0StudyRevision.<br /><br />* 185450: You MUST have the WRITE access for the given parent.<br /><br />* 185451: Replacing Parameters is not supported for the given parent.<br /><br />* 185452: The system cannot replace the given parameter, because the target parameter is owned by a different parameter thread.",
        "useCase": ""
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of SetParamsDirectionInput structure.",
            "parameterName": "inputs"
          }
        ],
        "canOverride": "false",
        "component": "Att1AttTargetMgmtAW",
        "createRelease": "Awp05.1.0",
        "dependencies": "",
        "description": "This operation sets the direction for the selected Parameters on the given parent. By default, one parameter can be set as input on the multiple parents, and as output on a single parent. If set the same parameter as output on multiple parents, this operation ignores the parameter and shows the error message. If the parent is type of Awb0Element,  the operation sets the direction between the corresponding underlying object of Awb0Element and the selected parameter.",
        "exceptionCondition": "",
        "id": "setParametersDirection#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2020_12::AttributeTargetManagement::SetParamsDirectionInput>,&",
        "interface": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "setParametersDirection",
        "opTemplate": "Att1::Soa::AttrTargetMgmtAW::_2020_12::AttributeTargetManagement::SetParamsDirectionResp#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::setParametersDirection#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2020_12::AttributeTargetManagement::SetParamsDirectionInput>,&",
        "returnDescription": "The processed parameters and ignored parameters on the given parent.<br />The following partial errors may be returned:<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185204 &ndash; A valid parent object or line must be provided.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185209 &ndash; The user doesn&rsquo;t have the write access to the input parent object.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185211 &ndash; The given parameter direction is invalid.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185221 &ndash; Cannot set the parameter direction on the given parent because this parameter is already used by another parent with the given direction.",
        "useCase": ""
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "this operation does not support setting Synchronization of Attributes on Analysis Request, please use operation VCManagement::syncPublishMeasurableAttributes.",
            "deprecatedRelease": "Awp04.1.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "The synchronization measurable attribute inputs",
            "parameterName": "inputs"
          },
          {
            "description": "The synchronization measurable attribute preference.",
            "parameterName": "pref"
          }
        ],
        "canOverride": "false",
        "component": "Att1AttTargetMgmtAW",
        "createRelease": "tc10000.1.5",
        "dependencies": "",
        "description": "This operation is used to synchronize <i>Att0MeasurableAttribute</i> objects between source <i>Att0MeasurableAttribute</i> instances and target <i>Att0MeasurableAttribute</i> instances. This synchronization operation has two process flows: synchronize from source <i>Att0MeasurableAttribute</i> instances to input <i>Att0MeasurableAttribute</i> instances; and publish from output <i>Att0MeasurableAttribute</i> instances to source <i>Att0MeasurableAttribute</i> instances.  <br /><ul><ul><li type=\"disc\">When synchronize from source to input <i>Att0MeasurableAttribute</i>, an update operation is done against input <i>Att0MeasurableAttribute</i> with latest property values from source <i>Att0MeasurableAttribute</i>. Meanwhile copies the latest <i>Att0MeasurableValue</i> of source <i>Att0MeasurableAttribute</i> and inserts it into the input <i>Att0MeasurableAttribute</i>.</li><li type=\"disc\">When publish from output to source <i>Att0MeasurableAttribute</i>, the latest <i>Att0MeasurableValue</i> is retrieved from output <i>Att0MeasurableAttribute</i> and inserts it into the latest <i>Att0MeasurableValue</i> list on the source <i>Att0MeasurableAttribute</i>. The source <i>Att0MeasurableAttribute</i> properties will not be updated. If there is an issue during publication, the process stops and all modified objects are be restored.</li></ul></ul>",
        "exceptionCondition": "",
        "id": "synchronizeMeasuableAttributes#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::SyncMeasurableAttributeInput>,&$const,Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::SyncMeasurableAttributePref,&",
        "interface": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "synchronizeMeasuableAttributes",
        "opTemplate": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::SyncMeasurableAttributeResponse#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::synchronizeMeasuableAttributes#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::SyncMeasurableAttributeInput>,&$const,Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::SyncMeasurableAttributePref,&",
        "returnDescription": "A map of client identifier to the Att0MeasurableAttribute objects. The following partial errors may be returned:<br /><br /><ul><ul><li type=\"disc\">185017 - The given object is invalid primary object for Input Measurable Attribute.</li><li type=\"disc\">185018 - The given object is invalid primary object for Output Measurable Attribute.</li><li type=\"disc\">185025 - Some input Att0MeasurableAttribute objects are out of date, publication could only be done when all input Att0MeasurableAttribute objects are up to date.</li><li type=\"disc\">185026 - The given synchronization candidates type does not match to the source object type.</li><li type=\"disc\">185027 - The validation object is not allowed to publish measurable attributes, because its release status is not match with pre-defined ones.</li></ul></ul>",
        "useCase": "<ul><ul><li type=\"disc\">A systems designer creates an analysis request with one or multiple products. He adds the input elements, i.e. system block (<i>Fnd0LogicalBlock</i>), to the analysis request, and set the input measurable attribute (<i>Att0MeasurableAttribute</i>) from the system block to the analysis request. And then transfer the analysis request to the simulation engineer via the workflow. While processing the analysis request, the simulation engineer would be aware that some of input measurable attributes are out-of-date, and he is able to use \"Refresh\" command to synchronize between the system blocks' attributes and input attributes.</li><li type=\"disc\">A systems designer creates an analysis request with one or multiple products. He adds the input elements, i.e. system block (<i>Fnd0LogicalBlock</i>), to the analysis request, and set the output measurable attribute (<i>Att0MeasurableAttribute</i>) from the system block to the analysis request. And then transfer the analysis request to the simulation engineer via the workflow. The simulation engineer updates the output measurable attributes according to the simulation test result. And then he is able to use \"Publish\" command to synchronize between the output attributes and system block's attributes.</li></ul></ul>"
      },
      {
        "ParameterInfo": [
          {
            "description": "Object of OperationInput which holds addition properties on Att1AttributeAlignmentProxy object, which are useful calculate other property values on Att1AttributeAlignmentProxy object.",
            "parameterName": "operationInputTag"
          }
        ],
        "canOverride": "false",
        "component": "",
        "createRelease": "Awp04.0.0",
        "dependencies": "",
        "description": "",
        "exceptionCondition": "",
        "id": "att1GetPropertyValues#tag_t,&",
        "interface": "att1attrtargetmgmtaw::Att1AttributeAlignmentProxy",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "false",
        "name": "att1GetPropertyValues",
        "opTemplate": "int#att1attrtargetmgmtaw::Att1AttributeAlignmentProxy::att1GetPropertyValues#tag_t,&",
        "returnDescription": "",
        "useCase": ""
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of structures contains details to add Measurable Attributes to the given object via the specified relation",
            "parameterName": "inputs"
          }
        ],
        "canOverride": "false",
        "component": "Att1AttTargetMgmtAW",
        "createRelease": "Awp03.3.0",
        "dependencies": "",
        "description": "Adds a list of Measurable Attributes to the given object via the specified relation. <br /><br />When the given object is the <b>WorkspaceObject</b>,<br />Add as Copy<br />This operation hard copies the input measurable attributes and adds the copied measurable attributes to the <b>WorkspaceObject</b> via the specified relation.<br />Note, the input measurable attribute can't be added, if a measurable attribute exists with the same name under the given <b>WorkspaceObject</b>.<br />Add as Reference<br />This operation adds the input measurable attributes to the <b>WorkspaceObject</b> via the specified relation.<br /><br />When the given object is the <b>Awb0Element</b>, it adds the input measurable attributes to the underlying object for the given <b>Awb0Element</b>.",
        "exceptionCondition": "",
        "id": "attachMeasurableAttributes#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2017_06::AttributeTargetManagement::AttachMeasurableAttrInput>,&",
        "interface": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "attachMeasurableAttributes",
        "opTemplate": "Att1::Soa::AttrTargetMgmtAW::_2017_06::AttributeTargetManagement::AttachMeasurableAttrResp#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::attachMeasurableAttributes#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2017_06::AttributeTargetManagement::AttachMeasurableAttrInput>,&",
        "returnDescription": "Contains a list of AttachMeasurableAttrOutput structures (which contain the added attributes and ignored attributes). Any created objects will be sent back in the standard ServiceData lists of created objects. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors.<br /><br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">185415 - The given object must be a type of WorkspaceObject or Awb0Element.</li></ul></ul>",
        "useCase": "<ul><ul><li type=\"disc\">Users add the measurable attributes as copy to the given <b>WorkspaceObject</b> via the relation <b>Att0AttrRelation</b>.</li><li type=\"disc\">Users add the measurable attributes as reference to the given WorkspaceObject via the relation <b>IMAN_reference</b></li><li type=\"disc\">Users add the measurable attributes as copy to the given <b>Awb0Element</b> via the relation <b>Att0AttrRelation</b>.</li><li type=\"disc\">Users add the measurable attributes as reference to the given <b>Awb0Element</b> via the relation <b>IMAN_reference</b></li></ul></ul>"
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "this operation does not support attachement of measurement datasets. Use the createOrUpdateMeasurableAttributes service operation.",
            "deprecatedRelease": "tc10000.1.5"
          }
        ],
        "ParameterInfo": [
          {
            "description": "Information needed to create or modify the measurable attribute object.",
            "parameterName": "inputs"
          }
        ],
        "canOverride": "false",
        "component": "Att1AttTargetMgmtAW",
        "createRelease": "tc10000.1.4",
        "dependencies": "",
        "description": "This operation either creates a new measurable attribute object or modifies the existing measurable attribute object depending on the input parameter.<br />Please refer to documentation for more details on Measurable Attribute object.",
        "exceptionCondition": "",
        "id": "createOrModifyMeasurableAttribute#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::CreateOrModifyAttrInput>,&",
        "interface": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "createOrModifyMeasurableAttribute",
        "opTemplate": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::CreateOrModifyAttrResp#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::createOrModifyMeasurableAttribute#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::CreateOrModifyAttrInput>,&",
        "returnDescription": "The response contains the list of measurable attribute objects which are either created or modified.<br />The following errors may be returned:<br /><br />185401 - Both the parent objects are NULL. Please provide value for either parentObj or parentLine input parameter.<br />185402 - Unable to create new measurable attribute. There is existing attribute on the parent object with the given name.<br />185403 - The input Measure Value type is not valid. Please contact the system administrator.<br />214116 - For any requested relation types the relation type name is invalid.<br />126214 - Unable to get Measurable Attributes because the provided context line does not have a BOMViewRevision.",
        "useCase": "Background<br />A Measurable Attribute is a characteristic of the system which can be externally observed and has a target value or range in the context of the product, which must be satisfied before the product is delivered. It consists of two parts. One is the goal value and the other is the measured/validated value. A measurable attribute may have more than one measured value (dependent of product maturity) and can be seen in context of more than one application object.<br />Example: mass, cost, speed, pressure and other constituents of energy flow<br /><br />1.&nbsp;&nbsp;&nbsp;&nbsp;User wants to create a measurable attribute on the parent object. For example, user wants to create a measurable attribute 'weight' on parent object 'engine'.<br />2.&nbsp;&nbsp;&nbsp;&nbsp;User has already created a measurable attribute on the parent object and user wants to modify the properties of measurable attribute and / or create a new measure value.<br />3.&nbsp;&nbsp;&nbsp;&nbsp;The parent object is part of any assembly and now user wants to override the value of measurable attribute properties in the context of product. For example, Engine is part of assembly car and now user would like to change the value of weight attribute on engine in the context of car.<br />"
      },
      {
        "ParameterInfo": [
          {
            "description": "Information needed to create or update the measurable attribute object.",
            "parameterName": "inputs"
          }
        ],
        "canOverride": "false",
        "component": "Att1AttTargetMgmtAW",
        "createRelease": "tc10000.1.5",
        "dependencies": "",
        "description": "This operation either creates a new measurable attribute object or modifies the existing measurable attribute object depending on the input parameter.<br />Please refer to documentation for more details on Measurable Attribute object.",
        "exceptionCondition": "",
        "id": "createOrUpdateMeasurableAttribute#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::CreateOrUpdateAttrInput>,&",
        "interface": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "createOrUpdateMeasurableAttribute",
        "opTemplate": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::CreateOrUpdateAttrResp#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::createOrUpdateMeasurableAttribute#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::CreateOrUpdateAttrInput>,&",
        "returnDescription": "The response contains the list of measurable attribute objects which are either created or modified.<br />The following errors may be returned:<br /><br />185401 - Both the parent objects are NULL. Please provide value for either parentObj or parentLine input parameter.<br />185402 - Unable to create new measurable attribute. There is existing attribute on the parent object with the given name.<br />185403 - The input Measure Value type is not valid. Please contact the system administrator.<br />214116 - For any requested relation types the relation type name is invalid.<br />126214 - Unable to get Measurable Attributes because the provided context line does not have a BOMViewRevision.",
        "useCase": "Background<br />A Measurable Attribute is a characteristic of the system which can be externally observed and has a target value or range in the context of the product, which must be satisfied before the product is delivered. It consists of two parts. One is the goal value and the other is the measured/validated value. A measurable attribute may have more than one measured value (dependent of product maturity) and can be seen in context of more than one application object.<br />Example: mass, cost, speed, pressure and other constituents of energy flow<br /><br />1. User wants to create a measurable attribute on the parent object. For example, user wants to create a measurable<br />   attribute 'weight' on parent object 'engine'.<br />2. User has already created a measurable attribute on the parent object and user wants to update the properties of<br />   measurable attribute and / or create a new measure value.<br />3. The parent object is part of any assembly and now user wants to override the value of measurable attribute <br />   properties in the context of product. For example, Engine is part of assembly car and now user would like to change<br />   the value of weight attribute on engine in the context of car.<br />4. User wants to attach a dataset to Measure Value object."
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "this operation does not support getting Attributes, please use operation getMeasurableAttributes2.",
            "deprecatedRelease": "Awp04.1.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "A list of of parent objects to get associated measurable attributes.",
            "parameterName": "inputs"
          }
        ],
        "canOverride": "false",
        "component": "Att1AttTargetMgmtAW",
        "createRelease": "tc10000.1.4",
        "dependencies": "",
        "description": "This operation gets the list of associated measurable attributes for the input parent objects. A measurable attribute is a characteristic of the system which can be externally observed and has a target value or range in the context of the product, which must be satisfied before the product is delivered. It consists of two parts. One is the goal value the other is the measured/validated value. A measurable attribute may have more than one measured value (dependent of product maturity) and can be seen in context of more than one application object.<br />Example: mass, cost, speed, pressure and other constituents of energy flow.",
        "exceptionCondition": "",
        "id": "getMeasurableAttributes#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::GetMeasurableAttrInput>,&",
        "interface": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "getMeasurableAttributes",
        "opTemplate": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::GetMeasurableAttrResp#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::getMeasurableAttributes#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::GetMeasurableAttrInput>,&",
        "returnDescription": "The response contains the list of associated measurable attributes objects with the parent objects provided in input.<br /><br />The following errors may be returned:<br /><br />185401 - Both the parent objects are NULL. Please provide value for either parentObj or parentLine input parameter.<br />214116 - For any requested relation types the relation type name is invalid.<br />126214 - Unable to get Measurable Attributes because the provided context line does not have a BOMViewRevision.",
        "useCase": "1.&nbsp;&nbsp;&nbsp;&nbsp;User has already created a measurable attribute on a parent object and now user wants to see the list of attributes present on the object. For example, user has created a measurable attribute 'mass' on 'Engine' and user wants to see the value of attribute 'mass'.<br />2.&nbsp;&nbsp;&nbsp;&nbsp;User wants to see overridden value of measurable attribute on the parent object present in the assembly. For example, if 'Engine' is part of 'Car' assembly and user has changed the value of 'mass' attribute on Engine in the context of 'Car' then user wants to see the changed attribute value in context of Car.<br />3.&nbsp;&nbsp;&nbsp;&nbsp;User requires the list of measurable attributes associated with the given model object of a validation contract."
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of parent objects to get associated measurable attributes.",
            "parameterName": "inputs"
          }
        ],
        "canOverride": "false",
        "component": "Att1AttTargetMgmtAW",
        "createRelease": "tc10000.1.5",
        "dependencies": "",
        "description": "This operation gets the list of associated measurable attributes for the input parent objects. A measurable attribute is a characteristic of the system which can be externally observed and has a target value or range in the context of the product, which must be satisfied before the product is delivered. It consists of two parts. One is the goal value and the other is the measured and validated value. A measurable attribute may have more than one measured value (dependent of product maturity) and can be seen in context of more than one application object.<br />Example: mass, cost, speed, pressure and other constituents of energy flow",
        "exceptionCondition": "",
        "id": "getMeasurableAttributes2#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::GetMeasurableAttrInput>,&",
        "interface": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "getMeasurableAttributes2",
        "opTemplate": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::GetMeasurableAttrResp2#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::getMeasurableAttributes2#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::GetMeasurableAttrInput>,&",
        "returnDescription": "The response contains the list of associated measurable attributes objects with the parent objects provided in input.<br /><br />The following errors may be returned:<br /><br />185401 - Both the parent objects are NULL. Please provide value for either parentObj or parentLine input parameter.<br />214116 - For any requested relation types the relation type name is invalid.<br />126214 - Unable to get Measurable Attributes because the provided context line does not have a BOMViewRevision.",
        "useCase": "1. User has already created a measurable attribute on a parent object and now user wants to see the list of attributes present on the object. For example, user has created a measurable attribute 'mass' on 'Engine' and user wants to see the value of attribute 'mass'.<br />2. User wants to see overridden value of measurable attribute on the parent object present in the assembly. For example, if 'Engine' is part of 'Car' assembly and user has changed the value of 'mass' attribute on Engine in the context of 'Car' then user wants to see the changed attribute value in context of Car.<br />3. User requires the list of measurable attributes associated with the given model object of a validation contract.<br />4. User has already created the measurable attribute on Crt0VldnContract object and now user wants to set these attributes as Input or Output on Study object."
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of input data which contains information of the Excel file to be imported for the given selected object.",
            "parameterName": "inputs"
          },
          {
            "description": "A list of options to be used during the import. Supported option is: &ldquo;RunInBackground&rdquo;. If &ldquo;RunInBackground&rdquo; option is chosen, the excel file import runs in backg&nbsp;&nbsp;&nbsp;&nbsp;round mode and user will get a notification when complete, else after completion of import, the objects in the excel file will be created or updated.",
            "parameterName": "importOptions"
          }
        ],
        "canOverride": "false",
        "component": "Att1AttTargetMgmtAW",
        "createRelease": "Awp04.2.0",
        "dependencies": "",
        "description": "This operation imports Parameters or Parameter Definitions data in Teamcenter from the Excel file.<br />This operation supports updates of roundtrip Excel i.e. Excel which has been exported from Teamcenter and re-imported again. This also supports import of new Excel containing new parameters/parameters definition data.<br />The import excel file must be based on existing parameter/parameter definitions export templates.<br />This operation also supports upload of goal files for the respective parameter definitions.<br />If goal files need to be uploaded, then a zip file must be created containing the import excel file and a subfolder containing all the goal files and this zip file is then imported.",
        "exceptionCondition": "",
        "id": "importParameterExcel#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2019_06::AttributeTargetManagement::ImportParamExcelInput>,&$const,std::vector<std::string>,&",
        "interface": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "importParameterExcel",
        "opTemplate": "Att1::Soa::AttrTargetMgmtAW::_2019_06::AttributeTargetManagement::ImportParameterExcelResponse#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::importParameterExcel#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2019_06::AttributeTargetManagement::ImportParamExcelInput>,&$const,std::vector<std::string>,&",
        "returnDescription": "This returns the list of created/updated objects.  Any failure are returned with clientId mapped to error message in the ServiceData list of partial errors. <br /><br />Errors:<br /><br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185219:  Invalid Selected object. The selected object can be either Dictionary, Project, Group or AR.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185220:  Invalid import file format. Only Excel and Zip file import are supported.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185221:  Creation/update of Parameter failed.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185222:  Creation/update of Parameter Definition failed.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185223:  Mismatch/Incorrect goal file names. <br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185224:  Upload of goal file failed.",
        "useCase": "Use Case 1 :<br />Import the parameters within the parameter project :<br />When the user selects a parameter project in AW and does an import action and imports an excel file,<br />Then the parameters data in the Excel file will be created/updated and get associated to the selected parameter project.<br /><br />Use Case 2 :<br />Import the parameters within the product :<br />When the user selects a product in AW and does an import action and imports an excel file,<br />Then the parameters data in the Excel file will be created/updated and get associated to the selected product.<br /><br />Use Case 3 :<br />Import the parameters within the Analysis Request :<br />When the user selects an Analysis Request in AW and does an import action and imports an excel file,<br />Then the parameters data in the Excel file will be created/updated and get associated to the selected Analysis Request.<br /><br />Use Case 4 :<br />Upload/update the goal files while import the parameters :<br />When the user imports a zip file containing the import excel and list of goal files in its subfolder,<br />Then the goal files will be uploaded and get associated to the respective parameter definitions.<br /><br />Use Case 5 :<br />Import the parameter definitions within the parameter dictionary :<br />When the user selects a parameter dictionary in AW and does an import action and imports an excel file,<br />Then the parameter definitions data in the Excel file will be created/updated and get associated to the selected parameter dictionary."
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of PinCompareParametersInput structure.",
            "parameterName": "inputs"
          }
        ],
        "canOverride": "false",
        "component": "Apb0AttrParmBase",
        "createRelease": "Awp05.2.0",
        "dependencies": "",
        "description": "This operation pins the Parameters Comparison view to the user's Gateway.<br /> <br />Use Cases:<br />Pin Parameters Comparison view in the Gateway<br />1. User logs into Active Workpsace<br />2. User selects a system object in ACE and lunches &quot;Compare Parameters&quot;<br />3. User adds comparison elements (i.e., Veririfcation Request, Recipe ) to compare.<br />4. User chooses the &quot;Pin to Home&quot; command on the right wall<br />5. Active Workspace invokes the pinCompareParametersView operation to create a tile in the user's Gateway.",
        "exceptionCondition": "",
        "id": "pinCompareParametersView#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2021_06::AttributeTargetManagement::PinCompareParametersInput>,&",
        "interface": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "pinCompareParametersView",
        "opTemplate": "Teamcenter::Soa::Server::ServiceData#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::pinCompareParametersView#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2021_06::AttributeTargetManagement::PinCompareParametersInput>,&",
        "returnDescription": "The created Tile Awp0Tile object.<br />The following partial errors may be returned:<br />The Tile cannot be created, actionParams needs to be provided.<br />The Tile cannot be created, tileName needs to be provided.",
        "useCase": ""
      },
      {
        "DeprecationInfo": [
          {
            "deprecatedDescription": "this operation does not support Create or Updating mappings for Attributes, please use operation mapMeasurableAttributes2.",
            "deprecatedRelease": "Awp04.1.0"
          }
        ],
        "ParameterInfo": [
          {
            "description": "A list of structures contains details to create or update the measurable attribute mapping for the given context objects.",
            "parameterName": "inputs"
          },
          {
            "description": "A structure to define the preferneces for mapping measurable attributes.",
            "parameterName": "pref"
          }
        ],
        "canOverride": "false",
        "component": "Att1AttTargetMgmtAW",
        "createRelease": "Awp03.4.0",
        "dependencies": "",
        "description": "Create or update the measurable attribute mappings for the given context objects.<br />The system creates the Att0AttributeAlignment for each pair of mapped attributes. Then assigns the created Att0AttributeAlignment objects to the specified map object. <br />Note, if the input map object is null, the system queries the existing map object for the given context object. If the system cannot find the existing map object, it creates a new map object for the given context object.",
        "exceptionCondition": "",
        "id": "mapMeasurableAttributes#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrInput>,&$const,Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrPref,&",
        "interface": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "mapMeasurableAttributes",
        "opTemplate": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrResp#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::mapMeasurableAttributes#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrInput>,&$const,Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrPref,&",
        "returnDescription": "Contains a list of MapMeasurableAttrOutput structures (which contain the created Att0AttributeAlignment objects). Any created objects will be sent back in the standard ServiceData lists of created objects. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors.<br /><ul><ul><li type=\"disc\">185417: The context object must not be null.</li><li type=\"disc\">185418: The map object type must be type of Att0AbstractMapping.</li><li type=\"disc\">185419: The alignment object type update be type of Att0AttributeAlignment.</li><li type=\"disc\">185420: The input source/target object to create the alignment must be type of Att0MeasurableAttribute or Att0AttributeAlignment.</li></ul></ul>",
        "useCase": ""
      },
      {
        "ParameterInfo": [
          {
            "description": "A list of structures containing the details to publish parameters",
            "parameterName": "inputs"
          },
          {
            "description": "A map (string, string) of publish option name and value pairs. The valid publish options are:<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;&ldquo;publish_measurement_to_goal&rdquo;: &ldquo;true&rdquo; or &ldquo;false&rdquo;.<br />If &ldquo;true&rdquo;, set the source parameter&rsquo;s goal equalling to the target parameter&rsquo;s measurement. Otherwise, create a new measurement under the source parameter with the value equalling to the target parameter&rsquo;s measurement.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;&ldquo;publish_parameter_range&rdquo;: &ldquo;true&rdquo; or &ldquo;false&rdquo;.<br />If &ldquo;true&rdquo;, set the source parameter&rsquo;s min and max equalling to the target parameter&rsquo;s min and max; otherwise, the system doesn&rsquo;t update the source parameter&rsquo;s min and max.",
            "parameterName": "options"
          }
        ],
        "canOverride": "false",
        "component": "Att1AttTargetMgmtAW",
        "createRelease": "Awp06.0.0",
        "dependencies": "",
        "description": "In the parameter comparison, the system can compare parameters from the source elements (e.g. Arm0RequirementElement) vs. comparison elements (e.g. Crt0VerifRequestRevision), and highlight the differences on the properties Goal, Min, Max and Measurement between the source and target parameters.<br />This operation publishes the Goal, Min, Max and Measurement properties from target parameters to source parameters. The published parameters may be the selected target parameters only, or all parameters from the selected comparison element. Note, this operation does not support the parameters with the complex data.",
        "exceptionCondition": "",
        "id": "publishParameters#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement::PublishParametersInput>,&$const,Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement::PublishParamOptions,&",
        "interface": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement",
        "isPostActionAllowed": "false",
        "isPreActionAllowed": "false",
        "isPreConditionAllowed": "false",
        "isPublished": "true",
        "name": "publishParameters",
        "opTemplate": "Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement::PublishParametersResp#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::publishParameters#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement::PublishParametersInput>,&$const,Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement::PublishParamOptions,&",
        "returnDescription": "A list of processed and unprocessed parameters. The published parameters are returned in the standard ServiceData lists of updated objects. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors.<br /><br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185275:&nbsp;&nbsp;&nbsp;&nbsp;The user doesn&rsquo;t have write access on the source parametr. <br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185276:&nbsp;&nbsp;&nbsp;&nbsp;Source and target elements and parameters can not be empty. <br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185277:&nbsp;&nbsp;&nbsp;&nbsp;The system cannot update the source parameter, because &ldquo;Goal&rdquo; is not within &bull;&nbsp;&nbsp;&nbsp;&nbsp;the range defined by &ldquo;Min&rdquo; and &ldquo;Max&rdquo; values.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185278:&nbsp;&nbsp;&nbsp;&nbsp;The system cannot publish the parameters with complex data.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185279:&nbsp;&nbsp;&nbsp;&nbsp;The input source element is invalid. The valid type is Awb0Element.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185280:&nbsp;&nbsp;&nbsp;&nbsp;The input comparison element is invalid. The valid types are RevisionRule, Fnd0SearchRecipe, Crt0VldnContractRevision.",
        "useCase": ""
      }
    ],
    "OperationTemplate": [
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::AssignMeasurableAttributeInput",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The measurable attribute assignment inputs.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputs"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::AssignMeasurableAttributePref",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The measurable attribute assignment configuration.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "pref"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::AssignMeasurableAttributesResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.4",
        "description": "This operation is used to assign measurable attributes (Att0MeasurableAttribute) objects to given WorkspaceObject as input or output attributes for product validation or measurement. <br />When an Att0MeasurableAttribute is assigned as input or output attribute, a save-as operation is performed against the source attribute object and new relations will be created to link the new Att0MeasurableAttribute with parent WorkspaceObject. Any update on source attribute will not impact input or output attribute object, and on the contrary.<br />",
        "id": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::AssignMeasurableAttributesResponse#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::assignMeasurableAttributes#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::AssignMeasurableAttributeInput>,&$const,Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::AssignMeasurableAttributePref,&",
        "name": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::assignMeasurableAttributes",
        "returnConst": "false",
        "returnDescription": "A map of client identifier to the Att0MeasurableAttribute objects. The following partial errors may be returned:<br />185401 - Invalid input or output parent object.<br />185405 - Input/output parent object is null.<br />185406 - The measurable attribute parameter is null.<br />185407 - The parent line must provide to set input/output measurable attribute.<br />185408 - The context line must provide to set input/output measurable attribute.<br />185409 - System does not support the given assign action.<br />185410 - The system does not support the \"Assign\" action on top lines.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::AssignMeasurableAttributeInput2",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The measurable attribute assignment inputs.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputs"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::AssignMeasurableAttributePref2",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The measurable attribute assignment configuration.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "pref"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::AssignMeasurableAttributesResponse2",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.5",
        "description": "This operation assigns measurable attribute (Att0MeasurableAttribute) objects to given WorkspaceObject as input or output attributes for product validation or measurement.<br /><br />When an Att0MeasurableAttribute is assigned as input or output attribute, a save-as operation is performed against the source attribute object and new relations will be created to link the new Att0MeasurableAttribute with parent WorkspaceObject. Parent Validaiton context (WorkspaceObject ) attribute can be set as Input or attribute in associated Study(WorkspaceObject). Any update on source attribute will not impact input or output attribute object, and on the contrary.",
        "id": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::AssignMeasurableAttributesResponse2#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::assignMeasurableAttributes2#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::AssignMeasurableAttributeInput2>,&$const,Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::AssignMeasurableAttributePref2,&",
        "name": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::assignMeasurableAttributes2",
        "returnConst": "false",
        "returnDescription": "Returns: <br />A map of client identifier to the Att0MeasurableAttribute objects. The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">185401 - Invalid input or output parent object.</li><li type=\"disc\">185405 - Input/output parent object is null.</li><li type=\"disc\">185406 - The measurable attribute parameter is null.</li><li type=\"disc\">185407 - The parent line must provide to set input/output measurable attribute.</li><li type=\"disc\">185408 - The context line must provide to set input/output measurable attribute.</li><li type=\"disc\">185409 - System does not support the given assign action.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement::RemoveParametersInput",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of structures containing the details to remove parameters.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputs"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "bool",
                "qualifier": ""
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "If true, delete the given parameter permanently from the database; otherwise, remove the given parameter from the parent object but the parameter still exists in the database.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "toDelete"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement::RemoveParametersResp",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp04.3.0",
        "description": "Remove given Parameters from the parent object. If the flag toDelete is true, this operation deletes the given parameters permanently from the database. Note, users MUST have the WRITE access on the parent object to perform this operation. To delete the parameters, users MUST have the WRITE access on the parameters. This operation doesn&rsquo;t support the parent Crt0VldnContractRevision and or Crt0StudyRevision.",
        "id": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement::RemoveParametersResp#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::removeParameters#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement::RemoveParametersInput>,&$bool",
        "name": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::removeParameters",
        "returnConst": "false",
        "returnDescription": "The removed/deleted parameters. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors. This operation doesn&rsquo;t support the parent Crt0VldnContractRevision and or Crt0StudyRevision.<br /><br />* 185450: You don&rsquo;t have the WRITE access for the given parent.<br /><br />* 185453: The system cannot remove the parameter from the parent because it is used in one or multiple Occurrences and or Verification Requests.<br /><br />* 185454: The system cannot delete the parameter because it is used in orne or multiple Parameter Projects, Occurrences and or Verification Requests.<br /><br />* 185455: The system cannot delete the parameter because you don&rsquo;t have the WRITE access for it.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement::ReplaceParametersInput",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of structures containing the details to replace given Parameters.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputs"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement::ReplaceParametersResp",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp04.3.0",
        "description": "Replaces given Parameters with related target Parameters under the parent object. Alternatively, revise given Parameters and replace them with newly revised Parameters under the parent object. Note, users MUST have the WRITE access on the parent object to perform this operation. Replacing Parameters is not supported for the parent object, such as Att0ParamProject, Att0ParamGroup, Crt0VldnContractRevision and Crt0StudyRevision.",
        "id": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement::ReplaceParametersResp#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::replaceParameters#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement::ReplaceParametersInput>,&",
        "name": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::replaceParameters",
        "returnConst": "false",
        "returnDescription": "Contains a list of ReplaceParametersOutput structures (which contain the replaced/target Parameters). Any created objects will be sent back in the standard ServiceData lists of created objects. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors. Replacing Parameters is not supported for the parent object, such as Att0ParamProject, Att0ParamGroup, Crt0VldnContractRevision and Crt0StudyRevision.<br /><br />* 185450: You MUST have the WRITE access for the given parent.<br /><br />* 185451: Replacing Parameters is not supported for the given parent.<br /><br />* 185452: The system cannot replace the given parameter, because the target parameter is owned by a different parameter thread.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2020_12::AttributeTargetManagement::SetParamsDirectionInput",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of SetParamsDirectionInput structure.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputs"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Att1::Soa::AttrTargetMgmtAW::_2020_12::AttributeTargetManagement::SetParamsDirectionResp",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp05.1.0",
        "description": "This operation sets the direction for the selected Parameters on the given parent. By default, one parameter can be set as input on the multiple parents, and as output on a single parent. If set the same parameter as output on multiple parents, this operation ignores the parameter and shows the error message. If the parent is type of Awb0Element,  the operation sets the direction between the corresponding underlying object of Awb0Element and the selected parameter.",
        "id": "Att1::Soa::AttrTargetMgmtAW::_2020_12::AttributeTargetManagement::SetParamsDirectionResp#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::setParametersDirection#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2020_12::AttributeTargetManagement::SetParamsDirectionInput>,&",
        "name": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::setParametersDirection",
        "returnConst": "false",
        "returnDescription": "The processed parameters and ignored parameters on the given parent.<br />The following partial errors may be returned:<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185204 &ndash; A valid parent object or line must be provided.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185209 &ndash; The user doesn&rsquo;t have the write access to the input parent object.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185211 &ndash; The given parameter direction is invalid.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185221 &ndash; Cannot set the parameter direction on the given parent because this parameter is already used by another parent with the given direction.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::SyncMeasurableAttributeInput",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The synchronization measurable attribute inputs",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputs"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::SyncMeasurableAttributePref",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "The synchronization measurable attribute preference.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "pref"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::SyncMeasurableAttributeResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.5",
        "description": "This operation is used to synchronize <i>Att0MeasurableAttribute</i> objects between source <i>Att0MeasurableAttribute</i> instances and target <i>Att0MeasurableAttribute</i> instances. This synchronization operation has two process flows: synchronize from source <i>Att0MeasurableAttribute</i> instances to input <i>Att0MeasurableAttribute</i> instances; and publish from output <i>Att0MeasurableAttribute</i> instances to source <i>Att0MeasurableAttribute</i> instances.  <br /><ul><ul><li type=\"disc\">When synchronize from source to input <i>Att0MeasurableAttribute</i>, an update operation is done against input <i>Att0MeasurableAttribute</i> with latest property values from source <i>Att0MeasurableAttribute</i>. Meanwhile copies the latest <i>Att0MeasurableValue</i> of source <i>Att0MeasurableAttribute</i> and inserts it into the input <i>Att0MeasurableAttribute</i>.</li><li type=\"disc\">When publish from output to source <i>Att0MeasurableAttribute</i>, the latest <i>Att0MeasurableValue</i> is retrieved from output <i>Att0MeasurableAttribute</i> and inserts it into the latest <i>Att0MeasurableValue</i> list on the source <i>Att0MeasurableAttribute</i>. The source <i>Att0MeasurableAttribute</i> properties will not be updated. If there is an issue during publication, the process stops and all modified objects are be restored.</li></ul></ul>",
        "id": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::SyncMeasurableAttributeResponse#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::synchronizeMeasuableAttributes#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::SyncMeasurableAttributeInput>,&$const,Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::SyncMeasurableAttributePref,&",
        "name": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::synchronizeMeasuableAttributes",
        "returnConst": "false",
        "returnDescription": "A map of client identifier to the Att0MeasurableAttribute objects. The following partial errors may be returned:<br /><br /><ul><ul><li type=\"disc\">185017 - The given object is invalid primary object for Input Measurable Attribute.</li><li type=\"disc\">185018 - The given object is invalid primary object for Output Measurable Attribute.</li><li type=\"disc\">185025 - Some input Att0MeasurableAttribute objects are out of date, publication could only be done when all input Att0MeasurableAttribute objects are up to date.</li><li type=\"disc\">185026 - The given synchronization candidates type does not match to the source object type.</li><li type=\"disc\">185027 - The validation object is not allowed to publish measurable attributes, because its release status is not match with pre-defined ones.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "tag_t",
                "qualifier": "&"
              }
            ],
            "const": "false",
            "defaultValue": "",
            "description": "Object of OperationInput which holds addition properties on Att1AttributeAlignmentProxy object, which are useful calculate other property values on Att1AttributeAlignmentProxy object.",
            "freeOutputMemory": "false",
            "inputOutput": "Output",
            "name": "operationInputTag"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "int",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp04.0.0",
        "description": "",
        "id": "int#att1attrtargetmgmtaw::Att1AttributeAlignmentProxy::att1GetPropertyValues#tag_t,&",
        "name": "att1attrtargetmgmtaw::Att1AttributeAlignmentProxy::att1GetPropertyValues",
        "returnConst": "false",
        "returnDescription": "",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_06::AttributeTargetManagement::AttachMeasurableAttrInput",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of structures contains details to add Measurable Attributes to the given object via the specified relation",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputs"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_06::AttributeTargetManagement::AttachMeasurableAttrResp",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp03.3.0",
        "description": "Adds a list of Measurable Attributes to the given object via the specified relation. <br /><br />When the given object is the <b>WorkspaceObject</b>,<br />Add as Copy<br />This operation hard copies the input measurable attributes and adds the copied measurable attributes to the <b>WorkspaceObject</b> via the specified relation.<br />Note, the input measurable attribute can't be added, if a measurable attribute exists with the same name under the given <b>WorkspaceObject</b>.<br />Add as Reference<br />This operation adds the input measurable attributes to the <b>WorkspaceObject</b> via the specified relation.<br /><br />When the given object is the <b>Awb0Element</b>, it adds the input measurable attributes to the underlying object for the given <b>Awb0Element</b>.",
        "id": "Att1::Soa::AttrTargetMgmtAW::_2017_06::AttributeTargetManagement::AttachMeasurableAttrResp#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::attachMeasurableAttributes#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2017_06::AttributeTargetManagement::AttachMeasurableAttrInput>,&",
        "name": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::attachMeasurableAttributes",
        "returnConst": "false",
        "returnDescription": "Contains a list of AttachMeasurableAttrOutput structures (which contain the added attributes and ignored attributes). Any created objects will be sent back in the standard ServiceData lists of created objects. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors.<br /><br />The following partial errors may be returned:<br /><ul><ul><li type=\"disc\">185415 - The given object must be a type of WorkspaceObject or Awb0Element.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::CreateOrModifyAttrInput",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Information needed to create or modify the measurable attribute object.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputs"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::CreateOrModifyAttrResp",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.4",
        "description": "This operation either creates a new measurable attribute object or modifies the existing measurable attribute object depending on the input parameter.<br />Please refer to documentation for more details on Measurable Attribute object.",
        "id": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::CreateOrModifyAttrResp#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::createOrModifyMeasurableAttribute#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::CreateOrModifyAttrInput>,&",
        "name": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::createOrModifyMeasurableAttribute",
        "returnConst": "false",
        "returnDescription": "The response contains the list of measurable attribute objects which are either created or modified.<br />The following errors may be returned:<br /><br />185401 - Both the parent objects are NULL. Please provide value for either parentObj or parentLine input parameter.<br />185402 - Unable to create new measurable attribute. There is existing attribute on the parent object with the given name.<br />185403 - The input Measure Value type is not valid. Please contact the system administrator.<br />214116 - For any requested relation types the relation type name is invalid.<br />126214 - Unable to get Measurable Attributes because the provided context line does not have a BOMViewRevision.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::CreateOrUpdateAttrInput",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "Information needed to create or update the measurable attribute object.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputs"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::CreateOrUpdateAttrResp",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.5",
        "description": "This operation either creates a new measurable attribute object or modifies the existing measurable attribute object depending on the input parameter.<br />Please refer to documentation for more details on Measurable Attribute object.",
        "id": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::CreateOrUpdateAttrResp#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::createOrUpdateMeasurableAttribute#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::CreateOrUpdateAttrInput>,&",
        "name": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::createOrUpdateMeasurableAttribute",
        "returnConst": "false",
        "returnDescription": "The response contains the list of measurable attribute objects which are either created or modified.<br />The following errors may be returned:<br /><br />185401 - Both the parent objects are NULL. Please provide value for either parentObj or parentLine input parameter.<br />185402 - Unable to create new measurable attribute. There is existing attribute on the parent object with the given name.<br />185403 - The input Measure Value type is not valid. Please contact the system administrator.<br />214116 - For any requested relation types the relation type name is invalid.<br />126214 - Unable to get Measurable Attributes because the provided context line does not have a BOMViewRevision.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::GetMeasurableAttrInput",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of of parent objects to get associated measurable attributes.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputs"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::GetMeasurableAttrResp",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.4",
        "description": "This operation gets the list of associated measurable attributes for the input parent objects. A measurable attribute is a characteristic of the system which can be externally observed and has a target value or range in the context of the product, which must be satisfied before the product is delivered. It consists of two parts. One is the goal value the other is the measured/validated value. A measurable attribute may have more than one measured value (dependent of product maturity) and can be seen in context of more than one application object.<br />Example: mass, cost, speed, pressure and other constituents of energy flow.",
        "id": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::GetMeasurableAttrResp#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::getMeasurableAttributes#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::GetMeasurableAttrInput>,&",
        "name": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::getMeasurableAttributes",
        "returnConst": "false",
        "returnDescription": "The response contains the list of associated measurable attributes objects with the parent objects provided in input.<br /><br />The following errors may be returned:<br /><br />185401 - Both the parent objects are NULL. Please provide value for either parentObj or parentLine input parameter.<br />214116 - For any requested relation types the relation type name is invalid.<br />126214 - Unable to get Measurable Attributes because the provided context line does not have a BOMViewRevision.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::GetMeasurableAttrInput",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of parent objects to get associated measurable attributes.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputs"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::GetMeasurableAttrResp2",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "tc10000.1.5",
        "description": "This operation gets the list of associated measurable attributes for the input parent objects. A measurable attribute is a characteristic of the system which can be externally observed and has a target value or range in the context of the product, which must be satisfied before the product is delivered. It consists of two parts. One is the goal value and the other is the measured and validated value. A measurable attribute may have more than one measured value (dependent of product maturity) and can be seen in context of more than one application object.<br />Example: mass, cost, speed, pressure and other constituents of energy flow",
        "id": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::GetMeasurableAttrResp2#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::getMeasurableAttributes2#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::GetMeasurableAttrInput>,&",
        "name": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::getMeasurableAttributes2",
        "returnConst": "false",
        "returnDescription": "The response contains the list of associated measurable attributes objects with the parent objects provided in input.<br /><br />The following errors may be returned:<br /><br />185401 - Both the parent objects are NULL. Please provide value for either parentObj or parentLine input parameter.<br />214116 - For any requested relation types the relation type name is invalid.<br />126214 - Unable to get Measurable Attributes because the provided context line does not have a BOMViewRevision.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2019_06::AttributeTargetManagement::ImportParamExcelInput",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of input data which contains information of the Excel file to be imported for the given selected object.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputs"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of options to be used during the import. Supported option is: &ldquo;RunInBackground&rdquo;. If &ldquo;RunInBackground&rdquo; option is chosen, the excel file import runs in backg&nbsp;&nbsp;&nbsp;&nbsp;round mode and user will get a notification when complete, else after completion of import, the objects in the excel file will be created or updated.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "importOptions"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Att1::Soa::AttrTargetMgmtAW::_2019_06::AttributeTargetManagement::ImportParameterExcelResponse",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp04.2.0",
        "description": "This operation imports Parameters or Parameter Definitions data in Teamcenter from the Excel file.<br />This operation supports updates of roundtrip Excel i.e. Excel which has been exported from Teamcenter and re-imported again. This also supports import of new Excel containing new parameters/parameters definition data.<br />The import excel file must be based on existing parameter/parameter definitions export templates.<br />This operation also supports upload of goal files for the respective parameter definitions.<br />If goal files need to be uploaded, then a zip file must be created containing the import excel file and a subfolder containing all the goal files and this zip file is then imported.",
        "id": "Att1::Soa::AttrTargetMgmtAW::_2019_06::AttributeTargetManagement::ImportParameterExcelResponse#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::importParameterExcel#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2019_06::AttributeTargetManagement::ImportParamExcelInput>,&$const,std::vector<std::string>,&",
        "name": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::importParameterExcel",
        "returnConst": "false",
        "returnDescription": "This returns the list of created/updated objects.  Any failure are returned with clientId mapped to error message in the ServiceData list of partial errors. <br /><br />Errors:<br /><br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185219:  Invalid Selected object. The selected object can be either Dictionary, Project, Group or AR.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185220:  Invalid import file format. Only Excel and Zip file import are supported.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185221:  Creation/update of Parameter failed.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185222:  Creation/update of Parameter Definition failed.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185223:  Mismatch/Incorrect goal file names. <br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185224:  Upload of goal file failed.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrInput",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of structures contains details to create or update the measurable attribute mapping for the given context objects.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputs"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrPref",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A structure to define the preferneces for mapping measurable attributes.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "pref"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrResp",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp03.4.0",
        "description": "Create or update the measurable attribute mappings for the given context objects.<br />The system creates the Att0AttributeAlignment for each pair of mapped attributes. Then assigns the created Att0AttributeAlignment objects to the specified map object. <br />Note, if the input map object is null, the system queries the existing map object for the given context object. If the system cannot find the existing map object, it creates a new map object for the given context object.",
        "id": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrResp#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::mapMeasurableAttributes#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrInput>,&$const,Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrPref,&",
        "name": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::mapMeasurableAttributes",
        "returnConst": "false",
        "returnDescription": "Contains a list of MapMeasurableAttrOutput structures (which contain the created Att0AttributeAlignment objects). Any created objects will be sent back in the standard ServiceData lists of created objects. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors.<br /><ul><ul><li type=\"disc\">185417: The context object must not be null.</li><li type=\"disc\">185418: The map object type must be type of Att0AbstractMapping.</li><li type=\"disc\">185419: The alignment object type update be type of Att0AttributeAlignment.</li><li type=\"disc\">185420: The input source/target object to create the alignment must be type of Att0MeasurableAttribute or Att0AttributeAlignment.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrInput2",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of structures containing the details to create the measurable attribute mapping for the given elements or attributes.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputs"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrPref2",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A structure to define the preferences for mapping measurable attributes.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "pref"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrResp2",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp03.4.0",
        "description": "Create the measurable attribute mappings for the given attributes and or elements.<br />For one given attribute, this SOA retrieves the connected elements via the trace link to the source element. And create the measurable attribute mappings between the given attribute and attributes under the connected elements.<br />For one given element, this SOA retrieves the connected elements via the trace link. And create the measurable attribute mappings between the attributes under the given element and attributes under the connected elements.",
        "id": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrResp2#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::mapMeasurableAttributes2#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrInput2>,&$const,Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrPref2,&",
        "name": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::mapMeasurableAttributes2",
        "returnConst": "false",
        "returnDescription": "Contains a list of MapMeasurableAttrOutput2 structures (which contain the created <b>Att0AttributeAlignment</b> objects). Any created objects will be sent back in the standard ServiceData lists of created objects. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors.<br /><ul><ul><li type=\"disc\">185418:    The map object type should be type of <b>Att0AbstractMapping</b>.</li><li type=\"disc\">185419:    The alignment object type should be type of <b>Att0AttributeAlignment</b>.</li></ul></ul>",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2021_06::AttributeTargetManagement::PinCompareParametersInput",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of PinCompareParametersInput structure.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputs"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Teamcenter::Soa::Server::ServiceData",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp05.2.0",
        "description": "This operation pins the Parameters Comparison view to the user's Gateway.<br /> <br />Use Cases:<br />Pin Parameters Comparison view in the Gateway<br />1. User logs into Active Workpsace<br />2. User selects a system object in ACE and lunches &quot;Compare Parameters&quot;<br />3. User adds comparison elements (i.e., Veririfcation Request, Recipe ) to compare.<br />4. User chooses the &quot;Pin to Home&quot; command on the right wall<br />5. Active Workspace invokes the pinCompareParametersView operation to create a tile in the user's Gateway.",
        "id": "Teamcenter::Soa::Server::ServiceData#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::pinCompareParametersView#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2021_06::AttributeTargetManagement::PinCompareParametersInput>,&",
        "name": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::pinCompareParametersView",
        "returnConst": "false",
        "returnDescription": "The created Tile Awp0Tile object.<br />The following partial errors may be returned:<br />The Tile cannot be created, actionParams needs to be provided.<br />The Tile cannot be created, tileName needs to be provided.",
        "returnFreeMemory": "false",
        "static": "false"
      },
      {
        "OperationParameter": [
          {
            "OperationParameterDataTypeRef": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement::PublishParametersInput",
                    "qualifier": ""
                  }
                ],
                "dataType": "std::vector",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A list of structures containing the details to publish parameters",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "inputs"
          },
          {
            "OperationParameterDataTypeRef": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement::PublishParamOptions",
                "qualifier": "&"
              }
            ],
            "const": "true",
            "defaultValue": "",
            "description": "A map (string, string) of publish option name and value pairs. The valid publish options are:<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;&ldquo;publish_measurement_to_goal&rdquo;: &ldquo;true&rdquo; or &ldquo;false&rdquo;.<br />If &ldquo;true&rdquo;, set the source parameter&rsquo;s goal equalling to the target parameter&rsquo;s measurement. Otherwise, create a new measurement under the source parameter with the value equalling to the target parameter&rsquo;s measurement.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;&ldquo;publish_parameter_range&rdquo;: &ldquo;true&rdquo; or &ldquo;false&rdquo;.<br />If &ldquo;true&rdquo;, set the source parameter&rsquo;s min and max equalling to the target parameter&rsquo;s min and max; otherwise, the system doesn&rsquo;t update the source parameter&rsquo;s min and max.",
            "freeOutputMemory": "false",
            "inputOutput": "Input",
            "name": "options"
          }
        ],
        "OperationReturnDataTypeRef": [
          {
            "dataType": "Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement::PublishParametersResp",
            "qualifier": ""
          }
        ],
        "accessControl": "false",
        "const": "false",
        "createRelease": "Awp06.0.0",
        "description": "In the parameter comparison, the system can compare parameters from the source elements (e.g. Arm0RequirementElement) vs. comparison elements (e.g. Crt0VerifRequestRevision), and highlight the differences on the properties Goal, Min, Max and Measurement between the source and target parameters.<br />This operation publishes the Goal, Min, Max and Measurement properties from target parameters to source parameters. The published parameters may be the selected target parameters only, or all parameters from the selected comparison element. Note, this operation does not support the parameters with the complex data.",
        "id": "Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement::PublishParametersResp#Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::publishParameters#const,std::vector<Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement::PublishParametersInput>,&$const,Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement::PublishParamOptions,&",
        "name": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement::publishParameters",
        "returnConst": "false",
        "returnDescription": "A list of processed and unprocessed parameters. The published parameters are returned in the standard ServiceData lists of updated objects. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors.<br /><br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185275:&nbsp;&nbsp;&nbsp;&nbsp;The user doesn&rsquo;t have write access on the source parametr. <br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185276:&nbsp;&nbsp;&nbsp;&nbsp;Source and target elements and parameters can not be empty. <br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185277:&nbsp;&nbsp;&nbsp;&nbsp;The system cannot update the source parameter, because &ldquo;Goal&rdquo; is not within &bull;&nbsp;&nbsp;&nbsp;&nbsp;the range defined by &ldquo;Min&rdquo; and &ldquo;Max&rdquo; values.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185278:&nbsp;&nbsp;&nbsp;&nbsp;The system cannot publish the parameters with complex data.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185279:&nbsp;&nbsp;&nbsp;&nbsp;The input source element is invalid. The valid type is Awb0Element.<br />&bull;&nbsp;&nbsp;&nbsp;&nbsp;185280:&nbsp;&nbsp;&nbsp;&nbsp;The input comparison element is invalid. The valid types are RevisionRule, Fnd0SearchRecipe, Crt0VldnContractRevision.",
        "returnFreeMemory": "false",
        "static": "false"
      }
    ],
    "ServiceInterface": [
      {
        "createRelease": "tc10000.1.4",
        "dependencies": "",
        "description": "Measurable Attribute and Target Management Service",
        "libraryName": "Att1SoaAttrTargetMgmtAW",
        "name": "AttributeTargetManagement",
        "namespace": "Att1::Soa::AttrTargetMgmtAW",
        "serviceLibraryRef": ""
      }
    ],
    "Struct": [
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "The index of measurableAttributes in related AssignMeasurableAttributeInput.",
            "name": "index"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
              }
            ],
            "description": "The Att0MeasurableAttribute object returned by associated assign action.",
            "name": "measurableAttribute"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "AssignMeasurableAttributeInfo holds Att0MeasurableAttribute object and it associated measurableAttributes index.",
        "isPublished": "true",
        "name": "AssignMeasurableAttributeInfo",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "int"
              }
            ],
            "description": "The index of measurableAttributes in related AssignMeasurableAttributeInput2.",
            "name": "index"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
              }
            ],
            "description": "The Att0MeasurableAttribute object returned by associated assign action. <br />If the AssignAction equals to UnsetInput or UnsetOutput, the measurableAttribute will be empty since system deletes all input or output attributes as well as associated relations.",
            "name": "measurableAttribute"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Name of measurable attribute.",
            "name": "attributeName"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::WorkspaceObject"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "List of impacted primary objects e.g. Study(WorkspaceObject).",
            "name": "attributeReferenceList"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "AssignMeasurableAttributeInfo2 holds Att0MeasurableAttribute object and its associated measurableAttributes index. It also holds attributeName and list of reference WorkspaceObject objects other than parent.",
        "isPublished": "true",
        "name": "AssignMeasurableAttributeInfo2",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_06::AttributeTargetManagement::AttachMeasurableAttrOutput"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of outputs with the added measurable attributes and ignored measurable attributes.",
            "name": "outputs"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "The Service Data.",
            "name": "serviceData"
          }
        ],
        "createRelease": "Awp03.3.0",
        "description": "The structure represents the response for attaching measurable attributes.",
        "isPublished": "true",
        "name": "AttachMeasurableAttrResp",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2017_06::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
              }
            ],
            "description": "The measurable attribute object. The object must derive from Att0MeasurableAttribute.",
            "name": "attribute"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The name of the primary occurrence which is associated with measurable attribute.",
            "name": "occName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::AttributeType"
              }
            ],
            "description": "The type of Measurable Attribute. The possible values of attribute type will be SOURCEATTR, OVERRIDDENATTR, INPUTATTR, SYNCCANDIDATE, OUTPUTATTR_NOTUPDATE, OUTPUTATTR_PUBLISHCANDIDATE and OUTPUTATTR_PUBLISHED.",
            "name": "attributeType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
              }
            ],
            "description": "The source measurable attribute for the Overidden, Input and Ouput attribute. For source attribute, this field will be NULL.",
            "name": "sourceAttribute"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "This structure represents a measurable attribute and it has the associated information for the measurable attribute.",
        "isPublished": "true",
        "name": "AttributeInfo",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
              }
            ],
            "description": "The source measurable attribute for the Overridden, Input and Output attribute. For source attribute, this field will be NULL.",
            "name": "sourceAttribute"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
              }
            ],
            "description": "The measurable attribute object. The object must derive from Att0MeasurableAttribute.",
            "name": "attribute"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Specify the type of Measurable Attribute. Allowed values are SOURCEATTR, OVERRIDDENATTR, INPUTATTR, SYNCCANDIDATE, OUTPUTATTR, PUBLISHCANDIDATE, SOURCEATTRINPUT, SOURCEATTROUTPUT",
            "name": "attributeType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The name of the primary occurrence which is associated with measurable attribute.",
            "name": "occName"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "This structure represents a measurable attribute and it has the associated information for the measurable attribute.",
        "isPublished": "true",
        "name": "AttributeInfo2",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
              }
            ],
            "description": "The attribute object.",
            "name": "attribute"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MeasurableAttrAlignment"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The created attribute alignments for the attribute.",
            "name": "attrAlignments"
          }
        ],
        "createRelease": "Awp03.4.0",
        "description": "The created attribute mapping output under the source element.",
        "isPublished": "true",
        "name": "AttributeMapOutput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "This unique ID is used to identify return data elements and partial errors associated with this input structure.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Name of the relation between parent object and measurable attribute. This relation will be used to create and query the measurable attribute from parent object.",
            "name": "relationName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
              }
            ],
            "description": "Instance of measurable attribute object for modify use case, provide NULL to create a new attribute.",
            "name": "attribute"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::WorkspaceObject"
              }
            ],
            "description": "The parent object to create and associate the measurable attributes with. If value for parentLine is also provided then this parameter should be NULL.",
            "name": "parentObj"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Awb0Element"
              }
            ],
            "description": "The parent line in the product structure to create the measurable attributes. If value for parentObj is provided then this parameter will be ignored.",
            "name": "parentLine"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Awb0Element"
              }
            ],
            "description": "The context line which represents the current product context. If value for parentObj is provided then this parameter will be ignored.",
            "name": "contextLine"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::ObjectInput"
              }
            ],
            "description": "All the information needed to create or modify the measurement object.",
            "name": "measureValueObjInput"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::MeasurableAttributeInput"
              }
            ],
            "description": "All the information needed to create or modify the measurable attribute object.",
            "name": "attributeObjInput"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "CreateOrModifyAttrInput structure represents all the information needed to create or modify the measurable attribute.",
        "isPublished": "true",
        "name": "CreateOrModifyAttrInput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The unmodified value from the CreateOrModifyAttrInput.clientId. This is used by the caller to identify this data structure with the source input data.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
              }
            ],
            "description": "Represents created or modified measurable attributes for a given input. All objects must derive from Att0MeasurableAttribute.",
            "name": "measurableAttribute"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "True, id the measurable attribute object is an override",
            "name": "isOverriden"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "att0attrtargetmgmt::Att0MeasureValue"
              }
            ],
            "description": "Instance of newly created measure value object.All objects must derive from parent object Att0MeasureValue.",
            "name": "measureValue"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "CreateOrModifyAttrResp represents created or modified measurable attributes for a given input.",
        "isPublished": "true",
        "name": "CreateOrModifyAttrOutput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::CreateOrModifyAttrOutput"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "Represents created or modified measurable attributes for all the inputs.",
            "name": "attrList"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Standard ServiceData object to hold the partial errors that the operation encounters.",
            "name": "serviceData"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "CreateOrModifyAttrResp represents created or modified measurable attributes for all the inputs.",
        "isPublished": "true",
        "name": "CreateOrModifyAttrResp",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "This unique ID is used to identify return data elements and partial errors associated with this input structure.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Name of the relation between parent object and measurable attribute. This relation will be used to create and query the measurable attribute from parent object.",
            "name": "relationName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
              }
            ],
            "description": "Instance of measurable attribute object for modify use case, provide NULL to create a new attribute.",
            "name": "attribute"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::WorkspaceObject"
              }
            ],
            "description": "The parent object to create and associate the measurable attributes with. If value for parentLine is also provided then this parameter should be NULL.",
            "name": "parentObj"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Awb0Element"
              }
            ],
            "description": "The parent line in the product structure to create the measurable attributes. If value for parentObj is provided then this parameter will be ignored.",
            "name": "parentLine"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Awb0Element"
              }
            ],
            "description": "The context line which represents the current product context. If value for parentObj is provided then this parameter will be ignored.",
            "name": "contextLine"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Name of the relation between measurement object and measurement dataset.",
            "name": "measurementDatasetRelationName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Dataset"
              }
            ],
            "description": "The Dataset object to attach to measurement.",
            "name": "measurementDatasetObject"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::MeasurableAttributeInput"
              }
            ],
            "description": "All the information needed to create or modify the measurable attribute object.",
            "name": "attributeObjInput"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::ObjectInput"
              }
            ],
            "description": "All the information needed to create or modify the measurement object.",
            "name": "measureValueObjInput"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "CreateOrModifyAttrInput structure represents all the information needed to create or modify the measurable attribute.",
        "isPublished": "true",
        "name": "CreateOrUpdateAttrInput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The unmodified value from the CreateOrModifyAttrInput.clientId. This is used by the caller to identify this data structure with the source input data.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
              }
            ],
            "description": "Represents created or modified measurable attributes for a given input. All objects must derive from Att0MeasurableAttribute.",
            "name": "measurableAttribute"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "True, id the measurable attribute object is an override",
            "name": "isOverriden"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "att0attrtargetmgmt::Att0MeasureValue"
              }
            ],
            "description": "Instance of newly created measure value object.All objects must derive from parent object Att0MeasureValue.",
            "name": "measureValue"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "CreateOrUpdateAttrResp represents created or modified measurable attributes for a given input.",
        "isPublished": "true",
        "name": "CreateOrUpdateAttrOutput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::CreateOrUpdateAttrOutput"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "Represents created or modified measurable attributes for all the inputs.",
            "name": "attrList"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Standard ServiceData object to hold the partial errors that the operation encounters.",
            "name": "serviceData"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "CreateOrUpdateAttrResp represents created or modified measurable attributes for all the inputs.",
        "isPublished": "true",
        "name": "CreateOrUpdateAttrResp",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Identifier defined by client to track the related object.",
            "name": "clientID"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::AssignAction"
              }
            ],
            "description": "The desired assign action name, SetInput, SetOutput, UnsetInput, UnsetOutput, SetInputAsOutput, SetOutputAsInput.",
            "name": "actionName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::WorkspaceObject"
              }
            ],
            "description": "The parent object for input or output measurable attributes.",
            "name": "inputOutputAttrParent"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of Att0MeasurableAttribute object which will be set as input/output to parent object.",
            "name": "measurableAttributes"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Awb0Element"
              }
            ],
            "description": "The parent line in the product structure that measurableAttributes associated with. It is required if and only if assignAction equals to SetInput or SetOutput.",
            "name": "parentLine"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Awb0Element"
              }
            ],
            "description": "The context line which represents the current product context. It is required if and only if AssignAction equals to SetInput or SetOutput.",
            "name": "contextLine"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "AssignMeasurableAttributeInput structure represents the criteria to assign measurable attribute objects to input/output attribute parent object.",
        "isPublished": "true",
        "name": "AssignMeasurableAttributeInput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Awb0Element"
              }
            ],
            "description": "The source element. It cannot be empty.",
            "name": "sourceElement"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of attributes. If it is not empty, the SOA creates the attribute mappings between the given attributes in the list and attributes under the connected elements. Otherwise, it creates the attribute mappings between the attributes under the source element and the attributes under the connected elements.",
            "name": "attributes"
          }
        ],
        "createRelease": "Awp03.4.0",
        "description": "The input for the given attributes and or source elements.",
        "isPublished": "true",
        "name": "ElementAttrMapInput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Awb0Element"
              }
            ],
            "description": "The source element.",
            "name": "sourceElement"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::AttributeMapOutput"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The created attribute mapping outputs under the source element.",
            "name": "attrMapOutputs"
          }
        ],
        "createRelease": "Awp03.4.0",
        "description": "The map output.",
        "isPublished": "true",
        "name": "ElementAttrMapOutput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "This unique ID is used to identify return data elements and partial errors associated with this input structure.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "List of relation type name to get associated measurable attributes from parent object.",
            "name": "relationList"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::WorkspaceObject"
              }
            ],
            "description": "The parent object to get the measurable attributes. The parent object can be any WorkspaceObject type. If value for parentLine is also provided then this parameter should be NULL.",
            "name": "parentObj"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Awb0Element"
              }
            ],
            "description": "The parent line in the product structure to get the associated measurable attributes. If value for parentObj is provided then this parameter will be ignored.",
            "name": "parentLine"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Awb0Element"
              }
            ],
            "description": "The context line which represents the current product context. If value for parentObj is provided then this parameter will be ignored.",
            "name": "contextLine"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "GetMeasurableAttrInput structure represents all the information for all parent objects to get the associated measurable attributes.",
        "isPublished": "true",
        "name": "GetMeasurableAttrInput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The unmodified value from the GetMeasurableAttrInput.clientId. This is used by the caller to identify this data structure with the source input data.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::ParentAttrList"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of attributes for a specific relation.",
            "name": "attrList"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "True if the parentLine is assigned to parentObject in the context of contextLine.",
            "name": "isLineInValidationList"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "This structure represent all the measurable attributes for a given parent object.",
        "isPublished": "true",
        "name": "GetMeasurableAttrOutput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The unmodified value from the GetMeasurableAttrInput.clientId. This is used by the caller to identify this data structure with the source input data.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::ParentAttrList2"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of attributes for a specific relation.",
            "name": "attrList"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "True if the parentLine is assigned to inputOutputAttrParent in the context of contextLine.",
            "name": "isLineInValidationList"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "This structure represent all the measurable attributes for a given parent object.",
        "isPublished": "true",
        "name": "GetMeasurableAttrOutput2",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::GetMeasurableAttrOutput"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of measurable attributes objects for a given parent.",
            "name": "parentAttrList"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Standard ServiceData object to hold the partial errors that the operation encounters.",
            "name": "serviceData"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "GetMeasurableAttrResp structure represents all the attributes for the list of parents in input.",
        "isPublished": "true",
        "name": "GetMeasurableAttrResp",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::GetMeasurableAttrOutput2"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of measurable attributes objects for a given parent.",
            "name": "parentAttrList"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Standard ServiceData object to hold the partial errors that the operation encounters.",
            "name": "serviceData"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "GetMeasurableAttrResp structure represents all the attributes for the list of parents in input.",
        "isPublished": "true",
        "name": "GetMeasurableAttrResp2",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "This unique ID is used to identify return data elements and partial errors associated with this input structure.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "List of objects created from the input Excel file.",
            "name": "createdObjects"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "List of objects updated from the input Excel file.",
            "name": "updatedObjects"
          }
        ],
        "createRelease": "Awp04.2.0",
        "description": "Response for a ImportExcelOutputData. Returns the list of created/updated objects.",
        "isPublished": "true",
        "name": "ImportExcelOutputData",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2019_06::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The unique ID is used to identify return data elements and partial errors associated with this input structure.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The object on which the import action is performed. This object can be Att0ParamProject , Att0ParamGroup , Att0ParamDictionary or Crt0VldnContractRevision.",
            "name": "selectedObject"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The FMS ticket for the Excel file to be imported. The import file can also be a zip file if there are goal files to be uploaded. In such case, the zip file will contain an Excel file to be imported and a subfolder which will contain all the goal files to be uploaded.",
            "name": "importFileFmsTicket"
          }
        ],
        "createRelease": "Awp04.2.0",
        "description": "Input structure for importParameterExcel operation.",
        "isPublished": "true",
        "name": "ImportParamExcelInput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2019_06::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "Any partial errors occurred during the operation.",
            "name": "serviceData"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2019_06::AttributeTargetManagement::ImportExcelOutputData"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The importOutput contains the list of created/updated import objects.",
            "name": "importExcelOutput"
          }
        ],
        "createRelease": "Awp04.2.0",
        "description": "Response for a importParameterExcel operation. Returns the list of created/updated objects.",
        "isPublished": "true",
        "name": "ImportParameterExcelResponse",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2019_06::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Identifier defined by client to track the related object.",
            "name": "clientID"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The desired assign action name, SetInput, SetOutput,UnsetInput,UnsetOutput, SetInputAsOutput, SetOutputAsInput.",
            "name": "actionName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::WorkspaceObject"
              }
            ],
            "description": "The parent object for input or output measurable attributes.",
            "name": "inputOutputAttrParent"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of Att0MeasurableAttribute object which will be set as input/output to parent object.",
            "name": "measurableAttributes"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Awb0Element"
              }
            ],
            "description": "The parent line in the product structure that measurableAttributes associated with. It is required if and only if assignAction equals to SetInput or SetOutput.",
            "name": "parentLine"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Awb0Element"
              }
            ],
            "description": "The context line which represents the current product context. It is required if and only if assignAction equals to SetInput or SetOutput.",
            "name": "contextLine"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "AssignMeasurableAttributeInput2 structure represents the criteria to assign measurable attribute objects to input/output attribute parent object.",
        "isPublished": "true",
        "name": "AssignMeasurableAttributeInput2",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "A unique string supplied by the caller. This ID is used to identify returned MapMeasurableAttrOutput elements and Partial Errors associated with this input MapMeasurableAttrInput.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::POM_object"
              }
            ],
            "description": "The given context object for the attribute mappings. It is a POM_object. It cannot be null value.",
            "name": "contextObj"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::WorkspaceObject"
              }
            ],
            "description": "The given map object. If it is null, the system would query the existing map object for the given context object. If the system cannot find the existing map object, it creates a new map object for the given context object.",
            "name": "mapObj"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::ObjectPropertiesMap2"
              }
            ],
            "description": "A map (string, list of strings) of attributes names and initial values pairs. If the input map is null, the system creates the map object with the given properties values. If the input map is not null, the system ignores the parameter.",
            "name": "mapObjPropInput"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MeasurableAttrAlignmentInput"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The inputs for attribute alignments to be created under the map object.",
            "name": "alignmentInputs"
          }
        ],
        "createRelease": "Awp03.4.0",
        "description": "Contains details to create or update the measurable attribute mapping for the given context objects.",
        "isPublished": "true",
        "name": "MapMeasurableAttrInput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "A unique string supplied by the caller. This ID is used to identify returned MapMeasurableAttrOutput elements and Partial Errors associated with this input MapMeasurableAttrInput2.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::ElementAttrMapInput"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of inputs for the given attributes and or source elements.",
            "name": "elements"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::ProductInfoData"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of the root elements and product context info for these selected objects.",
            "name": "productInfo"
          }
        ],
        "createRelease": "Awp03.4.0",
        "description": "Contains details to create or update the measurable attribute mapping for the given elements or attributes.",
        "isPublished": "true",
        "name": "MapMeasurableAttrInput2",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Identifying string from the source MapMeasurableAttrInput.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::WorkspaceObject"
              }
            ],
            "description": "If the input map object is not null, return it directly. Otherwise, query via the given context object. If the system cannot find it, create a new map object and return it.",
            "name": "mapObj"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MeasurableAttrAlignment"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of newly added attribute alignments under the map object.",
            "name": "addedAlignments"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MeasurableAttrAlignment"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of ignored attribute alignments. They are ignored because the attributes already exist under the map object.",
            "name": "ignoredAlignments"
          }
        ],
        "createRelease": "Awp03.4.0",
        "description": "The map object and alignments added and ignored.",
        "isPublished": "true",
        "name": "MapMeasurableAttrOutput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Identifying string from the source MapMeasurableAttrInput.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::ElementAttrMapOutput"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The created attribute mapping outputs for the given attributes and or elements.",
            "name": "elementAttrOutputs"
          }
        ],
        "createRelease": "Awp03.4.0",
        "description": "The created attribute mappings for the given attributes and or elements.",
        "isPublished": "true",
        "name": "MapMeasurableAttrOutput2",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The type name for the map object. It should be type of Att0AbstractMapping. Note, if value is empty, the system uses Att0AttributeMapping by default.",
            "name": "mapObjType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The type name for the alignment object. It must be of type Att0AttributeAlignment Note, if it is empty, the system uses Att0AttributeAlignment by default.",
            "name": "alignmentObjType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, the input source and target objects are deleted  after the new alignment object is created..",
            "name": "toDeleteUnalignment"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, a result attribute is created for the newly populated alignment object.",
            "name": "toCreateResultAttr"
          }
        ],
        "createRelease": "Awp03.4.0",
        "description": "A structure to define the preferences for mapping measurable attributes.",
        "isPublished": "true",
        "name": "MapMeasurableAttrPref",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The type name for the map object. It should be type of <b>Att0AbstractMapping</b>. Note, if value is empty, the system uses <b>Att0AttributeMapping</b> by default.",
            "name": "mapObjType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The type name for the alignment object. It must be of type <b>Att0AttributeAlignment</b> Note, if it is empty, the system uses <b>Att0AttributeAlignment</b> by default.",
            "name": "alignmentObjType"
          }
        ],
        "createRelease": "Awp03.4.0",
        "description": "A structure to define the preferences for mapping measurable attributes.",
        "isPublished": "true",
        "name": "MapMeasurableAttrPref2",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrOutput"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of outputs with the created and ignored attribute alignments.",
            "name": "outputs"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "The Service Data.",
            "name": "serviceData"
          }
        ],
        "createRelease": "Awp03.4.0",
        "description": "Contains a list of MapMeasurableAttrOutput structures (which contain the created Att0AttributeAlignment objects). Any created objects will be sent back in the standard ServiceData lists of created objects. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors.",
        "isPublished": "true",
        "name": "MapMeasurableAttrResp",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::MapMeasurableAttrOutput2"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of outputs with the created attribute mappings for the given attributes and or elements.",
            "name": "outputs"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "The Service Data.",
            "name": "serviceData"
          }
        ],
        "createRelease": "Awp03.4.0",
        "description": "Contains a list of MapMeasurableAttrOutput2 structures (which contain the created attribute mappings). Any created objects will be sent back in the standard ServiceData lists of created objects. Any failure will be returned with client id mapped to error message in the ServiceData list of partial errors.",
        "isPublished": "true",
        "name": "MapMeasurableAttrResp2",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::POM_object"
              }
            ],
            "description": "The created or existing <b>Att0AttributeAlignment</b> object.",
            "name": "alignmentObj"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
              }
            ],
            "description": "The source attribute in the alignment.",
            "name": "sourceAttr"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
              }
            ],
            "description": "The target attribute in the alignment.",
            "name": "targetAttr"
          }
        ],
        "createRelease": "Awp03.4.0",
        "description": "A measurable attribute alignment object, with its source and target attributes.",
        "isPublished": "true",
        "name": "MeasurableAttrAlignment",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement::ObjectPropertiesMap2"
              }
            ],
            "description": "A map (string/list of strings) of attributes names and initial values pairs. If this is not empty, the system creates attribute alignment object with the given properties values.",
            "name": "alignmentPropInput"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
              }
            ],
            "description": "The base attribute used to create the result attribute. The result attribute gets created when the flag toCreateResultAttr defined in MapMeasurableAttrPref is true. It has the same name and the same attribute definition compared to the base attribute. Other properties (i.e. min/max/goal) would be empty.",
            "name": "resultAttrBase"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::POM_object"
              }
            ],
            "description": "The source object for the mapping. The system retrieves the source attribute id from the source object, which must be a Att0MeasurableAttribute or Att0AttributeAlignment. If it is a Att0AttributeAlignment and flag toDeleteUnalignment in MapMeasurableAttrPref is true, the input alignment would be deleted after the new alignment is created.",
            "name": "sourceObj"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::POM_object"
              }
            ],
            "description": "The target object for the mapping. The system retrieves the target attribute id from the target object, which must be a Att0MeasurableAttribute or Att0AttributeAlignment. If it is a Att0AttributeAlignment and flag toDeleteUnalignment in MapMeasurableAttrPref is true, the input alignment is deleted after the new alignment is created.",
            "name": "targetObj"
          }
        ],
        "createRelease": "Awp03.4.0",
        "description": "The inputs for attribute alignments to be created under the map object.",
        "isPublished": "true",
        "name": "MeasurableAttrAlignmentInput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The relation name system uses to link input measurable       attribute(Att0MeasurableAttribute) to inputOutputAttrParent object.",
            "name": "inputAttributeRelation"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The relation name system uses to link output measurable       attribute(Att0MeasurableAttribute) to inputOutputAttrParent object.",
            "name": "outputAttributeRelation"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "AssignMeasurableAttributePref structure represents input and output relation names that is used to link the input and output attributes (Att0MeasurableAttribute) to parent object.<br /><br />  If no value is provided for inputAttributeRelation, system uses default relation <br />  (Att0InputAttrRelation).<br />  If no value is provided for outputAttributeRelation, system uses default <br />  relation (Att0OutputAttrRelation).<br />",
        "isPublished": "true",
        "name": "AssignMeasurableAttributePref",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Name of the measurable attribute to create a new object. This parameter will be ignored in case of modify use case.",
            "name": "objName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::ObjectInput"
              }
            ],
            "description": "Measurable Aattribute type and property information to update or create the measurable attribute.",
            "name": "objInput"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "MeasurableAttributeInput structure represents all the information needed to create or modify the measurable attribute object.",
        "isPublished": "true",
        "name": "MeasurableAttributeInput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Type of the object to create a new object. The allowed values are Att0MeasurableAttribute and Att0MeasureValue.",
            "name": "objType"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::ObjectPropertiesMap"
              }
            ],
            "description": "Name value pair (string/list of strings) of property name and its value to create or modify the properties on object. The calling client is responsible for converting the different property types (int, float, date .etc) to a string using the appropriate toXXXString functions in the SOA client framework's Property class.",
            "name": "objPropertiesMap"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "ObjectInput structure represents all the information needed to create or modify an object.",
        "isPublished": "true",
        "name": "ObjectInput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The name of the relation using which parent object and measurable attributes objects are connected.",
            "name": "relationType"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::AttributeInfo"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of measurable attributes associated with the parent object using relationType relation.",
            "name": "attrObjList"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "This structure represents the list of attributes associated with a given parent object using a specific relation.",
        "isPublished": "true",
        "name": "ParentAttrList",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The name of the relation using which parent object and measurable attributes objects are connected.",
            "name": "relationType"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::AttributeInfo2"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of measurable attributes associated with the parent object using relationType relation.",
            "name": "attrObjList"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "This structure represents the list of attributes associated with a given parent object using a specific relation.",
        "isPublished": "true",
        "name": "ParentAttrList2",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Awb0Element"
              }
            ],
            "description": "The root element for this object.",
            "name": "rootElement"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Awb0ProductContextInfo"
              }
            ],
            "description": "The product context for this object.",
            "name": "productContext"
          }
        ],
        "createRelease": "Awp03.4.0",
        "description": "The root element and product context info for a selected object.",
        "isPublished": "true",
        "name": "ProductInfoData",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "A unique string supplied by the caller. This ID is used to identify returned RemoveParametersOutput elements and Partial Errors associated with this input RemoveParametersInput.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The parent object for the selected Parameters, such as Att0ParamProject, Att0ParamGroup, Fnd0SystemModelRevision, Awp0RequirementRevision and etc.",
            "name": "parent"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of selected Parameters to remove.",
            "name": "selectedParams"
          }
        ],
        "createRelease": "Awp04.3.0",
        "description": "Input structure for removeParameters operation.",
        "isPublished": "true",
        "name": "RemoveParametersInput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Identifying string from the source removeParametersInput.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of Parameters which were removed from the parent object.",
            "name": "removedParams"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of Parameters which cannot be removed.",
            "name": "ignoredParams"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of Parameter&rsquo;s UIDs which were deleted from the database.",
            "name": "deletedParams"
          }
        ],
        "createRelease": "Awp04.3.0",
        "description": "Response for a removeParametersOutput. Returns the list of removed/ignored/deleted parameters.",
        "isPublished": "true",
        "name": "RemoveParametersOutput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement::RemoveParametersOutput"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of outputs with removed Parameters.",
            "name": "outputs"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "The Service Data.",
            "name": "serviceData"
          }
        ],
        "createRelease": "Awp04.3.0",
        "description": "Response for a removeParameters operation. Returns the list of removed/ignored/deleted parameters.",
        "isPublished": "true",
        "name": "RemoveParametersResp",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
              }
            ],
            "description": "The selected Parameter to replace.",
            "name": "selectedParam"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
              }
            ],
            "description": "The target Parameter used to replace the selected one. If it is NULL, the operation revises the selected Parameter and then replace it with the newly revised Parameter.",
            "name": "targetParam"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement::RevisePropertiesMap"
              }
            ],
            "description": "A map (string/list of strings) of attributes names and initial values pairs. If this is not empty, the system revises the selected Parameter with the given properties values.",
            "name": "revisePropInput"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, revise and replace the selected parameter. Otherwise, revise the parameter only if targetParams is empty.",
            "name": "reviseAndReplace"
          }
        ],
        "createRelease": "Awp04.3.0",
        "description": "Input structure for replaceParameters operation.",
        "isPublished": "true",
        "name": "ReplaceParamInput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "A unique string supplied by the caller. This ID is used to identify returned ReplaceParametersOutput elements and Partial Errors associated with this input ReplaceParametersInput.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The parent object for the selected Parameters, such as Fnd0SystemModelRevision, Awp0RequirementRevision etc.",
            "name": "parent"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement::ReplaceParamInput"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of selected Parameters to replace.",
            "name": "replaceParams"
          }
        ],
        "createRelease": "Awp04.3.0",
        "description": "Input structure for replaceParameters operation.",
        "isPublished": "true",
        "name": "ReplaceParametersInput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The relation name system uses to link input measurable       attribute(Att0MeasurableAttribute) to inputOutputAttrParent object.",
            "name": "inputAttributeRelation"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The relation name system uses to link output measurable       attribute(Att0MeasurableAttribute) to inputOutputAttrParent object.",
            "name": "outputAttributeRelation"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "This input flag, indicates to proceed or not , if Validation Context(WorkspaceObject) measurable attributes (Att0MeasurableAttribute) is referenced in Study. This flag will useful only in case if assignAction equals to UnsetInput or  UnsetOutput or SetInputAsOutput or SetOutputAsInput. Values are 'true' or 'false'.",
            "name": "proceedWithImpactedStudies"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "AssignMeasurableAttributePref2 structure represents input and output relation names that is used to link the input and output attributes (Att0MeasurableAttribute) to parent object.<br /><ul><ul><li type=\"disc\">If no value is provided for inputAttributeRelation, system uses default relation (Att0InputAttrRelation).</li><li type=\"disc\">If no value is provided for outputAttributeRelation, system uses default relation (Att0OutputAttrRelation).</li></ul></ul>",
        "isPublished": "true",
        "name": "AssignMeasurableAttributePref2",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Identifying string from the source ReplaceParametersInput.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of old Parameters which were replaced with new ones.",
            "name": "oldParams"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of new Parameters which were used to replace old ones.",
            "name": "newParams"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of Parameters which cannot be replaced.",
            "name": "ignoredParams"
          }
        ],
        "createRelease": "Awp04.3.0",
        "description": "Response for a ReplaceParametersOutput. Returns the list of replaced/ignored parameters.",
        "isPublished": "true",
        "name": "ReplaceParametersOutput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement::ReplaceParametersOutput"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of outputs with replaced Parameters.",
            "name": "outputs"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "The Service Data.",
            "name": "serviceData"
          }
        ],
        "createRelease": "Awp04.3.0",
        "description": "Response for a replaceParameters operation. Returns the list of replaced/ignored parameters.",
        "isPublished": "true",
        "name": "ReplaceParametersResp",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "This unique ID is used to identify return data elements and partial errors associated with this input structure.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The given parent object. It should be WorkspaceObject or Awb0Element. When the parent is WorkspaceObject, the operation sets the parameter direction between the parent and selected parameters. When the parent is Awb0Element, the operation sets the parameter direction between the corresponding undering object of Awb0Element and the selected parameters.",
            "name": "parent"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The selected parameters to be updated. They should be Att0MeasurableAttribute or Att1AttributeAlignmentProxy.",
            "name": "parameters"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The parameter direction to be updated on the parent. Valid direction strings are:  &ldquo;input&rdquo;, &ldquo;output&rdquo;, or &ldquo;unused&rdquo;. If the direction equals to &ldquo;input&rdquo;, the parameter is used to capture the input value  for the simulation process. If the direction equals to &ldquo;output&rdquo;, the parameter is used to capture the simulation result. If the direction equals to &ldquo;unused&rdquo;, the parameter is used to descbie some character for the parent.",
            "name": "paramDirection"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "Structure required to set the direction for the selected parameters on the given parent.",
        "isPublished": "true",
        "name": "SetParamsDirectionInput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2020_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The unmodified value from the UpdateParamProperties.clientId. This is used by the caller to identify this data structure with the source input data.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of updated parameters.",
            "name": "updatedParams"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of ignored parameters.",
            "name": "ignoredParams"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The parent object.",
            "name": "parent"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "SetParamsDirectionOutput represents the updated parameters.",
        "isPublished": "true",
        "name": "SetParamsDirectionOutput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2020_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2020_12::AttributeTargetManagement::SetParamsDirectionOutput"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of updated parameters.",
            "name": "outputs"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "ServiceData object to hold the partial errors that the operation encounters.",
            "name": "serviceData"
          }
        ],
        "createRelease": "Awp05.1.0",
        "description": "SetParamsDirectionResp represents the updated parameters for all inputs.",
        "isPublished": "true",
        "name": "SetParamsDirectionResp",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2020_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Identifier defined by client to track the related object.",
            "name": "clientID"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::WorkspaceObject"
              }
            ],
            "description": "The parent object holds list of measurable attributes which need to be synchronized.",
            "name": "parentObj"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
                  }
                ],
                     "dataType": "std::vector"
              }
            ],
            "description": "A list of <i>Att0MeasurableAttribute</i> object which needs to be synchronized or published.",
            "name": "attrCandidates"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "<i>SyncMeasurableAttributeInput</i> structure represents the criteria to synchronize measurable attribute objects",
        "isPublished": "true",
        "name": "SyncMeasurableAttributeInput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::SyncDirection"
              }
            ],
            "description": "It represents the synchronization direction.",
            "name": "direction"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of relation names from where the system traverses a list of input <i>Att0MeasurableAttribute</i> objects to synchronize.<br /><ul><ul><li type=\"disc\">If direction is <i>SyncFromSource</i>, this parameter is used along with parentObj to find a list of <i>Att0MeasurableAttribute</i> which will be updated with latest values from source <i>Att0MeasurableAttribute</i> as well as latest <i>Att0MeasurableValue</i> related to each <i>Att0MeasurableAttribute</i></li></ul></ul>",
            "name": "inputRelations"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of relation names from where the system traverses a list of output <i>Att0MeasurableAttribute</i> objects to publish.<br /><ul><ul><li type=\"disc\">If <i>direction</i> is <i>SyncFromSource</i>, this parameter is used along with parentObj to find a list of output <i>Att0MeasurableAttribute</i>. Then the system removes <i>Att0Measurement</i> object for each output <i>Att0MeasurableAttribute</i> object.</li><li type=\"disc\">If <i>direction</i> is <i>PublishToSource</i>, this parameter is used along with parentObj to find a list of output <i>Att0MeasurableAttribute</i> objects. Then the system will insert the latest <i>Att0MeasurableValue</i> to source <i>Att0MeasurableAttribute</i> for each output <i>Att0MeasurableAttribute</i> object .</li></ul></ul>",
            "name": "outputRelations"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "<i>SyncMeasurableAttributePref</i> structure represents the synchronization direction(synchonize from source or publish to source), and input relations as well as output relations which are used to find out all input or output measurable attributes.",
        "isPublished": "true",
        "name": "SyncMeasurableAttributePref",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "The Service Data with partial errors identified by its clientId.",
            "name": "serviceData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::SyncMeasurableAttributesMap"
              }
            ],
            "description": "Map input client ID to list of <i>Att0MeasurableAttribute</i> objects",
            "name": "outputMap"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "<i>SyncMeasurableAttributeResponse</i> holds the response of synchronize Measuable Attributes. This output structure contains service data with partial errors and an outputMap which contains list of <i>Att0MeasurableAttribute</i> objects which have been synchronized.",
        "isPublished": "true",
        "name": "SyncMeasurableAttributeResponse",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "The Service Data with partial errors for AssignMeasurableAttributeInput identified by its clientId.",
            "name": "serviceData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::AssignMeasurableAttributesMap"
              }
            ],
            "description": "A map (string/list) of client identifer and list of AssignMeasurableAttributeInfo) pairs.   <br />If the AssignAction equals to UnsetInput or UnsetOutput, the outputMap will be empty since system deletes all input or output attributes as well as associated relations.<br />",
            "name": "outputMap"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "AssignMeasurableAttributesResponse holds the response of assignMeasuableAttributes. This output structure contains service data with partial errors and outputMap which contains list of Att0MeasurableAttribute objects related to assign action.",
        "isPublished": "true",
        "name": "AssignMeasurableAttributesResponse",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "The Service Data with partial errors for AssignMeasurableAttributeInput2 identified by its clientId.",
            "name": "serviceData"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::AssignMeasurableAttributesMap2"
              }
            ],
            "description": "A map of string client identifer and list of AssignMeasurableAttributeInfo pairs.<br />If the AssignAction equals to UnsetInput or UnsetOutput, the outputMap will be empty since system deletes all input or output attributes as well as associated relations.",
            "name": "outputMap"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "AssignMeasurableAttributesResponse2 holds the response of assignMeasuableAttributes. This output structure contains service data with partial errors and outputMap which contains list of Att0MeasurableAttribute objects related to assign action.",
        "isPublished": "true",
        "name": "AssignMeasurableAttributesResponse2",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "A unique string supplied by the caller. This ID is used to identify returned AttachMeasurableAttrOutput elements and Partial Errors associated with this input AttachMeasurableAttrInput.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The given business object where to add the measurable attribute. It must be a type of <b>WorkspaceObject</b> or <b>Awb0Element</b>.",
            "name": "parentObj"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The list of <b>Att0MeasurableAttribute</b> objects to be added.",
            "name": "attrList"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The specified relation name.",
            "name": "relation"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "bool"
              }
            ],
            "description": "If true, it hard copies the attributes and adds the copied attributes to the parent object. If false, it adds the attributes to the parent object directly.",
            "name": "addAsCopy"
          }
        ],
        "createRelease": "Awp03.3.0",
        "description": "The structure represents the request details for attaching measurable attributes.",
        "isPublished": "true",
        "name": "AttachMeasurableAttrInput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2017_06::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The tileName is the name of the tile Awp0Tile and it should not be empty.",
            "name": "tileName"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The template Id is the name of the template which is used to create Awp0Tile. If the template ID isn&rsquo;t valid, then no template is set on the Awp0Tile object. If the value is an empty string, then the &lsquo;Prm1ParameterCompareTemplate &lsquo;ID is used by default.",
            "name": "templateId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "The actionParams are parameters to set on the Awp0Tile object. The syntax for actionParams is in the format of &lt;name&gt;=&lt;value&gt;;&lt;name2&gt;=&lt;value2&gt;;&lt;name3&gt;=&lt;value3&gt;... Where name/value pairs are delimited by semicolon",
            "name": "actionParams"
          }
        ],
        "createRelease": "Awp05.2.0",
        "description": "Structure required to collect the information to pin views to Home.",
        "isPublished": "true",
        "name": "PinCompareParametersInput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2021_06::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Identifying string from the source AttachMeasurableAttrInput",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The newly added measurable attributes",
            "name": "addedAttrList"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "The ingored measurable attributes. Because a measurable attribute with the same name exists under the given object.",
            "name": "ignoredAttrList"
          }
        ],
        "createRelease": "Awp03.3.0",
        "description": "The structure represents the output details with the added attributes and ignored attributes.",
        "isPublished": "true",
        "name": "AttachMeasurableAttrOutput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2017_06::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
       {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The comparison element.",
            "name": "comparisonElement"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of published parameters from the comparsion element.",
            "name": "processedParams"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of parameters that cannot be published.",
            "name": "unprocessedParams"
          }
        ],
        "createRelease": "Awp06.0.0",
        "description": "PublishParameOut structure represents the processed parameters and unprocessed parameters from the comparison element.",
        "isPublished": "true",
        "name": "PublishParamOut",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "A unique string supplied by the caller. This ID is used to identify returned PublishToSourceParamOutput elements and Partial Errors associated to input.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement::ComparisonElementPublishInput"
              }
            ],
            "description": "The selected comparison element to publish.",
            "name": "compElementPublishInput"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "att1attrtargetmgmtaw::Att1AttributeAlignmentProxy"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of Att1AttributeAlignmentProxy objects to publish.",
            "name": "parametersPublishInput"
          }
        ],
        "createRelease": "Awp06.0.0",
        "description": "PublishParametersInput structure represents the comparison element to publish or the selected parameters to publish.",
        "isPublished": "true",
        "name": "PublishParametersInput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              }
            ],
            "description": "Identifying string from the input.",
            "name": "clientId"
          },
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement::PublishParamOut"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of outputs with processed and unprocessed parameters.",
            "name": "publishParamOut"
          }
        ],
        "createRelease": "Awp06.0.0",
        "description": "PublishParametersOutput structure represents the list of publish parameter output and client id.",
        "isPublished": "true",
        "name": "PublishParametersOutput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement::PublishParametersOutput"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of outputs with published parameters.",
            "name": "output"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::Soa::Server::ServiceData"
              }
            ],
            "description": "The Service Data",
            "name": "serviceData"
          }
        ],
        "createRelease": "Awp06.0.0",
        "description": "PublishParametersResp structure represents the list publish outputs and service data",
        "isPublished": "true",
        "name": "PublishParametersResp",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "StructElement": [
          {
            "DataTypeRefParam": [
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Teamcenter::BusinessObject"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "description": "A list of source elements that own the source parameters. The valid type is <b>Awb0Element.</b>",
            "name": "sourceElements"
          },
          {
            "DataTypeRefParam": [
              {
                "dataType": "Teamcenter::BusinessObject"
              }
            ],
            "description": "The comparison element to publish. The system will find the candidate parameters from the comparison element to publish. The valid comparsion element types are RevisionRule, Fnd0SearchRecipe, Crt0VldnContractRevision",
            "name": "comparsionElement"
          }
        ],
        "createRelease": "Awp06.0.0",
        "description": "ComparisonElementPublishInput structure represents the selected comparison element and related source elements.",
        "isPublished": "true",
        "name": "ComparisonElementPublishInput",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      }
    ],
    "TcVersion": "tc12000.0.0",
    "Typedef": [
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement::AssignMeasurableAttributeInfo"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "AssignMeasurableAttributesMap Contains client Id and list of AssignMeasurableAttributeInfo structure which holds Att0MeasurableAttribute objects based on assign action.<br />Elements:<br />key&nbsp;&nbsp;&nbsp;&nbsp;Client identifier defined by user to track the related object.<br />values&nbsp;&nbsp;&nbsp;&nbsp;List of AssignMeasurableAttributeInfo objects for this client Id.<br />",
        "isPublished": "true",
        "name": "AssignMeasurableAttributesMap",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement::AssignMeasurableAttributeInfo2"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "AssignMeasurableAttributesMap2 Contains client Id and list of AssignMeasurableAttributeInfo2 structure which holds Att0MeasurableAttribute objects based on assign action.<br />Elements:<br /><ul><ul><li type=\"disc\">key     Client identifier defined by user to track the related object. </li><li type=\"disc\">values  List of AssignMeasurableAttributeInfo2 objects for this client Id.</li></ul></ul>",
        "isPublished": "true",
        "name": "AssignMeasurableAttributesMap2",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.4",
        "description": "Name value pair (string/list of string) of the property name and its value. The calling client is responsible for converting the different property types (int, float, date .etc) to a string using the appropriate toXXXString functions in the SOA client framework's Property class.",
        "isPublished": "true",
        "name": "ObjectPropertiesMap",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_03::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "std::vector<std::string>"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp03.4.0",
        "description": "Name value pair (string/list of string) of the property name and its value. The calling client is responsible for converting the different property types (int, float, date .etc) to a string using the appropriate toXXXString functions in the SOA client framework's Property class.",
        "isPublished": "true",
        "name": "ObjectPropertiesMap2",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2017_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "std::string"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp04.3.0",
        "description": "A map (string/list of strings) of attributes names and initial values pairs. If this is not empty, the system revises the selected Parameter with the given properties values.",
        "isPublished": "true",
        "name": "RevisePropertiesMap",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2019_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "DataTypeRefParam": [
                  {
                    "dataType": "att0attrtargetmgmt::Att0MeasurableAttribute"
                  }
                ],
                "dataType": "std::vector"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "tc10000.1.5",
        "description": "<i>SyncMeasurableAttributeMap</i> contains client Id and <i>Att0MeasurableAttribute</i> objects which have been synchonized.<br /><ul><ul><li type=\"disc\">If <i>direction</i> is <i>SyncFromSource</i>, <i>SyncMeasurableAttributeMap</i> contains all input <i>Att0MeasurableAttribute</i> objects that been synchronized successfully.</li><li type=\"disc\">If <i>direction</i> is <i>PublishToSource</i>, <i>SyncMeasurableAttributeMap</i> contains all source <i>Att0MeasurableAttribute</i> objects that been published successfully.</li></ul></ul>",
        "isPublished": "true",
        "name": "SyncMeasurableAttributesMap",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2015_10::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      },
      {
        "DataTypeRefParam": [
          {
            "DataTypeRefParam": [
              {
                "dataType": "std::string"
              },
              {
                "dataType": "std::string"
              }
            ],
            "dataType": "std::map"
          }
        ],
        "createRelease": "Awp06.0.0",
        "description": "A map (string, string) of publish option name and value pairs.",
        "isPublished": "true",
        "name": "PublishParamOptions",
        "namespace": "Att1::Soa::AttrTargetMgmtAW::_2021_12::AttributeTargetManagement",
        "scope": "Att1::Soa::AttrTargetMgmtAW::AttributeTargetManagement"
      }
    ],
    "xmlns": "http://teamcenter.com/BusinessModel/TcBusinessData"
  }
